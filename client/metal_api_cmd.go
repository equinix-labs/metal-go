// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/spf13/cobra"

	"github.com/t0mk/gometal/client/batches"
	"github.com/t0mk/gometal/client/bgp"
	"github.com/t0mk/gometal/client/capacity"
	"github.com/t0mk/gometal/client/connections"
	"github.com/t0mk/gometal/client/devices"
	"github.com/t0mk/gometal/client/emails"
	"github.com/t0mk/gometal/client/events"
	"github.com/t0mk/gometal/client/facilities"
	"github.com/t0mk/gometal/client/hardware_reservations"
	"github.com/t0mk/gometal/client/incidents"
	"github.com/t0mk/gometal/client/internet_gateways"
	"github.com/t0mk/gometal/client/invitations"
	"github.com/t0mk/gometal/client/ip_addresses"
	"github.com/t0mk/gometal/client/licenses"
	"github.com/t0mk/gometal/client/market"
	"github.com/t0mk/gometal/client/memberships"
	"github.com/t0mk/gometal/client/operating_system_versions"
	"github.com/t0mk/gometal/client/operating_systems"
	"github.com/t0mk/gometal/client/organizations"
	"github.com/t0mk/gometal/client/otps"
	"github.com/t0mk/gometal/client/password_reset_tokens"
	"github.com/t0mk/gometal/client/payment_methods"
	"github.com/t0mk/gometal/client/plans"
	"github.com/t0mk/gometal/client/ports"
	"github.com/t0mk/gometal/client/projects"
	"github.com/t0mk/gometal/client/regions"
	"github.com/t0mk/gometal/client/spot_market_request"
	"github.com/t0mk/gometal/client/ssh_keys"
	"github.com/t0mk/gometal/client/transfer_requests"
	"github.com/t0mk/gometal/client/two_factor_auth"
	"github.com/t0mk/gometal/client/user_verification_tokens"
	"github.com/t0mk/gometal/client/userdata"
	"github.com/t0mk/gometal/client/users"
	"github.com/t0mk/gometal/client/v_l_a_ns"
	"github.com/t0mk/gometal/client/volumes"
	"github.com/t0mk/gometal/client/vpn"
)

func NewCommandWithDefaultClient() *cobra.Command {
	return NewCommand(Default)
}

func NewCommand(client *MetalAPI) *cobra.Command {
	ctx := context.Background()

	command := &cobra.Command{
		Use: "metal_api",
	}

	command.AddCommand(batches.Command(ctx, client.Batches))

	command.AddCommand(bgp.Command(ctx, client.BGP))

	command.AddCommand(capacity.Command(ctx, client.Capacity))

	command.AddCommand(connections.Command(ctx, client.Connections))

	command.AddCommand(devices.Command(ctx, client.Devices))

	command.AddCommand(emails.Command(ctx, client.Emails))

	command.AddCommand(events.Command(ctx, client.Events))

	command.AddCommand(facilities.Command(ctx, client.Facilities))

	command.AddCommand(hardware_reservations.Command(ctx, client.HardwareReservations))

	command.AddCommand(incidents.Command(ctx, client.Incidents))

	command.AddCommand(internet_gateways.Command(ctx, client.InternetGateways))

	command.AddCommand(invitations.Command(ctx, client.Invitations))

	command.AddCommand(ip_addresses.Command(ctx, client.IPAddresses))

	command.AddCommand(licenses.Command(ctx, client.Licenses))

	command.AddCommand(market.Command(ctx, client.Market))

	command.AddCommand(memberships.Command(ctx, client.Memberships))

	command.AddCommand(operating_system_versions.Command(ctx, client.OperatingSystemVersions))

	command.AddCommand(operating_systems.Command(ctx, client.OperatingSystems))

	command.AddCommand(organizations.Command(ctx, client.Organizations))

	command.AddCommand(otps.Command(ctx, client.Otps))

	command.AddCommand(password_reset_tokens.Command(ctx, client.PasswordResetTokens))

	command.AddCommand(payment_methods.Command(ctx, client.PaymentMethods))

	command.AddCommand(plans.Command(ctx, client.Plans))

	command.AddCommand(ports.Command(ctx, client.Ports))

	command.AddCommand(projects.Command(ctx, client.Projects))

	command.AddCommand(regions.Command(ctx, client.Regions))

	command.AddCommand(spot_market_request.Command(ctx, client.SpotMarketRequest))

	command.AddCommand(ssh_keys.Command(ctx, client.SSHKeys))

	command.AddCommand(transfer_requests.Command(ctx, client.TransferRequests))

	command.AddCommand(two_factor_auth.Command(ctx, client.TwoFactorAuth))

	command.AddCommand(user_verification_tokens.Command(ctx, client.UserVerificationTokens))

	command.AddCommand(userdata.Command(ctx, client.Userdata))

	command.AddCommand(users.Command(ctx, client.Users))

	command.AddCommand(v_l_a_ns.Command(ctx, client.VlaNs))

	command.AddCommand(volumes.Command(ctx, client.Volumes))

	command.AddCommand(vpn.Command(ctx, client.VPN))

	return command
}
