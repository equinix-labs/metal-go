/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// InstancesBatchCreateInputBatches struct for InstancesBatchCreateInputBatches
type InstancesBatchCreateInputBatches struct {
	Plan *string `json:"plan,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Hostnames *[]string `json:"hostnames,omitempty"`
	// Array of facility codes the batch can use for provisioning. This param also takes a string if you want the batch to be fulfilled in only one facility.
	Facility *[]string `json:"facility,omitempty"`
	Description *string `json:"description,omitempty"`
	BillingCycle *string `json:"billing_cycle,omitempty"`
	OperatingSystem *string `json:"operating_system,omitempty"`
	AlwaysPxe *bool `json:"always_pxe,omitempty"`
	Userdata *string `json:"userdata,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	TerminationTime *time.Time `json:"termination_time,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	ProjectSshKeys *[]string `json:"project_ssh_keys,omitempty"`
	// The UUIDs of users whose SSH keys should be included on the provisioned device.
	UserSshKeys *[]string `json:"user_ssh_keys,omitempty"`
	Features *[]string `json:"features,omitempty"`
	Customdata *map[string]interface{} `json:"customdata,omitempty"`
	IpAddresses *[]InstancesBatchCreateInputIpAddresses `json:"ip_addresses,omitempty"`
}

// NewInstancesBatchCreateInputBatches instantiates a new InstancesBatchCreateInputBatches object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstancesBatchCreateInputBatches() *InstancesBatchCreateInputBatches {
	this := InstancesBatchCreateInputBatches{}
	return &this
}

// NewInstancesBatchCreateInputBatchesWithDefaults instantiates a new InstancesBatchCreateInputBatches object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstancesBatchCreateInputBatchesWithDefaults() *InstancesBatchCreateInputBatches {
	this := InstancesBatchCreateInputBatches{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetPlan() string {
	if o == nil || o.Plan == nil {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetPlanOk() (*string, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *InstancesBatchCreateInputBatches) SetPlan(v string) {
	o.Plan = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *InstancesBatchCreateInputBatches) SetHostname(v string) {
	o.Hostname = &v
}

// GetHostnames returns the Hostnames field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetHostnames() []string {
	if o == nil || o.Hostnames == nil {
		var ret []string
		return ret
	}
	return *o.Hostnames
}

// GetHostnamesOk returns a tuple with the Hostnames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetHostnamesOk() (*[]string, bool) {
	if o == nil || o.Hostnames == nil {
		return nil, false
	}
	return o.Hostnames, true
}

// HasHostnames returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasHostnames() bool {
	if o != nil && o.Hostnames != nil {
		return true
	}

	return false
}

// SetHostnames gets a reference to the given []string and assigns it to the Hostnames field.
func (o *InstancesBatchCreateInputBatches) SetHostnames(v []string) {
	o.Hostnames = &v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetFacility() []string {
	if o == nil || o.Facility == nil {
		var ret []string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetFacilityOk() (*[]string, bool) {
	if o == nil || o.Facility == nil {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasFacility() bool {
	if o != nil && o.Facility != nil {
		return true
	}

	return false
}

// SetFacility gets a reference to the given []string and assigns it to the Facility field.
func (o *InstancesBatchCreateInputBatches) SetFacility(v []string) {
	o.Facility = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InstancesBatchCreateInputBatches) SetDescription(v string) {
	o.Description = &v
}

// GetBillingCycle returns the BillingCycle field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetBillingCycle() string {
	if o == nil || o.BillingCycle == nil {
		var ret string
		return ret
	}
	return *o.BillingCycle
}

// GetBillingCycleOk returns a tuple with the BillingCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetBillingCycleOk() (*string, bool) {
	if o == nil || o.BillingCycle == nil {
		return nil, false
	}
	return o.BillingCycle, true
}

// HasBillingCycle returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasBillingCycle() bool {
	if o != nil && o.BillingCycle != nil {
		return true
	}

	return false
}

// SetBillingCycle gets a reference to the given string and assigns it to the BillingCycle field.
func (o *InstancesBatchCreateInputBatches) SetBillingCycle(v string) {
	o.BillingCycle = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetOperatingSystemOk() (*string, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *InstancesBatchCreateInputBatches) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetAlwaysPxe returns the AlwaysPxe field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetAlwaysPxe() bool {
	if o == nil || o.AlwaysPxe == nil {
		var ret bool
		return ret
	}
	return *o.AlwaysPxe
}

// GetAlwaysPxeOk returns a tuple with the AlwaysPxe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetAlwaysPxeOk() (*bool, bool) {
	if o == nil || o.AlwaysPxe == nil {
		return nil, false
	}
	return o.AlwaysPxe, true
}

// HasAlwaysPxe returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasAlwaysPxe() bool {
	if o != nil && o.AlwaysPxe != nil {
		return true
	}

	return false
}

// SetAlwaysPxe gets a reference to the given bool and assigns it to the AlwaysPxe field.
func (o *InstancesBatchCreateInputBatches) SetAlwaysPxe(v bool) {
	o.AlwaysPxe = &v
}

// GetUserdata returns the Userdata field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetUserdata() string {
	if o == nil || o.Userdata == nil {
		var ret string
		return ret
	}
	return *o.Userdata
}

// GetUserdataOk returns a tuple with the Userdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetUserdataOk() (*string, bool) {
	if o == nil || o.Userdata == nil {
		return nil, false
	}
	return o.Userdata, true
}

// HasUserdata returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasUserdata() bool {
	if o != nil && o.Userdata != nil {
		return true
	}

	return false
}

// SetUserdata gets a reference to the given string and assigns it to the Userdata field.
func (o *InstancesBatchCreateInputBatches) SetUserdata(v string) {
	o.Userdata = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *InstancesBatchCreateInputBatches) SetLocked(v bool) {
	o.Locked = &v
}

// GetTerminationTime returns the TerminationTime field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetTerminationTime() time.Time {
	if o == nil || o.TerminationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.TerminationTime
}

// GetTerminationTimeOk returns a tuple with the TerminationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetTerminationTimeOk() (*time.Time, bool) {
	if o == nil || o.TerminationTime == nil {
		return nil, false
	}
	return o.TerminationTime, true
}

// HasTerminationTime returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasTerminationTime() bool {
	if o != nil && o.TerminationTime != nil {
		return true
	}

	return false
}

// SetTerminationTime gets a reference to the given time.Time and assigns it to the TerminationTime field.
func (o *InstancesBatchCreateInputBatches) SetTerminationTime(v time.Time) {
	o.TerminationTime = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *InstancesBatchCreateInputBatches) SetTags(v []string) {
	o.Tags = &v
}

// GetProjectSshKeys returns the ProjectSshKeys field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetProjectSshKeys() []string {
	if o == nil || o.ProjectSshKeys == nil {
		var ret []string
		return ret
	}
	return *o.ProjectSshKeys
}

// GetProjectSshKeysOk returns a tuple with the ProjectSshKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetProjectSshKeysOk() (*[]string, bool) {
	if o == nil || o.ProjectSshKeys == nil {
		return nil, false
	}
	return o.ProjectSshKeys, true
}

// HasProjectSshKeys returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasProjectSshKeys() bool {
	if o != nil && o.ProjectSshKeys != nil {
		return true
	}

	return false
}

// SetProjectSshKeys gets a reference to the given []string and assigns it to the ProjectSshKeys field.
func (o *InstancesBatchCreateInputBatches) SetProjectSshKeys(v []string) {
	o.ProjectSshKeys = &v
}

// GetUserSshKeys returns the UserSshKeys field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetUserSshKeys() []string {
	if o == nil || o.UserSshKeys == nil {
		var ret []string
		return ret
	}
	return *o.UserSshKeys
}

// GetUserSshKeysOk returns a tuple with the UserSshKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetUserSshKeysOk() (*[]string, bool) {
	if o == nil || o.UserSshKeys == nil {
		return nil, false
	}
	return o.UserSshKeys, true
}

// HasUserSshKeys returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasUserSshKeys() bool {
	if o != nil && o.UserSshKeys != nil {
		return true
	}

	return false
}

// SetUserSshKeys gets a reference to the given []string and assigns it to the UserSshKeys field.
func (o *InstancesBatchCreateInputBatches) SetUserSshKeys(v []string) {
	o.UserSshKeys = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetFeatures() []string {
	if o == nil || o.Features == nil {
		var ret []string
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetFeaturesOk() (*[]string, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *InstancesBatchCreateInputBatches) SetFeatures(v []string) {
	o.Features = &v
}

// GetCustomdata returns the Customdata field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetCustomdata() map[string]interface{} {
	if o == nil || o.Customdata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Customdata
}

// GetCustomdataOk returns a tuple with the Customdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetCustomdataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Customdata == nil {
		return nil, false
	}
	return o.Customdata, true
}

// HasCustomdata returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasCustomdata() bool {
	if o != nil && o.Customdata != nil {
		return true
	}

	return false
}

// SetCustomdata gets a reference to the given map[string]interface{} and assigns it to the Customdata field.
func (o *InstancesBatchCreateInputBatches) SetCustomdata(v map[string]interface{}) {
	o.Customdata = &v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *InstancesBatchCreateInputBatches) GetIpAddresses() []InstancesBatchCreateInputIpAddresses {
	if o == nil || o.IpAddresses == nil {
		var ret []InstancesBatchCreateInputIpAddresses
		return ret
	}
	return *o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesBatchCreateInputBatches) GetIpAddressesOk() (*[]InstancesBatchCreateInputIpAddresses, bool) {
	if o == nil || o.IpAddresses == nil {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *InstancesBatchCreateInputBatches) HasIpAddresses() bool {
	if o != nil && o.IpAddresses != nil {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []InstancesBatchCreateInputIpAddresses and assigns it to the IpAddresses field.
func (o *InstancesBatchCreateInputBatches) SetIpAddresses(v []InstancesBatchCreateInputIpAddresses) {
	o.IpAddresses = &v
}

func (o InstancesBatchCreateInputBatches) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Hostnames != nil {
		toSerialize["hostnames"] = o.Hostnames
	}
	if o.Facility != nil {
		toSerialize["facility"] = o.Facility
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.BillingCycle != nil {
		toSerialize["billing_cycle"] = o.BillingCycle
	}
	if o.OperatingSystem != nil {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if o.AlwaysPxe != nil {
		toSerialize["always_pxe"] = o.AlwaysPxe
	}
	if o.Userdata != nil {
		toSerialize["userdata"] = o.Userdata
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.TerminationTime != nil {
		toSerialize["termination_time"] = o.TerminationTime
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.ProjectSshKeys != nil {
		toSerialize["project_ssh_keys"] = o.ProjectSshKeys
	}
	if o.UserSshKeys != nil {
		toSerialize["user_ssh_keys"] = o.UserSshKeys
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.Customdata != nil {
		toSerialize["customdata"] = o.Customdata
	}
	if o.IpAddresses != nil {
		toSerialize["ip_addresses"] = o.IpAddresses
	}
	return json.Marshal(toSerialize)
}

type NullableInstancesBatchCreateInputBatches struct {
	value *InstancesBatchCreateInputBatches
	isSet bool
}

func (v NullableInstancesBatchCreateInputBatches) Get() *InstancesBatchCreateInputBatches {
	return v.value
}

func (v *NullableInstancesBatchCreateInputBatches) Set(val *InstancesBatchCreateInputBatches) {
	v.value = val
	v.isSet = true
}

func (v NullableInstancesBatchCreateInputBatches) IsSet() bool {
	return v.isSet
}

func (v *NullableInstancesBatchCreateInputBatches) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstancesBatchCreateInputBatches(val *InstancesBatchCreateInputBatches) *NullableInstancesBatchCreateInputBatches {
	return &NullableInstancesBatchCreateInputBatches{value: val, isSet: true}
}

func (v NullableInstancesBatchCreateInputBatches) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstancesBatchCreateInputBatches) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


