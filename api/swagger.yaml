openapi: 3.0.0
info:
  title: Metal API
  description: |
    # Introduction
    Equinix Metal provides a RESTful HTTP API which can be reached at <https://api.equinix.com/metal/v1>. This document describes the API and how to use it.

    The API allows you to programmatically interact with all
    of your Equinix Metal resources, including devices, networks, addresses, organizations,
    projects, and your user account. Every feature of the Equinix Metal web interface is accessible through the API.

    The API docs are generated from the Equinix Metal OpenAPI specification and are officially hosted at <https://metal.equinix.com/developers/api>.

    # Common Parameters

    The Equinix Metal API uses a few methods to minimize network traffic and improve throughput. These parameters are not used in all API calls, but are used often enough to warrant their own section. Look for these parameters in the documentation for the API calls that support them.

    ## Pagination

    Pagination is used to limit the number of results returned in a single request. The API will return a maximum of 100 results per page. To retrieve additional results, you can use the `page` and `per_page` query parameters.

    The `page` parameter is used to specify the page number. The first page is `1`. The `per_page` parameter is used to specify the number of results per page. The maximum number of results differs by resource type.

    ## Sorting

    Where offered, the API allows you to sort results by a specific field. To sort results use the `sort_by` query parameter with the root level field name as the value. The `sort_direction` parameter is used to specify the sort direction, either either `asc` (ascending) or `desc` (descending).

    ## Filtering

    Filtering is used to limit the results returned in a single request. The API supports filtering by certain fields in the response. To filter results, you can use the field as a query parameter.

    For example, to filter the IP list to only return public IPv4 addresses, you can filter by the `type` field, as in the following request:

    ```sh
    curl -H 'X-Auth-Token: my_authentication_token' \
      https://api.equinix.com/metal/v1/projects/id/ips?type=public_ipv4
    ```

    Only IP addresses with the `type` field set to `public_ipv4` will be returned.

    ## Searching

    Searching is used to find matching resources using multiple field comparissons. The API supports searching in resources that define this behavior. Currently the search parameter is only available on devices, ssh_keys, api_keys and memberships endpoints.

    To search resources you can use the `search` query parameter.

    ## Include and Exclude

    For resources that contain references to other resources, sucha as a Device that refers to the Project it resides in, the Equinix Metal API will returns `href` values (API links) to the associated resource.

    ```json
    {
      ...
      "project": {
        "href": "/metal/v1/projects/f3f131c8-f302-49ef-8c44-9405022dc6dd"
      }
    }
    ```

    If you're going need the project details, you can avoid a second API request.  Specify the contained `href` resources and collections that you'd like to have included in the response using the `include` query parameter.

    For example:

    ```sh
    curl -H 'X-Auth-Token: my_authentication_token' \
      https://api.equinix.com/metal/v1/user?include=projects
    ```

    The `include` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests where `href` resources are presented.

    To have multiple resources include, use a comma-separated list (e.g. `?include=emails,projects,memberships`).

    ```sh
    curl -H 'X-Auth-Token: my_authentication_token' \
      https://api.equinix.com/metal/v1/user?include=emails,projects,memberships
    ```

    You may also include nested associations up to three levels deep using dot notation (`?include=memberships.projects`):

    ```sh
    curl -H 'X-Auth-Token: my_authentication_token' \
      https://api.equinix.com/metal/v1/user?include=memberships.projects
    ```

    To exclude resources, and optimize response delivery, use the `exclude` query parameter. The `exclude` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests for fields with nested object responses. When excluded, these fields will be replaced with an object that contains only an `href` field.
  termsOfService: https://metal.equinix.com/legal/
  contact:
    name: Equinix Metal API Team
    email: support@equinixmetal.com
  license:
    name: Equinix Metal
    url: https://metal.equinix.com/legal/
  version: 1.0.0
servers:
- url: https://api.equinix.com/metal/v1
security:
- x_auth_token: []
tags:
- name: Authentication
  description: |
    Nearly all of the endpoints in the API require authentication. Authentication is performed by providing an authentication token (interchangeably referred to as an API key) in the `X-Auth-Token` HTTP request header.

    <!-- ReDoc-Inject: <security-definitions> -->

    User API keys can be obtained by creating them in the Equinix Metal Portal or by using the [Create a User API Key](#operation/createAPIKey) endpoint.

    Project API keys can also be obtained by creating them in the Equinix Metal Portal or by using the [Create a Project API Key](#operation/createProjectAPIKey) endpoint. Project API keys are scoped to a single project and can only be used to access resources within that project.

    For example, to use an authenticated API token, you would make a request like the following:

    ```bash
    curl -H 'X-Auth-Token: my_authentication_token' \
      https://api.equinix.com/metal/v1/user/api-keys
    ```

    Applications can take advantage of the Equinix Metal API and API keys to perform any of the actions that can be performed in the Equinix Metal Portal. For example, you can use the API to create and manage devices, projects, and other resources.

    API keys can be deleted without affecting any of the resources created with them. Access to applications using the API can be revoked by deleting the API key used to authenticate the application.
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/users/#api-keys
- name: Errors
  description: |
    Equinix Metal uses conventional HTTP response codes to indicate the success or failure of an API request.

    In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with Equinix Metal's servers (these are rare).

    | Code                               | Summary
    | ---------------------------------- | ------------------------------------------------------
    | 200 OK                             | Everything worked as expected.
    | 201 Create                         | Everything worked as expected, the resource was created.
    | 422 Bad Request                    | The request was unacceptable, often due to missing a required parameter.
    | 401 Unauthorized                   | No valid API key provided.
    | 404 Not Found                      | The requested resource doesn't exist.
    | 500, 502, 503, 504 - Server Errors | Something went wrong on Equinix Metal's end. (These are rare.)

    Errors (4xx, 5xx) reported by the API will include a JSON error response.  This response will be structured as one of the following:

    ```json
    {"error": "the error message"}
    ```

    or

    ```json
    {"errors": ["one error", "another error"}
    ```

    The JSON response is not guaranteed so check the HTTP status message. JSON may not be included if the error is reported by an API intermediary, like a loadbalancer service.
- name: Batches
  description: |
    Manage device batches. See project endpoints to list batches for a particular project. Check out the product docs to learn more about [Batch Deployment](https://metal.equinix.com/developers/docs/deploy/batch-deployment/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/deploy/batch-deployment/
- name: BGP
  description: |
    Manage BGP configs and sessions. See device endpoints to create and list BGP sessions for a particular device. Check out the product docs to learn more about [Local and Global BGP](https://metal.equinix.com/developers/docs/networking/local-global-bgp/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/bgp/bgp-on-equinix-metal/
- name: Capacity
  description: |
    Capacity Management. Check out the product docs to learn more about [Capacity](https://metal.equinix.com/developers/docs/locations/capacity/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/locations/capacity/
- name: Interconnections
  description: |
    Network Interconnections. See Instructions to create Network Interconnections at Check out the product docs to learn more about [Equinix Fabric](https://metal.equinix.com/developers/docs/networking/fabric/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/equinix-interconnect/introduction/
- name: Devices
  description: |
    Device Management. Check out the product docs to learn more about [Server Devices](https://metal.equinix.com/developers/docs/servers/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/deploy/on-demand/
- name: Emails
  description: Email Management
- name: Events
  description: Event Management
- name: Facilities
  description: |
    Facility Management. Check out the product docs to learn more about [Facilities](https://metal.equinix.com/developers/docs/locations/).
- name: GlobalBgpRanges
  description: |
    Global BGP Range Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/bgp/global-bgp/
- name: HardwareReservations
  description: |
    Hardware Reservation Management. Check out the product docs to learn more about [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/deploy/reserved/
- name: Incidents
  description: |
    Incident Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/locations/maintenance/
- name: Invitations
  description: |
    Manage invitations. See project endpoints to create a new invitation. Check out the product docs to learn more about [Invitations](https://metal.equinix.com/developers/docs/accounts/).
- name: IPAddresses
  description: |
    Manage IP addresses. See device and project endpoints to list and create IP assignments for a particular project or device. Check out the product docs to learn more about [the basic networking features](https://metal.equinix.com/developers/docs/networking/standard-ips/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/networking/
- name: Licenses
  description: |
    Manage licenses. See project endpoints to list and create licenses for a particular project.
  externalDocs:
    url: https://metal.equinix.com/developers/docs/operating-systems/licensed/
- name: Memberships
  description: |
    Membership Management (Project). Check out the product docs to learn more about [Membership](https://metal.equinix.com/developers/docs/accounts/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/projects/#inviting-a-user-to-a-project
- name: Metadata
  description: |
    Device Metadata
  externalDocs:
    url: https://metal.equinix.com/developers/docs/server-metadata/metadata/
- name: MetalGateways
  description: |
    Metal Gateway Management.Check out the product docs to learn more about [Metal Gateways](https://metal.equinix.com/developers/docs/networking/metal-gateway/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/networking/metal-gateway/
- name: Metros
  description: "Metro Management. Check out the product docs to learn more about [Metros](https://metal.equinix.com/developers/docs/locations/metros/)."
  externalDocs:
    url: https://metal.equinix.com/developers/docs/locations/metros/
- name: OperatingSystems
  description: |
    Operating System Management. Check out the product docs to learn more about [Operating Systems choices](https://metal.equinix.com/developers/docs/operating-systems/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/operating-systems/supported/
- name: Organizations
  description: "Organizations Management. Check out the product docs to learn more\
    \ about [Organizations](https://metal.equinix.com/developers/docs/accounts/)."
- name: OTPs
  description: |
    OTP Management. Check out the product docs to learn more about [OTP](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/
- name: PasswordResetTokens
  description: |
    Password Reset Token Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/users/#security-settings
- name: PaymentMethods
  description: |
    Payment Method Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/billing/payment-methods/
- name: Plans
  description: |
    Plan Management (Device). Check out the product docs to learn more about [Device Plans](https://metal.equinix.com/developers/docs/servers/).
- name: Ports
  description: |
    Port ManagementCheck out the product docs to learn more about [Port configurations](https://metal.equinix.com/developers/docs/layer2-networking/overview/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/layer2-networking/overview/
- name: Projects
  description: |
    Project Management. Check out the product docs to learn more about [Projects](https://metal.equinix.com/developers/docs/accounts/projects/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/projects/
- name: SelfServiceReservations
  description: |
    Self Service Reservations
  externalDocs:
    url: https://metal.equinix.com/developers/docs/deploy/reserved/
- name: SpotMarket
  description: |
    Spot Market Pricing and Requests Management. Check out the product docs to learn more about [Spot Market features](https://metal.equinix.com/developers/docs/deploy/spot-market/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/deploy/spot-market/
- name: SSHKeys
  description: |
    Manage SSH keys. See project endpoints to list and create project-level SSH keys.
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/ssh-keys/
- name: SupportRequest
  description: |
    Support request
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/support/
- name: TransferRequests
  description: |
    Project Transfer Requests Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/projects/#transferring-a-project
- name: TwoFactorAuth
  description: |
    Two Factor Authentication Management. Check out the product docs to learn more about [2FA](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/
- name: Usages
  description: Usage Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/billing/checking-usage/
- name: Userdata
  description: |
    Userdata Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/server-metadata/user-data/
- name: Users
  description: |
    User Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/users/
- name: UserVerificationTokens
  description: |
    User Verification Token Management
  externalDocs:
    url: https://metal.equinix.com/developers/docs/accounts/organizations/#managing-team-members
- name: VLANs
  description: |
    Manage virtual networks (VLANs). See project endpoints to list and create virtual networks. Check out the product docs to learn more about [VLANs](https://metal.equinix.com/developers/docs/networking/layer2/).
  externalDocs:
    url: https://metal.equinix.com/developers/docs/networking/layer2/
- name: Volumes
  description: |
    Volume Management (Block Storage). Notice: Block storage support will be deprecated soon. Please check here: https://metal.equinix.com/developers/docs/resilience-recovery/elastic-block-storage/ for more details.
  externalDocs:
    url: https://metal.equinix.com/developers/docs/resilience-recovery/elastic-block-storage/
- name: VRFs
  description: |
    VRF Management. A VRF is a project-scoped virtual router resource that defines a collection of customer-managed IP blocks that can be used in BGP peering on one or more virtual networks. Metal Gateways and Interconnection Virtual Circuits can take advantage of VRFs to enable Layer 3 routing with bespoke network ranges. Notice: VRFs are a test feature currently under active development, and only available to certain users. Please contact Customer Success for more information.
paths:
  /api-keys/{id}:
    delete:
      tags:
      - Authentication
      summary: Delete the API key
      description: Deletes the API key.
      operationId: deleteAPIKey
      parameters:
      - name: id
        in: path
        description: API Key UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /batches/{id}:
    get:
      tags:
      - Batches
      summary: Retrieve a Batch
      description: Returns a Batch
      operationId: findBatchById
      parameters:
      - name: id
        in: path
        description: Batch UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Batches
      summary: Delete the Batch
      description: Deletes the Batch.
      operationId: deleteBatch
      parameters:
      - name: id
        in: path
        description: Batch UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: remove_associated_instances
        in: query
        description: Delete all instances created from this batch
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: no content
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bgp/sessions/{id}:
    get:
      tags:
      - BGP
      summary: Retrieve a BGP session
      description: Returns a BGP session
      operationId: findBgpSessionById
      parameters:
      - name: id
        in: path
        description: BGP session UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSession'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - BGP
      summary: Update the BGP session
      description: Updates the BGP session by either enabling or disabling the default
        route functionality.
      operationId: updateBgpSession
      parameters:
      - name: id
        in: path
        description: BGP session UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Default route
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - BGP
      summary: Delete the BGP session
      description: Deletes the BGP session.
      operationId: deleteBgpSession
      parameters:
      - name: id
        in: path
        description: BGP session UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bgp-dynamic-neighbors/{id}:
    get:
      tags:
      - VRFs
      summary: Retrieve a BGP Dynamic Neighbor
      description: Return a single BGP Dynamic Neighbor resource
      parameters:
      - name: id
        in: path
        description: BGP Dynamic Neighbor UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpDynamicNeighbor'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - VRFs
      summary: Delete a VRF BGP Dynamic Neighbor
      description: Trigger the removal of a BGP Neighbor range from a VRF
      operationId: deleteBgpDynamicNeighborById
      parameters:
      - name: id
        in: path
        description: BGP Dynamic Neighbor UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpDynamicNeighbor'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /capacity:
    get:
      tags:
      - Capacity
      summary: View capacity
      description: Returns a list of facilities and plans with their current capacity.
      operationId: findCapacityForFacility
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityList'
              example:
                capacity:
                  am6:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  da11:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  sv15:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Capacity
      summary: Check capacity
      description: Validates if a deploy can be fulfilled.
      operationId: checkCapacityForFacility
      requestBody:
        description: Facility to check capacity in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCheckPerFacilityList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /capacity/metros:
    get:
      tags:
      - Capacity
      summary: View capacity for metros
      description: Returns a list of metros and plans with their current capacity.
      operationId: findCapacityForMetro
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityList'
              example:
                capacity:
                  am:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  da:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  dc:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Capacity
      summary: Check capacity for a metro
      description: Validates if a deploy can be fulfilled in a metro.
      operationId: checkCapacityForMetro
      requestBody:
        description: Metro to check capacity in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCheckPerMetroList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /connections/{connection_id}:
    get:
      tags:
      - Interconnections
      summary: Get interconnection
      description: Get the details of a interconnection
      operationId: getInterconnection
      parameters:
      - name: connection_id
        in: path
        description: Interconnection UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Interconnections
      summary: Update interconnection
      description: Update the details of a interconnection
      operationId: updateInterconnection
      parameters:
      - name: connection_id
        in: path
        description: Interconnection UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Updated interconnection details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterconnectionUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Interconnections
      summary: Delete interconnection
      description: "Delete a interconnection, its associated ports and virtual circuits."
      operationId: deleteInterconnection
      parameters:
      - name: connection_id
        in: path
        description: Interconnection UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "202":
          description: accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /connections/{connection_id}/events:
    get:
      tags:
      - Events
      summary: Retrieve interconnection events
      description: Returns a list of the interconnection events
      operationId: findInterconnectionEvents
      parameters:
      - name: connection_id
        in: path
        description: Interconnection UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /connections/{connection_id}/ports:
    get:
      tags:
      - Interconnections
      summary: List a interconnection's ports
      description: List the ports associated to an interconnection.
      operationId: listInterconnectionPorts
      parameters:
      - name: connection_id
        in: path
        description: UUID of the interconnection
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionPortList'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /connections/{connection_id}/virtual-circuits:
    get:
      tags:
      - Interconnections
      summary: List a interconnection's virtual circuits
      description: List the virtual circuit record(s) associated with a particular
        interconnection id.
      operationId: listInterconnectionVirtualCircuits
      parameters:
      - name: connection_id
        in: path
        description: UUID of the interconnection
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuitList'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /connections/{connection_id}/ports/{id}:
    get:
      tags:
      - Interconnections
      summary: Get a interconnection port
      description: Get the details of an interconnection port.
      operationId: getInterconnectionPort
      parameters:
      - name: connection_id
        in: path
        description: UUID of the interconnection
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionPort'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /connections/{connection_id}/ports/{id}/events:
    get:
      tags:
      - Events
      summary: Retrieve interconnection port events
      description: Returns a list of the interconnection port events
      operationId: findInterconnectionPortEvents
      parameters:
      - name: connection_id
        in: path
        description: Interconnection UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        description: Interconnection Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /connections/{connection_id}/ports/{port_id}/virtual-circuits:
    get:
      tags:
      - Interconnections
      summary: List a interconnection port's virtual circuits
      description: List the virtual circuit record(s) associatiated with a particular
        interconnection port.
      operationId: listInterconnectionPortVirtualCircuits
      parameters:
      - name: connection_id
        in: path
        description: UUID of the interconnection
        required: true
        schema:
          type: string
          format: uuid
      - name: port_id
        in: path
        description: UUID of the interconnection port
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuitList'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Interconnections
      summary: Create a new Virtual Circuit
      description: "Create a new Virtual Circuit on a Dedicated Port. To create a\
        \ regular Virtual Circuit, specify a Virtual Network record and an NNI VLAN\
        \ value. To create a VRF-based Virtual Circuit, specify the VRF ID and subnet,\
        \ along with the NNI VLAN value."
      operationId: createInterconnectionPortVirtualCircuit
      parameters:
      - name: connection_id
        in: path
        description: UUID of the interconnection
        required: true
        schema:
          type: string
          format: uuid
      - name: port_id
        in: path
        description: UUID of the interconnection port
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Virtual Circuit details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualCircuitCreateInput'
        required: true
      responses:
        "201":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}:
    get:
      tags:
      - Devices
      summary: Retrieve a device
      description: |-
        Type-specific options (such as facility for baremetal devices) will be included as part of the main data structure.
                                 State value can be one of: active inactive queued or provisioning
      operationId: findDeviceById
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Devices
      summary: Update the device
      description: Updates the device.
      operationId: updateDevice
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Facility to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Devices
      summary: Delete the device
      description: Deletes a device and deprovisions it in our datacenter.
      operationId: deleteDevice
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: force_delete
        in: query
        description: "Force the deletion of the device, by detaching any storage volume\
          \ still active."
        schema:
          type: boolean
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/actions:
    post:
      tags:
      - Devices
      summary: Perform an action
      description: "Performs an action for the given device.  Possible actions include:\
        \ power_on, power_off, reboot, reinstall, and rescue (reboot the device into\
        \ rescue OS.)"
      operationId: performAction
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Action to perform
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceActionInput'
        required: true
      responses:
        "202":
          description: accepted
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/bandwidth:
    get:
      tags:
      - Devices
      summary: Retrieve an instance bandwidth
      description: Retrieve an instance bandwidth for a given period of time.
      operationId: findInstanceBandwidth
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: from
        in: query
        description: Timestamp from range
        required: true
        schema:
          type: string
      - name: until
        in: query
        description: Timestamp to range
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ok
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/bgp/neighbors:
    get:
      tags:
      - Devices
      summary: Retrieve BGP neighbor data for this device
      description: Provides a summary of the BGP neighbor data associated to the BGP
        sessions for this device.
      operationId: getBgpNeighborData
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSessionNeighbors'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/bgp/sessions:
    get:
      tags:
      - Devices
      summary: Retrieve all BGP sessions
      description: Provides a listing of available BGP sessions for the device.
      operationId: findBgpSessions
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSessionList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Devices
      summary: Create a BGP session
      description: Creates a BGP session.
      operationId: createBgpSession
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: BGP session to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BGPSessionInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSession'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/customdata:
    get:
      tags:
      - Devices
      summary: Retrieve the custom metadata of an instance
      description: Provides the custom metadata stored for this instance in json format
      operationId: findDeviceCustomdata
      parameters:
      - name: id
        in: path
        description: Instance UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/events:
    get:
      tags:
      - Events
      summary: Retrieve device's events
      description: Returns a list of events pertaining to a specific device
      operationId: findDeviceEvents
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/ips:
    get:
      tags:
      - Devices
      summary: Retrieve all ip assignments
      description: Returns all ip assignments for a device.
      operationId: findIPAssignments
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignmentList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Devices
      summary: Create an ip assignment
      description: Creates an ip assignment for a device.
      operationId: createIPAssignment
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: IPAssignment to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAssignmentInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignment'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/metadata:
    get:
      tags:
      - Devices
      summary: Retrieve metadata
      description: Retrieve device metadata
      operationId: findDeviceMetadataByID
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/ssh-keys:
    get:
      tags:
      - SSHKeys
      summary: Retrieve a device's ssh keys
      description: Returns a collection of the device's ssh keys.
      operationId: findDeviceSSHKeys
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: Search string
        in: query
        description: "Search by key, label, or fingerprint"
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/traffic:
    get:
      tags:
      - Devices
      summary: Retrieve device traffic
      description: Returns traffic for a specific device.
      operationId: findTraffic
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: direction
        in: query
        description: Traffic direction
        required: true
        schema:
          type: string
          enum:
          - inbound
          - outbound
      - name: interval
        in: query
        description: Traffic interval
        schema:
          type: string
          enum:
          - minute
          - hour
          - day
          - week
          - month
          - year
          - hour_of_day
          - day_of_week
          - day_of_month
          - month_of_year
      - name: bucket
        in: query
        description: Traffic bucket
        schema:
          type: string
          enum:
          - internal
          - external
      - name: timeframe
        in: query
        style: deepObject
        explode: true
        schema:
          $ref: '#/components/schemas/timeframe'
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/usages:
    get:
      tags:
      - Usages
      summary: Retrieve all usages for device
      description: Returns all usages for a device.
      operationId: findDeviceUsages
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: "created[after]"
        in: query
        description: Filter usages created after this date
        schema:
          type: string
          format: datetime
      - name: "created[before]"
        in: query
        description: Filter usages created before this date
        schema:
          type: string
          format: datetime
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUsageList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{id}/userdata:
    get:
      tags:
      - Devices
      summary: Retrieve userdata
      description: Retrieve device userdata
      operationId: findDeviceUserdataByID
      parameters:
      - name: id
        in: path
        description: Device UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userdata'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /devices/{instance_id}/ips/{id}/customdata:
    get:
      tags:
      - Devices
      summary: Retrieve the custom metadata of an IP Assignment
      description: Provides the custom metadata stored for this IP Assignment in json
        format
      operationId: findIPAssignmentCustomdata
      parameters:
      - name: instance_id
        in: path
        description: Instance UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        description: Ip Assignment UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /emails:
    post:
      tags:
      - Emails
      summary: Create an email
      description: Add a new email address to the current user.
      operationId: createEmail
      requestBody:
        description: Email to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /emails/{id}:
    get:
      tags:
      - Emails
      summary: Retrieve an email
      description: Provides one of the user’s emails.
      operationId: findEmailById
      parameters:
      - name: id
        in: path
        description: Email UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Emails
      summary: Update the email
      description: Updates the email.
      operationId: updateEmail
      parameters:
      - name: id
        in: path
        description: Email UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: email to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Emails
      summary: Delete the email
      description: Deletes the email.
      operationId: deleteEmail
      parameters:
      - name: id
        in: path
        description: Email UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events:
    get:
      tags:
      - Events
      summary: Retrieve current user's events
      description: Returns a list of the current user’s events
      operationId: findEvents
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events/{id}:
    get:
      tags:
      - Events
      summary: Retrieve an event
      description: Returns a single event if the user has access
      operationId: findEventById
      parameters:
      - name: id
        in: path
        description: Event UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /facilities:
    get:
      tags:
      - Facilities
      summary: Retrieve all facilities
      description: Provides a listing of available datacenters where you can provision
        Packet devices.
      operationId: findFacilities
      parameters:
      - name: include
        in: query
        description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
            enum:
            - address
            - labels
      - name: exclude
        in: query
        description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
            enum:
            - address
            - labels
          default:
          - address
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /hardware-reservations/{id}:
    get:
      tags:
      - HardwareReservations
      summary: Retrieve a hardware reservation
      description: Returns a single hardware reservation
      operationId: findHardwareReservationById
      parameters:
      - name: id
        in: path
        description: HardwareReservation UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareReservation'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hardware-reservations/{id}/activate:
    post:
      tags:
      - HardwareReservations
      summary: Activate a spare hardware reservation
      description: Activate a spare hardware reservation
      operationId: activateHardwareReservation
      parameters:
      - name: id
        in: path
        description: Hardware Reservation UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Note to attach to the reservation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_activate_body'
        required: false
      responses:
        "201":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareReservation'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hardware-reservations/{id}/move:
    post:
      tags:
      - HardwareReservations
      summary: Move a hardware reservation
      description: Move a hardware reservation to another project
      operationId: moveHardwareReservation
      parameters:
      - name: id
        in: path
        description: Hardware Reservation UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Destination Project UUID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_move_body'
        required: true
      responses:
        "201":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareReservation'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /incidents:
    get:
      tags:
      - Incidents
      summary: Retrieve the number of incidents
      description: Retrieve the number of incidents.
      operationId: findIncidents
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invitations:
    get:
      tags:
      - Users
      summary: Retrieve current user invitations
      description: Returns all invitations in current user.
      operationId: findInvitations
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invitations/{id}:
    get:
      tags:
      - Invitations
      summary: View an invitation
      description: Returns a single invitation. (It include the `invitable` to maintain
        backward compatibility but will be removed soon)
      operationId: findInvitationById
      parameters:
      - name: id
        in: path
        description: Invitation UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Invitations
      summary: Accept an invitation
      description: Accept an invitation.
      operationId: acceptInvitation
      parameters:
      - name: id
        in: path
        description: Invitation UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Invitations
      summary: Decline an invitation
      description: Decline an invitation.
      operationId: declineInvitation
      parameters:
      - name: id
        in: path
        description: Invitation UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invoices/{id}:
    get:
      tags:
      - Invoices
      summary: Retrieve an invoice
      description: Returns the invoice identified by the provided id
      operationId: getInvoiceById
      parameters:
      - name: id
        in: path
        description: Invoice UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ips/{id}:
    get:
      tags:
      - IPAddresses
      summary: Retrieve an ip address
      description: Returns a single ip address if the user has access.
      operationId: findIPAddressById
      parameters:
      - name: id
        in: path
        description: IP Address UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - IPAddresses
      summary: Unassign an ip address
      description: |
        This call can be used to un-assign an IP assignment or delete
        an IP reservation.

        Un-assign an IP address record.
        Use the assignment UUID you
        get after attaching the IP. This will remove the relationship between an IP and the device or metal gateway and will make the IP address available to be assigned to another device, once the IP has been un-configured from the network.

        Delete an IP reservation.
        Use the reservation UUID you get after adding the IP to the project. This will permanently delete the IP block reservation from the project.
      operationId: deleteIPAddress
      parameters:
      - name: id
        in: path
        description: IP Address UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - IPAddresses
      summary: Update an ip address
      description: Update details about an ip address
      operationId: updateIPAddress
      parameters:
      - name: id
        in: path
        description: IP Address UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAssignmentUpdateInput'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ips/{id}/available:
    get:
      tags:
      - IPAddresses
      summary: Retrieve all available subnets of a particular reservation
      description: Provides a list of IP resevations for a single project.
      operationId: findIPAvailabilities
      parameters:
      - name: id
        in: path
        description: IP Reservation UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: cidr
        in: query
        description: Size of subnets in bits
        required: true
        schema:
          type: string
          enum:
          - "20"
          - "21"
          - "22"
          - "23"
          - "24"
          - "25"
          - "26"
          - "27"
          - "28"
          - "29"
          - "30"
          - "31"
          - "32"
          - "33"
          - "34"
          - "35"
          - "36"
          - "37"
          - "38"
          - "39"
          - "40"
          - "41"
          - "42"
          - "43"
          - "44"
          - "45"
          - "46"
          - "47"
          - "48"
          - "49"
          - "50"
          - "51"
          - "52"
          - "53"
          - "54"
          - "55"
          - "56"
          - "57"
          - "58"
          - "59"
          - "60"
          - "61"
          - "62"
          - "63"
          - "64"
          - "65"
          - "66"
          - "67"
          - "68"
          - "69"
          - "70"
          - "71"
          - "72"
          - "73"
          - "74"
          - "75"
          - "76"
          - "77"
          - "78"
          - "79"
          - "80"
          - "81"
          - "82"
          - "83"
          - "84"
          - "85"
          - "86"
          - "87"
          - "88"
          - "89"
          - "90"
          - "91"
          - "92"
          - "93"
          - "94"
          - "95"
          - "96"
          - "97"
          - "98"
          - "99"
          - "100"
          - "101"
          - "102"
          - "103"
          - "104"
          - "105"
          - "106"
          - "107"
          - "108"
          - "109"
          - "110"
          - "111"
          - "112"
          - "113"
          - "114"
          - "115"
          - "116"
          - "117"
          - "118"
          - "119"
          - "120"
          - "121"
          - "122"
          - "123"
          - "124"
          - "125"
          - "126"
          - "127"
          - "128"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAvailabilitiesList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ips/{id}/customdata:
    get:
      tags:
      - IPAddresses
      summary: Retrieve the custom metadata of an IP Reservation or IP Assignment
      description: Provides the custom metadata stored for this IP Reservation or
        IP Assignment in json format
      operationId: findIPAddressCustomdata
      parameters:
      - name: id
        in: path
        description: Ip Reservation UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /licenses/{id}:
    get:
      tags:
      - Licenses
      summary: Retrieve a license
      description: Returns a license
      operationId: findLicenseById
      parameters:
      - name: id
        in: path
        description: License UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Licenses
      summary: Update the license
      description: Updates the license.
      operationId: updateLicense
      parameters:
      - name: id
        in: path
        description: License UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: License to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Licenses
      summary: Delete the license
      description: Deletes a license.
      operationId: deleteLicense
      parameters:
      - name: id
        in: path
        description: License UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /locations/metros:
    get:
      tags:
      - Metros
      summary: Retrieve all metros
      description: Provides a listing of available metros
      operationId: findMetros
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetroList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /locations/metros/{id}:
    get:
      tags:
      - Metros
      summary: Retrieve a specific Metro's details
      description: "Show the details for a metro, including name, code, and country."
      operationId: getMetro
      parameters:
      - name: id
        in: path
        description: Metro UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metro'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /market/spot/prices:
    get:
      tags:
      - SpotMarket
      summary: Get current spot market prices
      description: Get Equinix Metal current spot market prices.
      operationId: findSpotMarketPrices
      parameters:
      - name: facility
        in: query
        description: Facility to check spot market prices
        schema:
          type: string
      - name: plan
        in: query
        description: Plan to check spot market prices
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketPricesList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /market/spot/prices/history:
    get:
      tags:
      - SpotMarket
      summary: Get spot market prices for a given period of time
      description: |-
        Get spot market prices for a given plan and facility in a fixed period of time

        *Note: In the `200` response, the property `datapoints` contains arrays of `[float, integer]`.*
      operationId: findSpotMarketPricesHistory
      parameters:
      - name: facility
        in: query
        description: Facility to check spot market prices
        required: true
        schema:
          type: string
      - name: plan
        in: query
        description: Plan to check spot market prices
        required: true
        schema:
          type: string
      - name: metro
        in: query
        description: Metro to check spot market price history
        schema:
          type: string
      - name: from
        in: query
        description: Timestamp from range
        required: true
        schema:
          type: string
      - name: until
        in: query
        description: Timestamp to range
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotPricesHistoryReport'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /market/spot/prices/metros:
    get:
      tags:
      - SpotMarket
      summary: Get current spot market prices for metros
      description: Get Equinix Metal current spot market prices for all metros.
      operationId: findMetroSpotMarketPrices
      parameters:
      - name: metro
        in: query
        description: Metro to filter spot market prices
        schema:
          type: string
      - name: plan
        in: query
        description: Plan to filter spot market prices
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketPricesPerMetroList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /memberships/{id}:
    get:
      tags:
      - Memberships
      summary: Retrieve a membership
      description: Returns a single membership.
      operationId: findMembershipById
      parameters:
      - name: id
        in: path
        description: Membership UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Memberships
      summary: Update the membership
      description: Updates the membership.
      operationId: updateMembership
      parameters:
      - name: id
        in: path
        description: Membership UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Membership to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Memberships
      summary: Delete the membership
      description: Deletes the membership.
      operationId: deleteMembership
      parameters:
      - name: id
        in: path
        description: Membership UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metal-gateways/{id}:
    get:
      tags:
      - MetalGateways
      summary: Returns the metal gateway
      description: Returns a specific metal gateway
      operationId: findMetalGatewayById
      parameters:
      - name: id
        in: path
        description: Metal Gateway UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - MetalGateways
      summary: Deletes the metal gateway
      description: Deletes a metal gateway and any elastic IP assignments associated
        with this metal gateway.
      operationId: deleteMetalGateway
      parameters:
      - name: id
        in: path
        description: Metal Gateway UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "202":
          description: accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metal-gateways/{id}/bgp-dynamic-neighbors:
    get:
      tags:
      - VRFs
      summary: List BGP Dynamic Neighbors
      description: Returns the list of VRF BGP Dynamic Neighbors for this Metal Gateway
      operationId: getBgpDynamicNeighbors
      parameters:
      - name: id
        in: path
        description: Metal Gateway UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpDynamicNeighborList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - VRFs
      summary: Create a VRF BGP Dynamic Neighbor range
      description: |
        Create a VRF BGP Dynamic Neighbor range.

        BGP Dynamic Neighbor records are limited to 2 per Virtual Network.

        Notice: VRFs are a test feature currently under active development, and only available to certain users. Please contact Customer Success for more information.
      operationId: createBgpDynamicNeighbor
      parameters:
      - name: id
        in: path
        description: Metal Gateway UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgpDynamicNeighborCreateInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpDynamicNeighbor'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metal-gateways/{id}/ips:
    get:
      tags:
      - MetalGateways
      summary: List Metal Gateway Elastic IPs
      description: Returns the list of Elastic IPs assigned to this Metal Gateway
      operationId: getMetalGatewayElasticIps
      parameters:
      - name: id
        in: path
        description: Metal Gateway UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignmentList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - MetalGateways
      summary: Create a Metal Gateway Elastic IP
      description: |
        Create a new Elastic IP on this Metal Gateway.

        Assign an IPv4 range as an elastic IP to the Metal Gateway, with a specified next-hop address contained within the Metal Gateway.

        Notice: Elastic IPs on Metal Gateways are a test feature currently under active development, and only available to certain users. Please contact Customer Success for more information.
      operationId: createMetalGatewayElasticIp
      parameters:
      - name: id
        in: path
        description: Metal Gateway UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetalGatewayElasticIpCreateInput'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssignment'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /operating-system-versions:
    get:
      tags:
      - OperatingSystems
      summary: Retrieve all operating system versions
      description: Provides a listing of available operating system versions.
      operationId: findOperatingSystemVersion
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /operating-systems:
    get:
      tags:
      - OperatingSystems
      summary: Retrieve all operating systems
      description: Provides a listing of available operating systems to provision
        your new device with.
      operationId: findOperatingSystems
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations:
    get:
      tags:
      - Organizations
      summary: Retrieve all organizations
      description: Returns a list of organizations that are accessible to the current
        user.
      operationId: findOrganizations
      parameters:
      - name: personal
        in: query
        description: "Include, exclude or show only personal organizations."
        schema:
          type: string
          enum:
          - include
          - exclude
          - only
      - name: without_projects
        in: query
        description: "Include, exclude or show only organizations that have no projects."
        schema:
          type: string
          enum:
          - include
          - exclude
          - only
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Organizations
      summary: Create an organization
      description: Creates an organization.
      operationId: createOrganization
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Organization to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}:
    get:
      tags:
      - Organizations
      summary: Retrieve an organization's details
      description: "Returns a single organization's details, if the user is authorized\
        \ to view it."
      operationId: findOrganizationById
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Organizations
      summary: Update the organization
      description: Updates the organization.
      operationId: updateOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Organization to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Organizations
      summary: Delete the organization
      description: Deletes the organization.
      operationId: deleteOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/capacity:
    get:
      tags:
      - Capacity
      summary: View available hardware plans per Facility for given organization
      description: Returns a list of facilities and plans with their current capacity.
      operationId: findOrganizationCapacityPerFacility
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityList'
              example:
                capacity:
                  am6:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  da11:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  sv15:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/capacity/metros:
    get:
      tags:
      - Capacity
      summary: View available hardware plans per Metro for given organization
      description: Returns a list of metros and plans with their current capacity.
      operationId: findOrganizationCapacityPerMetro
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityList'
              example:
                capacity:
                  am:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  da:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
                  dc:
                    c2.medium.x86:
                      level: string
                    m2.xlarge.x86:
                      level: string
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/customdata:
    get:
      tags:
      - Organizations
      summary: Retrieve the custom metadata of an organization
      description: Provides the custom metadata stored for this organization in json
        format
      operationId: findOrganizationCustomdata
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/devices:
    get:
      tags:
      - Devices
      summary: Retrieve all devices of an organization
      description: Provides a collection of devices for a given organization.
      operationId: findOrganizationDevices
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: search
        in: query
        description: "Search by hostname, description, short_id, reservation short_id,\
          \ tags, plan name, plan slug, facility code, facility name, operating system\
          \ name, operating system slug, IP addresses."
        schema:
          type: string
      - name: categories
        in: query
        description: Filter by plan category
        schema:
          type: array
          items:
            type: string
            example: compute
            enum:
            - compute
            - storage
      - name: facility
        in: query
        description: Filter by device facility
        schema:
          type: string
      - name: hostname
        in: query
        description: Filter by partial hostname
        schema:
          type: string
      - name: reserved
        in: query
        description: "Filter only reserved instances. When set to true, only include\
          \ reserved instances. When set to false, only include on-demand instances."
        schema:
          type: boolean
      - name: tag
        in: query
        description: Filter by device tag
        schema:
          type: string
      - name: type
        in: query
        description: "Filter by instance type (ondemand,spot,reserved)"
        schema:
          type: string
      - name: has_termination_time
        in: query
        description: "Filter only instances marked for termination. When set to true,\
          \ only include instances that have a termination time. When set to false,\
          \ only include instances that do not have a termination time."
        schema:
          type: boolean
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/events:
    get:
      tags:
      - Events
      summary: Retrieve organization's events
      description: Returns a list of events for a single organization
      operationId: findOrganizationEvents
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/facilities:
    get:
      tags:
      - Facilities
      summary: Retrieve all facilities visible by the organization
      description: Returns a listing of available datacenters for the given organization
      operationId: findFacilitiesByOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /organizations/{id}/invitations:
    get:
      tags:
      - Organizations
      summary: Retrieve organization invitations
      description: Returns all invitations in an organization.
      operationId: findOrganizationInvitations
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Organizations
      summary: Create an invitation for an organization
      description: |-
        In order to add a user to an organization, they must first be invited.
        To invite to several projects the parameter `projects_ids:[a,b,c]` can be used
      operationId: createOrganizationInvitation
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/InvitationInput'
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/invoices:
    get:
      tags:
      - Invoices
      summary: Retrieve all invoices for an organization
      description: Returns all invoices for an organization
      operationId: findOrganizationInvoices
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        description: page number
        schema:
          type: integer
      - name: per_page
        in: query
        description: per page
        schema:
          type: integer
      - name: status
        in: query
        description: filter by status
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/operating-systems:
    get:
      tags:
      - Organizations
      summary: Retrieve all operating systems visible by the organization
      description: Returns a listing of available operating systems for the given
        organization
      operationId: findOperatingSystemsByOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/payment-methods:
    get:
      tags:
      - Organizations
      summary: Retrieve all payment methods of an organization
      description: Returns all payment methods of an organization.
      operationId: findOrganizationPaymentMethods
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Organizations
      summary: Create a payment method for the given organization
      description: Creates a payment method.
      operationId: createPaymentMethod
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Payment Method to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/plans:
    get:
      tags:
      - Organizations
      summary: Retrieve all plans visible by the organization
      description: Returns a listing of available plans for the given organization
      operationId: findPlansByOrganization
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/projects:
    get:
      tags:
      - Organizations
      summary: Retrieve all projects of an organization
      description: Returns a collection of projects that belong to the organization.
      operationId: findOrganizationProjects
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: name
        in: query
        description: Filter results by name.
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Organizations
      summary: Create a project for the organization
      description: Creates a new project for the organization
      operationId: createOrganizationProject
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Project to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{id}/transfers:
    get:
      tags:
      - Organizations
      summary: Retrieve all project transfer requests from or to an organization
      description: Provides a collection of project transfer requests from or to the
        organization.
      operationId: findOrganizationTransfers
      parameters:
      - name: id
        in: path
        description: Organization UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRequestList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{organization_id}/connections:
    get:
      tags:
      - Interconnections
      summary: List organization connections
      description: List the connections belonging to the organization
      operationId: organizationListInterconnections
      parameters:
      - name: organization_id
        in: path
        description: UUID of the organization
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionList'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Interconnections
      summary: Request a new interconnection for the organization
      description: Creates a new interconnection request. A Project ID must be specified
        in the request body for connections on shared ports.
      operationId: createOrganizationInterconnection
      parameters:
      - name: organization_id
        in: path
        description: UUID of the organization
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/InterconnectionCreateInput'
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /payment-methods/{id}:
    get:
      tags:
      - PaymentMethods
      summary: Retrieve a payment method
      description: Returns a payment method
      operationId: findPaymentMethodById
      parameters:
      - name: id
        in: path
        description: Payment Method UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - PaymentMethods
      summary: Update the payment method
      description: Updates the payment method.
      operationId: updatePaymentMethod
      parameters:
      - name: id
        in: path
        description: Payment Method UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Payment Method to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - PaymentMethods
      summary: Delete the payment method
      description: Deletes the payment method.
      operationId: deletePaymentMethod
      parameters:
      - name: id
        in: path
        description: Payment Method UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /plans:
    get:
      tags:
      - Plans
      summary: Retrieve all plans
      description: Provides a listing of available plans to provision your device
        on.
      operationId: findPlans
      parameters:
      - name: categories
        in: query
        description: Filter plans by its category
        schema:
          type: array
          items:
            type: string
            example: compute
            enum:
            - compute
            - storage
      - name: type
        in: query
        description: Filter plans by its plan type
        schema:
          type: string
          example: standard
          enum:
          - standard
          - workload_optimized
          - custom
      - name: slug
        in: query
        description: Filter plans by slug
        schema:
          type: string
          example: c3.small.x86
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}:
    get:
      tags:
      - Ports
      summary: Retrieve a port
      description: Returns a port
      operationId: findPortById
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/assign:
    post:
      tags:
      - Ports
      summary: Assign a port to virtual network
      description: Assign a hardware port to a virtual network.
      operationId: assignPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/PortAssignInput'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/bond:
    post:
      tags:
      - Ports
      summary: Enabling bonding
      description: Enabling bonding for one or all ports
      operationId: bondPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: bulk_enable
        in: query
        description: enable both ports
        schema:
          type: boolean
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/convert/layer-2:
    post:
      tags:
      - Ports
      summary: Convert to Layer 2
      description: Converts a bond port to Layer 2. IP assignments of the port will
        be removed.
      operationId: convertLayer2
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/PortAssignInput'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/convert/layer-3:
    post:
      tags:
      - Ports
      summary: Convert to Layer 3
      description: Converts a bond port to Layer 3. VLANs must first be unassigned.
      operationId: convertLayer3
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: IPs to request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortConvertLayer3Input'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/disbond:
    post:
      tags:
      - Ports
      summary: Disabling bonding
      description: Disabling bonding for one or all ports
      operationId: disbondPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: bulk_disable
        in: query
        description: disable both ports
        schema:
          type: boolean
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/native-vlan:
    post:
      tags:
      - Ports
      summary: Assign a native VLAN
      description: Sets a virtual network on this port as a "native VLAN". The VLAN
        must have already been assigned using the using the "Assign a port to a virtual
        network" operation.
      operationId: assignNativeVlan
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: vnid
        in: query
        description: "Virtual Network ID. May be the UUID of the Virtual Network record,\
          \ or the VLAN value itself (ex: '1001')."
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Ports
      summary: Remove native VLAN
      description: Removes the native VLAN from this port
      operationId: deleteNativeVlan
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/unassign:
    post:
      tags:
      - Ports
      summary: Unassign a port
      description: Unassign a port for a hardware.
      operationId: unassignPort
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/PortAssignInput'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/vlan-assignments:
    get:
      tags:
      - Ports
      summary: List Current VLAN assignments for a port
      description: "Show the port's current VLAN assignments, including if this VLAN\
        \ is set as native, and the current state of the assignment (ex. 'assigned'\
        \ or 'unassigning')"
      operationId: findPortVlanAssignments
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
          default:
          - port
          - virtual_network
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/vlan-assignments/{assignment_id}:
    get:
      tags:
      - Ports
      summary: Show a particular Port VLAN assignment's details
      description: "Show the details of a specific Port-VLAN assignment, including\
        \ the current state and if the VLAN is set as native."
      operationId: findPortVlanAssignmentByPortIdAndAssignmentId
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: assignment_id
        in: path
        description: Assignment ID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
          default:
          - port
          - virtual_network
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignment'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/vlan-assignments/batches:
    get:
      tags:
      - Ports
      summary: List the VLAN Assignment Batches for a port
      description: Show all the VLAN assignment batches that have been created for
        managing this port's VLAN assignments
      operationId: findPortVlanAssignmentBatches
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentBatchList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Ports
      summary: Create a new Port-VLAN Assignment management batch
      description: Create a new asynchronous batch request which handles adding and/or
        removing the VLANs to which the port is assigned.
      operationId: createPortVlanAssignmentBatch
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: VLAN Assignment batch details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortVlanAssignmentBatchCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentBatch'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ports/{id}/vlan-assignments/batches/{batch_id}:
    get:
      tags:
      - Ports
      summary: Retrieve a VLAN Assignment Batch's details
      description: "Returns the details of an existing Port-VLAN Assignment batch,\
        \ including the list of VLANs to assign or unassign, and the current state\
        \ of the batch."
      operationId: findPortVlanAssignmentBatchByPortIdAndBatchId
      parameters:
      - name: id
        in: path
        description: Port UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: batch_id
        in: path
        description: Batch ID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanAssignmentBatch'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects:
    get:
      tags:
      - Projects
      summary: Retrieve all projects
      description: Returns a collection of projects that the current user is a member
        of.
      operationId: findProjects
      parameters:
      - name: name
        in: query
        description: Filter results by name.
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Projects
      summary: Create a project
      description: "Creates a new project for the user default organization. If the\
        \ user don't have an organization, a new one will be created."
      operationId: createProject
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Project to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateFromRootInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}:
    get:
      tags:
      - Projects
      summary: Retrieve a project
      description: Returns a single project if the user has access
      operationId: findProjectById
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Projects
      summary: Update the project
      description: Updates the project.
      operationId: updateProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Project to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Projects
      summary: Delete the project
      description: Deletes the project.
      operationId: deleteProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/api-keys:
    get:
      tags:
      - Authentication
      summary: Retrieve all API keys for the project.
      description: Returns all API keys for a specific project.
      operationId: findProjectAPIKeys
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Authentication
      summary: Create an API key for a project.
      description: Creates an API key for a project.
      operationId: createProjectAPIKey
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: API Key to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/batches:
    get:
      tags:
      - Batches
      summary: Retrieve all batches by project
      description: Returns all batches for the given project
      operationId: findBatchesByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/bgp-config:
    get:
      tags:
      - BGP
      summary: Retrieve a bgp config
      description: Returns a bgp config
      operationId: findBgpConfigByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: |
            ok

            When BGP configuration is not enabled empty structure is returned.
            When BGP configuration is disabled after being enabled BGP configuration data is returned with status disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpConfig'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            not found

            The project was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/bgp-configs:
    post:
      tags:
      - BGP
      summary: Requesting bgp config
      description: Requests to enable bgp configuration for a project.
      operationId: requestBgpConfig
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: BGP config Request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgpConfigRequestInput'
        required: true
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/bgp/sessions:
    get:
      tags:
      - BGP
      summary: Retrieve all BGP sessions for project
      description: Provides a listing of available BGP sessions for the project.
      operationId: findProjectBgpSessions
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BgpSessionList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/customdata:
    get:
      tags:
      - Projects
      summary: Retrieve the custom metadata of a project
      description: Provides the custom metadata stored for this project in json format
      operationId: findProjectCustomdata
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/devices:
    get:
      tags:
      - Devices
      summary: Retrieve all devices of a project
      description: Provides a collection of devices for a given project.
      operationId: findProjectDevices
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: search
        in: query
        description: "Search by hostname, description, short_id, reservation short_id,\
          \ tags, plan name, plan slug, facility code, facility name, operating system\
          \ name, operating system slug, IP addresses."
        schema:
          type: string
      - name: categories
        in: query
        description: Filter by plan category
        schema:
          type: array
          items:
            type: string
            example: compute
            enum:
            - compute
            - storage
      - name: facility
        in: query
        description: Filter by device facility
        schema:
          type: string
      - name: hostname
        in: query
        description: Filter by partial hostname
        schema:
          type: string
      - name: reserved
        in: query
        description: "Filter only reserved instances. When set to true, only include\
          \ reserved instances. When set to false, only include on-demand instances."
        schema:
          type: boolean
      - name: tag
        in: query
        description: Filter by device tag
        schema:
          type: string
      - name: type
        in: query
        description: "Filter by instance type (ondemand,spot,reserved)"
        schema:
          type: string
      - name: has_termination_time
        in: query
        description: "Filter only instances marked for termination. When set to true,\
          \ only include instances that have a termination time. When set to false,\
          \ only include instances that do not have a termination time."
        schema:
          type: boolean
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Devices
      summary: Create a device
      description: |-
        Creates a new device and provisions it in the specified location.

        Device type-specific options are accepted.  For example, `baremetal` devices accept `operating_system`, `hostname`, and `plan`. These parameters may not be accepted for other device types. The default device type is `baremetal`.
      operationId: createDevice
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Device to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_devices_body'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/devices/batch:
    post:
      tags:
      - Batches
      summary: Create a devices batch
      description: Creates new devices in batch and provisions them in our datacenter.
      operationId: createDeviceBatch
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Batches to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesBatchCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchesList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/events:
    get:
      tags:
      - Events
      summary: Retrieve project's events
      description: Returns a list of events for a single project
      operationId: findProjectEvents
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/facilities:
    get:
      tags:
      - Facilities
      summary: Retrieve all facilities visible by the project
      description: Returns a listing of available datacenters for the given project
      operationId: findFacilitiesByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /projects/{id}/global-bgp-ranges:
    get:
      tags:
      - BGP
      summary: Retrieve all global bgp ranges
      description: Returns all global bgp ranges for a project
      operationId: findGlobalBgpRanges
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalBgpRangeList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/hardware-reservations:
    get:
      tags:
      - HardwareReservations
      summary: Retrieve all hardware reservations for a given project
      description: Provides a collection of hardware reservations for a given project.
      operationId: findProjectHardwareReservations
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: query
        in: query
        description: "Search by facility code, plan name, project name, reservation\
          \ short ID or device hostname"
        schema:
          type: string
      - name: state
        in: query
        description: Filter by hardware reservation state
        schema:
          type: string
          enum:
          - active
          - spare
          - need_of_service
      - name: provisionable
        in: query
        description: Filter hardware reservation that is provisionable
        schema:
          type: string
          enum:
          - only
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareReservationList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/ips:
    get:
      tags:
      - IPAddresses
      summary: Retrieve all ip reservations
      description: Provides a paginated list of IP reservations for a single project.
      operationId: findIPReservations
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: types
        in: query
        description: Filter project IP reservations by reservation type
        style: form
        schema:
          type: array
          items:
            type: string
            enum:
            - global_ipv4
            - private_ipv4
            - public_ipv4
            - public_ipv6
            - vrf
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 250
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPReservationList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - IPAddresses
      summary: Requesting IP reservations
      description: "Request more IP space for a project in order to have additional\
        \ IP addresses to assign to devices.  If the request is within the max quota,\
        \ an IP reservation will be created. If the project will exceed its IP quota,\
        \ a request will be submitted for review, and will return an IP Reservation\
        \ with a `state` of `pending`. You can automatically have the request fail\
        \ with HTTP status 422 instead of triggering the review process by providing\
        \ the `fail_on_approval_required` parameter set to `true` in the request."
      operationId: requestIPReservation
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: IP Reservation Request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_ips_body'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/licenses:
    get:
      tags:
      - Licenses
      summary: Retrieve all licenses
      description: Provides a collection of licenses for a given project.
      operationId: findProjectLicenses
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Licenses
      summary: Create a License
      description: Creates a new license for the given project
      operationId: createLicense
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: License to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/plans:
    get:
      tags:
      - Plans
      summary: Retrieve all plans visible by the project
      description: Returns a listing of available plans for the given project
      operationId: findPlansByProject
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/spot-market-requests:
    get:
      tags:
      - SpotMarket
      summary: List spot market requests
      description: View all spot market requests for a given project.
      operationId: listSpotMarketRequests
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketRequestList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - SpotMarket
      summary: Create a spot market request
      description: |-
        Creates a new spot market request.

        Type-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.

        The features attribute allows you to optionally specify what features your server should have. For example, if you require a server with a TPM chip, you may specify `{ "features": { "tpm": "required" } }` (or `{ "features": ["tpm"] }` in shorthand).

        The request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).

        The request will not fail if we have no servers with that feature in our inventory.
      operationId: createSpotMarketRequest
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Spot Market Request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpotMarketRequestCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketRequest'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/ssh-keys:
    get:
      tags:
      - SSHKeys
      summary: Retrieve a project's ssh keys
      description: Returns a collection of the project's ssh keys.
      operationId: findProjectSSHKeys
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: query
        in: query
        description: "Search by key, label, or fingerprint"
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - SSHKeys
      summary: Create a ssh key for the given project
      description: Creates a ssh key.
      operationId: createProjectSSHKey
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: ssh key to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKeyCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/transfers:
    post:
      tags:
      - Projects
      summary: Create a transfer request
      description: Organization owners can transfer their projects to other organizations.
      operationId: createTransferRequest
      parameters:
      - name: id
        in: path
        description: UUID of the project to be transferred
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Transfer Request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRequest'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/usages:
    get:
      tags:
      - Usages
      summary: Retrieve all usages for project
      description: Returns all usages for a project.
      operationId: findProjectUsage
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: "created[after]"
        in: query
        description: Filter usages created after this date
        schema:
          type: string
          format: datetime
      - name: "created[before]"
        in: query
        description: Filter usages created before this date
        schema:
          type: string
          format: datetime
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUsageList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/virtual-networks:
    get:
      tags:
      - VLANs
      summary: Retrieve all virtual networks
      description: Provides a list of virtual networks for a single project.
      operationId: findVirtualNetworks
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: facility
        in: query
        description: Filter by Facility ID (uuid) or Facility Code
        deprecated: true
        schema:
          type: string
      - name: metro
        in: query
        description: Filter by Metro ID (uuid) or Metro Code
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - VLANs
      summary: Create a virtual network
      description: Creates an virtual network.
      operationId: createVirtualNetwork
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Virtual Network to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{id}/vrfs:
    get:
      tags:
      - VRFs
      summary: Retrieve all VRFs in the project
      description: Returns the list of VRFs for a single project.
      operationId: findVrfs
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: metro
        in: query
        description: Filter by Metro ID (uuid) or Metro Code
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfList'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - VRFs
      summary: Create a new VRF in the specified project
      description: Creates a new VRF in the specified project
      operationId: createVrf
      parameters:
      - name: id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: VRF to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrfCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vrf'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/connections:
    get:
      tags:
      - Interconnections
      summary: List project connections
      description: List the connections belonging to the project
      operationId: projectListInterconnections
      parameters:
      - name: project_id
        in: path
        description: UUID of the project
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterconnectionList'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Interconnections
      summary: Request a new interconnection for the project's organization
      description: Creates a new interconnection request
      operationId: createProjectInterconnection
      parameters:
      - name: project_id
        in: path
        description: UUID of the project
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/InterconnectionCreateInput'
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interconnection'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/invitations:
    get:
      tags:
      - Projects
      summary: Retrieve project invitations
      description: Returns all invitations in a project.
      operationId: findProjectInvitations
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Projects
      summary: Create an invitation for a project
      description: "In order to add a user to a project, they must first be invited."
      operationId: createProjectInvitation
      parameters:
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/InvitationInput'
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/ips/{id}/customdata:
    get:
      tags:
      - Projects
      summary: Retrieve the custom metadata of an IP Reservation
      description: Provides the custom metadata stored for this IP Reservation in
        json format
      operationId: findIPReservationCustomdata
      parameters:
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        description: Ip Reservation UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/memberships:
    get:
      tags:
      - Projects
      summary: Retrieve project memberships
      description: Returns all memberships in a project.
      operationId: findProjectMemberships
      parameters:
      - name: search
        in: query
        description: "Search by member full name, id and email."
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/metal-gateways:
    get:
      tags:
      - MetalGateways
      summary: Returns all metal gateways for a project
      description: Return all metal gateways for a project
      operationId: findMetalGatewaysByProject
      parameters:
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetalGatewayList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - MetalGateways
      summary: Create a metal gateway
      description: Create a metal gateway in a project
      operationId: createMetalGateway
      parameters:
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      requestBody:
        description: Metal Gateway to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_id_metalgateways_body'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/self-service/reservations:
    get:
      tags:
      - SelfServiceReservations
      summary: Retrieve all reservations
      description: Returns all reservations.
      operationId: findSelfServiceReservations
      parameters:
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: categories
        in: query
        description: Filter reservations by items category
        schema:
          type: array
          items:
            type: string
            example: compute
            enum:
            - compute
            - storage
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceReservationList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - SelfServiceReservations
      summary: Create a reservation
      description: Creates a reservation.
      operationId: createSelfServiceReservation
      parameters:
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: reservation to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSelfServiceReservationRequest'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceReservationResponse'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/self-service/reservations/{id}:
    get:
      tags:
      - SelfServiceReservations
      summary: Retrieve a reservation
      description: Returns a reservation
      operationId: findSelfServiceReservation
      parameters:
      - name: id
        in: path
        description: Reservation short_id
        required: true
        schema:
          type: string
          format: uuid
      - name: project_id
        in: path
        description: Project UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfServiceReservationResponse'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reset-password:
    post:
      tags:
      - PasswordResetTokens
      summary: Create a password reset token
      description: Creates a password reset token
      operationId: createPasswordResetToken
      parameters:
      - name: email
        in: query
        description: Email of user to create password reset token
        required: true
        schema:
          type: string
      responses:
        "201":
          description: created
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - PasswordResetTokens
      summary: Reset current user password
      description: Resets current user password.
      operationId: resetPassword
      responses:
        "201":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPassword'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /routes/{id}:
    get:
      tags:
      - VRFs
      summary: Retrieve a VRF Route
      description: Returns a single VRF Route resource
      operationId: findVrfRouteById
      parameters:
      - name: id
        in: path
        description: VRF Route UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfRoute'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - VRFs
      summary: Update a VRF Route
      description: Requests a VRF Route be redeployed across the network. Updating
        the prefix or next-hop address on a route is not currently supported.
      operationId: updateVrfRouteById
      parameters:
      - name: id
        in: path
        description: VRF Route UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrfRouteUpdateInput'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfRoute'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - VRFs
      summary: Delete a VRF Route
      description: "Trigger the deletion of a VRF Route resource. The status of the\
        \ route will update to 'deleting', and the route resource will remain accessible\
        \ while background operations remove the route from the network. Once the\
        \ route has been removed from the network, the resource will be fully deleted."
      operationId: deleteVrfRouteById
      parameters:
      - name: id
        in: path
        description: VRF Route UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfRoute'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /routes/{id}/events:
    get:
      tags:
      - Events
      summary: Retrieve VRF route events
      description: Returns a list of the VRF route events
      operationId: findVrfRouteEvents
      parameters:
      - name: id
        in: path
        description: VRF Route UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /spot-market-requests/{id}:
    get:
      tags:
      - SpotMarket
      summary: Retrieve a spot market request
      description: Returns a single spot market request
      operationId: findSpotMarketRequestById
      parameters:
      - name: id
        in: path
        description: SpotMarketRequest UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotMarketRequest'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - SpotMarket
      summary: Delete the spot market request
      description: Deletes the spot market request.
      operationId: deleteSpotMarketRequest
      parameters:
      - name: id
        in: path
        description: SpotMarketRequest UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: force_termination
        in: query
        description: Terminate associated spot instances
        schema:
          type: boolean
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ssh-keys:
    get:
      tags:
      - SSHKeys
      summary: Retrieve all ssh keys
      description: Returns a collection of the user’s ssh keys.
      operationId: findSSHKeys
      parameters:
      - name: search
        in: query
        description: "Search by key, label, or fingerprint"
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - SSHKeys
      summary: Create a ssh key for the current user
      description: Creates a ssh key.
      operationId: createSSHKey
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/SSHKeyCreateInput'
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ssh-keys/{id}:
    get:
      tags:
      - SSHKeys
      summary: Retrieve a ssh key
      description: Returns a single ssh key if the user has access
      operationId: findSSHKeyById
      parameters:
      - name: id
        in: path
        description: SSH Key UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - SSHKeys
      summary: Update the ssh key
      description: Updates the ssh key.
      operationId: updateSSHKey
      parameters:
      - name: id
        in: path
        description: SSH Key UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: ssh key to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKeyInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - SSHKeys
      summary: Delete the ssh key
      description: Deletes the ssh key.
      operationId: deleteSSHKey
      parameters:
      - name: id
        in: path
        description: ssh key UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /support-requests:
    post:
      tags:
      - SupportRequest
      summary: Create a support ticket
      description: Support Ticket.
      operationId: requestSuppert
      requestBody:
        description: Support Request to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportRequestInput'
        required: true
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transfers/{id}:
    get:
      tags:
      - TransferRequests
      summary: View a transfer request
      description: Returns a single transfer request.
      operationId: findTransferRequestById
      parameters:
      - name: id
        in: path
        description: Transfer request UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRequest'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - TransferRequests
      summary: Accept a transfer request
      description: Accept a transfer request.
      operationId: acceptTransferRequest
      parameters:
      - name: id
        in: path
        description: Transfer request UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - TransferRequests
      summary: Decline a transfer request
      description: Decline a transfer request.
      operationId: declineTransferRequest
      parameters:
      - name: id
        in: path
        description: Transfer request UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    get:
      tags:
      - Users
      summary: Retrieve the current user
      description: Returns the user object for the currently logged-in user.
      operationId: findCurrentUser
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Users
      summary: Update the current user
      description: Updates the currently logged-in user.
      operationId: updateCurrentUser
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: User to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/api-keys:
    get:
      tags:
      - Authentication
      summary: Retrieve all user API keys
      description: Returns all API keys for the current user.
      operationId: findAPIKeys
      parameters:
      - name: search
        in: query
        description: Search by description
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Authentication
      summary: Create an API key
      description: Creates a API key for the current user.
      operationId: createAPIKey
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: API key to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/api-keys/{id}:
    delete:
      tags:
      - Authentication
      summary: Delete the API key
      description: Deletes the current user API key.
      operationId: deleteUserAPIKey
      parameters:
      - name: id
        in: path
        description: API Key UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/otp/app:
    post:
      tags:
      - TwoFactorAuth
      summary: Enable two factor auth using app
      description: Enables two factor authentication using authenticator app.
      operationId: enableTfaApp
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - TwoFactorAuth
      summary: Disable two factor authentication
      description: Disables two factor authentication.
      operationId: disableTfaApp
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/otp/recovery-codes:
    get:
      tags:
      - OTPs
      summary: Retrieve my recovery codes
      description: Returns my recovery codes.
      operationId: findRecoveryCodes
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryCodeList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - OTPs
      summary: Generate new recovery codes
      description: Generate a new set of recovery codes.
      operationId: regenerateCodes
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryCodeList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/otp/sms:
    post:
      tags:
      - TwoFactorAuth
      summary: Enable two factor auth using sms
      description: Enables two factor authentication with sms.
      operationId: enableTfaSms
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - TwoFactorAuth
      summary: Disable two factor authentication
      description: Disables two factor authentication.
      operationId: disableTfaSms
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/otp/sms/receive:
    post:
      tags:
      - OTPs
      summary: Receive an OTP per sms
      description: Sends an OTP to the user's mobile phone.
      operationId: receiveCodes
      responses:
        "204":
          description: no content
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/otp/verify/{otp}:
    post:
      tags:
      - OTPs
      summary: Verify user by providing an OTP
      description: "It verifies the user once a valid OTP is provided. It gives back\
        \ a session token, essentially logging in the user."
      operationId: findEnsureOtp
      parameters:
      - name: otp
        in: path
        description: OTP
        required: true
        schema:
          type: string
      responses:
        "204":
          description: no content
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /userdata/validate:
    post:
      tags:
      - Userdata
      summary: Validate user data
      description: Validates user data (Userdata)
      operationId: validateUserdata
      parameters:
      - name: userdata
        in: query
        description: Userdata to validate
        schema:
          type: string
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      tags:
      - Users
      summary: Retrieve all users
      description: "Returns a list of users that the are accessible to the current\
        \ user (all users in the current user’s projects, essentially)."
      operationId: findUsers
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Users
      summary: Create a user
      description: Creates a user.
      operationId: createUser
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: User to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateInput'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                - Email address username@example.com has already been taken
  /users/{id}:
    get:
      tags:
      - Users
      summary: Retrieve a user
      description: Returns a single user if the user has access
      operationId: findUserById
      parameters:
      - name: id
        in: path
        description: User UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}/customdata:
    get:
      tags:
      - Users
      summary: Retrieve the custom metadata of a user
      description: Provides the custom metadata stored for this user in json format
      operationId: findUserCustomdata
      parameters:
      - name: id
        in: path
        description: User UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /verify-email:
    put:
      tags:
      - UserVerificationTokens
      summary: Verify a user using an email verification token
      description: Consumes an email verification token and verifies the user associated
        with it.
      operationId: consumeVerificationRequest
      parameters:
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Email to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      responses:
        "200":
          description: ok
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - UserVerificationTokens
      summary: Create an email verification request
      description: Creates an email verification request
      operationId: createValidationRequest
      parameters:
      - name: login
        in: query
        description: Email for verification request
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "201":
          description: created
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /virtual-circuits/{id}/events:
    get:
      tags:
      - Events
      summary: Retrieve virtual circuit events
      description: Returns a list of the virtual circuit events
      operationId: findVirtualCircuitEvents
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Page to return
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Items returned per page
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /virtual-circuits/{id}:
    get:
      tags:
      - Interconnections
      summary: Get a virtual circuit
      description: Get the details of a virtual circuit
      operationId: getVirtualCircuit
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Interconnections
      summary: Update a virtual circuit
      description: Update the details of a virtual circuit.
      operationId: updateVirtualCircuit
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Updated Virtual Circuit details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualCircuitUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
        "202":
          description: accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Interconnections
      summary: Delete a virtual circuit
      description: Delete a virtual circuit from a Dedicated Port.
      operationId: deleteVirtualCircuit
      parameters:
      - name: id
        in: path
        description: Virtual Circuit UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "202":
          description: accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualCircuit'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /virtual-networks/{id}:
    get:
      tags:
      - VLANs
      summary: Get a virtual network
      description: Get a virtual network.
      operationId: getVirtualNetwork
      parameters:
      - name: id
        in: path
        description: Virtual Network UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - VLANs
      summary: Delete a virtual network
      description: Deletes a virtual network.
      operationId: deleteVirtualNetwork
      parameters:
      - name: id
        in: path
        description: Virtual Network UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /vrfs/{id}:
    get:
      tags:
      - VRFs
      summary: Retrieve a VRF
      description: Returns a single VRF resource
      operationId: findVrfById
      parameters:
      - name: id
        in: path
        description: VRF UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vrf'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - VRFs
      summary: Update the VRF
      description: Updates the VRF.
      operationId: updateVrf
      parameters:
      - name: id
        in: path
        description: VRF UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: VRF to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrfUpdateInput'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vrf'
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - VRFs
      summary: Delete the VRF
      description: Deletes the VRF
      operationId: deleteVrf
      parameters:
      - name: id
        in: path
        description: VRF UUID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: no content
        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /vrfs/{id}/ips:
    get:
      tags:
      - VRFs
      summary: Retrieve all VRF IP Reservations in the VRF
      description: Returns the list of VRF IP Reservations for the VRF.
      operationId: findVrfIpReservations
      parameters:
      - name: id
        in: path
        description: VRF UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfIpReservationList'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /vrfs/{vrf_id}/ips/{id}:
    get:
      tags:
      - VRFs
      summary: Retrieve all VRF IP Reservations in the VRF
      description: Returns the IP Reservation for the VRF.
      operationId: findVrfIpReservation
      parameters:
      - name: vrf_id
        in: path
        description: VRF UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        description: IP UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: Nested attributes to include. Included objects will return their
          full attributes. Attribute names can be dotted (up to 3 levels) to included
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: Nested attributes to exclude. Excluded objects will return only
          the href attribute. Attribute names can be dotted (up to 3 levels) to exclude
          deeply nested objects.
        style: form
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfIpReservation'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /vrfs/{id}/routes:
    get:
      tags:
      - VRFs
      summary: Retrieve all routes in the VRF
      description: Returns the list of routes for the VRF
      operationId: getVrfRoutes
      parameters:
      - name: id
        in: path
        description: VRF UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfRouteList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - VRFs
      summary: Create a VRF route
      description: |
        Create a route in a VRF. Currently only static default routes are supported.

        Notice: VRFs are a test feature currently under active development, and only available to certain users. Please contact Customer Success for more information.
      operationId: createVrfRoute
      parameters:
      - name: id
        in: path
        description: VRF UUID
        required: true
        schema:
          type: string
          format: uuid
      - name: include
        in: query
        description: |-
          Nested attributes to include. Included objects will return their full
          attributes. Attribute names can be dotted (up to 3 levels) to included deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: exclude
        in: query
        description: |-
          Nested attributes to exclude. Excluded objects will return only the href
          attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
          nested objects.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrfRouteCreateInput'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfRoute'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Address:
      required:
      - address
      - country
      - zip_code
      type: object
      properties:
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        country:
          type: string
        state:
          type: string
        zip_code:
          type: string
      example:
        country: country
        address: address
        address2: address2
        city: city
        coordinates:
          latitude: latitude
          longitude: longitude
        state: state
        zip_code: zip_code
    AuthToken:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        description:
          type: string
          description: Available only for API keys
        id:
          type: string
          format: uuid
        project:
          allOf:
          - $ref: '#/components/schemas/Project'
          - type: object
            description: Available only for project tokens
        read_only:
          type: boolean
        token:
          type: string
        updated_at:
          type: string
          format: date-time
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          - type: object
            description: Available only for user tokens
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        read_only: true
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        project: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: ""
        token: token
    AuthTokenInput:
      type: object
      properties:
        description:
          type: string
        read_only:
          type: boolean
    AuthTokenList:
      type: object
      properties:
        api_keys:
          type: array
          items:
            $ref: '#/components/schemas/AuthToken'
      example:
        api_keys:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          read_only: true
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          project: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: ""
          token: token
        - updated_at: 2000-01-23T04:56:07.000+00:00
          read_only: true
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          project: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: ""
          token: token
    BGPSessionInput:
      type: object
      properties:
        address_family:
          type: string
          description: Address family for BGP session.
          example: ipv4
          enum:
          - ipv4
          - ipv6
        default_route:
          type: boolean
          description: Set the default route policy.
          default: false
    Batch:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        error_messages:
          type: array
          items:
            type: string
        id:
          type: string
          format: uuid
        project:
          $ref: '#/components/schemas/Href'
        quantity:
          type: integer
        state:
          type: string
        updated_at:
          type: string
          format: date-time
      example:
        quantity: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        devices:
        - href: href
        - href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        project: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        error_messages:
        - error_messages
        - error_messages
    BatchesList:
      type: object
      properties:
        batches:
          type: array
          items:
            $ref: '#/components/schemas/Batch'
      example:
        batches:
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          devices:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          project: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          error_messages:
          - error_messages
          - error_messages
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          devices:
          - href: href
          - href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          project: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          error_messages:
          - error_messages
          - error_messages
    BgpConfig:
      type: object
      properties:
        asn:
          type: integer
          description: "Autonomous System Number. ASN is required with Global BGP.\
            \ With Local BGP the private ASN, 65000, is assigned."
          format: int32
          example: 65000
        created_at:
          type: string
          format: date-time
        deployment_type:
          type: string
          description: |
            In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space.
          example: local
          enum:
          - global
          - local
        href:
          type: string
        id:
          type: string
          format: uuid
        max_prefix:
          type: integer
          description: The maximum number of route filters allowed per server
          default: 10
        md5:
          type: string
          description: (Optional) Password for BGP session in plaintext (not a checksum)
          nullable: true
        project:
          $ref: '#/components/schemas/Href'
        ranges:
          type: array
          description: The IP block ranges associated to the ASN (Populated in Global
            BGP only)
          items:
            $ref: '#/components/schemas/GlobalBgpRange'
        requested_at:
          type: string
          format: date-time
        route_object:
          type: string
          description: Specifies AS-MACRO (aka AS-SET) to use when building client
            route filters
        sessions:
          type: array
          description: The direct connections between neighboring routers that want
            to exchange routing information.
          items:
            $ref: '#/components/schemas/BgpSession'
        status:
          type: string
          description: Status of the BGP Config. Status "requested" is valid only
            with the "global" deployment_type.
          enum:
          - requested
          - enabled
          - disabled
      example:
        sessions:
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          default_route: true
          device:
            href: href
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
          status: unknown
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          default_route: true
          device:
            href: href
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
          status: unknown
        ranges:
        - address_family: 6
          project: null
          range: range
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - address_family: 6
          project: null
          range: range
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        max_prefix: 0
        project:
          href: href
        route_object: route_object
        deployment_type: local
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        asn: 65000
        md5: md5
        requested_at: 2000-01-23T04:56:07.000+00:00
        status: requested
    BgpConfigRequestInput:
      required:
      - asn
      - deployment_type
      type: object
      properties:
        asn:
          type: integer
          description: Autonomous System Number for local BGP deployment.
          example: 65000
        deployment_type:
          type: string
          description: Wether the BGP deployment is local or global. Local deployments
            are configured immediately. Global deployments will need to be reviewed
            by Equinix Metal engineers.
          example: local
          enum:
          - local
          - global
        md5:
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{10,20}$"
          type: string
          description: |
            The plaintext password to share between BGP neighbors as an MD5 checksum:
            * must be 10-20 characters long
            * may not include punctuation
            * must be a combination of numbers and letters
            * must contain at least one lowercase, uppercase, and digit character
        use_case:
          type: string
          description: A use case explanation (necessary for global BGP request review).
    BgpDynamicNeighbor:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the resource
          format: uuid
          readOnly: true
          example: aea82f16-57ec-412c-9523-b7f2b27635b2
        bgp_neighbor_asn:
          type: integer
          description: The ASN of the dynamic BGP neighbor
          example: 12345
        bgp_neighbor_range:
          type: string
          description: Network range of the dynamic BGP neighbor in CIDR format
          example: 192.168.1.0/25
        metal_gateway:
          $ref: '#/components/schemas/VrfMetalGateway'
        state:
          type: string
          readOnly: true
          enum:
          - active
          - deleting
          - pending
          - ready
        href:
          type: string
          readOnly: true
          example: /bgp-dynamic-neighbors/aea82f16-57ec-412c-9523-b7f2b27635b2
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/UserLimited'
        updated_at:
          type: string
          format: date-time
          readOnly: true
      example:
        metal_gateway:
          virtual_network:
            vxlan: 4
            instances:
            - null
            - null
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            assigned_to_virtual_circuit: true
            tags:
            - tags
            - tags
            metal_gateways:
            - null
            - null
            metro_code: metro_code
            metro: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            facility: null
            assigned_to: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          ip_reservation:
            address: address
            created_at: 2000-01-23T04:56:07.000+00:00
            project:
              devices:
              - null
              - null
              volumes:
              - null
              - null
              created_at: 2000-01-23T04:56:07.000+00:00
              memberships:
              - null
              - null
              bgp_config: null
              tags:
              - tags
              - tags
              max_devices: {}
              ssh_keys:
              - null
              - null
              updated_at: 2000-01-23T04:56:07.000+00:00
              invitations:
              - null
              - null
              members:
              - null
              - null
              organization:
                website: website
                address:
                  country: country
                  address: address
                  address2: address2
                  city: city
                  coordinates:
                    latitude: latitude
                    longitude: longitude
                  state: state
                  zip_code: zip_code
                projects:
                - null
                - null
                credit_amount: 1.4658129
                created_at: 2000-01-23T04:56:07.000+00:00
                description: description
                billing_address: null
                memberships:
                - null
                - null
                enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                twitter: twitter
                updated_at: 2000-01-23T04:56:07.000+00:00
                terms: 5
                members:
                - null
                - null
                name: name
                logo: logo
                customdata: {}
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              network_status: {}
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              payment_method: null
            bill: true
            project_lite: null
            vrf:
              bgp_dynamic_neighbors_export_route_map: true
              bgp_dynamic_neighbors_bfd_enabled: true
              local_asn: 5
              description: description
              bill: false
              bgp_dynamic_neighbors_enabled: true
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              created_by:
                avatar_thumb_url: avatar_thumb_url
                last_login_at: 2000-01-23T04:56:07.000+00:00
                max_projects: 2
                timezone: timezone
                default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                created_at: 2000-01-23T04:56:07.000+00:00
                last_name: last_name
                short_id: short_id
                fraud_score: fraud_score
                emails:
                - null
                - null
                default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                full_name: full_name
                avatar_url: avatar_url
                updated_at: 2000-01-23T04:56:07.000+00:00
                phone_number: phone_number
                customdata: {}
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                first_name: first_name
                max_organizations: 3
                two_factor_auth: two_factor_auth
                email: email
              updated_at: 2000-01-23T04:56:07.000+00:00
              virtual_circuits:
              - subnet: 12.0.0.0/30
                customer_ip: 12.0.0.2
                description: description
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                vrf: null
                metal_ip: 12.0.0.1
                speed: 9
                tags:
                - tags
                - tags
                nni_vlan: 2
                updated_at: 2000-01-23T04:56:07.000+00:00
                port: null
                name: name
                peer_asn: 7
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                md5: md5
                status: status
              - subnet: 12.0.0.0/30
                customer_ip: 12.0.0.2
                description: description
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                vrf: null
                metal_ip: 12.0.0.1
                speed: 9
                tags:
                - tags
                - tags
                nni_vlan: 2
                updated_at: 2000-01-23T04:56:07.000+00:00
                port: null
                name: name
                peer_asn: 7
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                md5: md5
                status: status
              ip_ranges:
              - ip_ranges
              - ip_ranges
              metro:
                country: country
                code: code
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              href: href
            type: vrf
            created_by: null
            network: network
            tags:
            - tags
            - tags
            manageable: true
            metal_gateway:
              gateway_address: 10.1.2.1/27
              updated_at: 2000-01-23T04:56:07.000+00:00
              vlan: 1001
              created_at: 2000-01-23T04:56:07.000+00:00
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: ready
            address_family: 0
            public: true
            netmask: netmask
            management: true
            metro: null
            cidr: 6
            details: details
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            customdata: {}
            gateway: gateway
          created_at: 2000-01-23T04:56:07.000+00:00
          project: null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: ready
          vrf: null
          created_by:
            href: href
        bgp_neighbor_asn: 12345
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: aea82f16-57ec-412c-9523-b7f2b27635b2
        bgp_neighbor_range: 192.168.1.0/25
        state: active
        href: /bgp-dynamic-neighbors/aea82f16-57ec-412c-9523-b7f2b27635b2
        created_by:
          avatar_thumb_url: avatar_thumb_url
          full_name: full_name
          avatar_url: avatar_url
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    BgpDynamicNeighborCreateInput:
      required:
      - bgp_neighbor_asn
      - bgp_neighbor_range
      type: object
      properties:
        bgp_neighbor_range:
          type: string
          description: Network range of the dynamic BGP neighbor in CIDR format
          example: 192.168.1.0/25
        bgp_neighbor_asn:
          type: integer
          description: The ASN of the dynamic BGP neighbor
          example: 12345
    BgpDynamicNeighborList:
      type: object
      properties:
        bgp_dynamic_neighbors:
          type: array
          items:
            $ref: '#/components/schemas/BgpDynamicNeighbor'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
        bgp_dynamic_neighbors:
        - metal_gateway:
            virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            updated_at: 2000-01-23T04:56:07.000+00:00
            ip_reservation:
              address: address
              created_at: 2000-01-23T04:56:07.000+00:00
              project:
                devices:
                - null
                - null
                volumes:
                - null
                - null
                created_at: 2000-01-23T04:56:07.000+00:00
                memberships:
                - null
                - null
                bgp_config: null
                tags:
                - tags
                - tags
                max_devices: {}
                ssh_keys:
                - null
                - null
                updated_at: 2000-01-23T04:56:07.000+00:00
                invitations:
                - null
                - null
                members:
                - null
                - null
                organization:
                  website: website
                  address:
                    country: country
                    address: address
                    address2: address2
                    city: city
                    coordinates:
                      latitude: latitude
                      longitude: longitude
                    state: state
                    zip_code: zip_code
                  projects:
                  - null
                  - null
                  credit_amount: 1.4658129
                  created_at: 2000-01-23T04:56:07.000+00:00
                  description: description
                  billing_address: null
                  memberships:
                  - null
                  - null
                  enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                  twitter: twitter
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  terms: 5
                  members:
                  - null
                  - null
                  name: name
                  logo: logo
                  customdata: {}
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                network_status: {}
                customdata: {}
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                payment_method: null
              bill: true
              project_lite: null
              vrf:
                bgp_dynamic_neighbors_export_route_map: true
                bgp_dynamic_neighbors_bfd_enabled: true
                local_asn: 5
                description: description
                bill: false
                bgp_dynamic_neighbors_enabled: true
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                created_by:
                  avatar_thumb_url: avatar_thumb_url
                  last_login_at: 2000-01-23T04:56:07.000+00:00
                  max_projects: 2
                  timezone: timezone
                  default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  created_at: 2000-01-23T04:56:07.000+00:00
                  last_name: last_name
                  short_id: short_id
                  fraud_score: fraud_score
                  emails:
                  - null
                  - null
                  default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  full_name: full_name
                  avatar_url: avatar_url
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  phone_number: phone_number
                  customdata: {}
                  href: href
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  first_name: first_name
                  max_organizations: 3
                  two_factor_auth: two_factor_auth
                  email: email
                updated_at: 2000-01-23T04:56:07.000+00:00
                virtual_circuits:
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                ip_ranges:
                - ip_ranges
                - ip_ranges
                metro:
                  country: country
                  code: code
                  name: name
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                href: href
              type: vrf
              created_by: null
              network: network
              tags:
              - tags
              - tags
              manageable: true
              metal_gateway:
                gateway_address: 10.1.2.1/27
                updated_at: 2000-01-23T04:56:07.000+00:00
                vlan: 1001
                created_at: 2000-01-23T04:56:07.000+00:00
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                state: ready
              address_family: 0
              public: true
              netmask: netmask
              management: true
              metro: null
              cidr: 6
              details: details
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              customdata: {}
              gateway: gateway
            created_at: 2000-01-23T04:56:07.000+00:00
            project: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: ready
            vrf: null
            created_by:
              href: href
          bgp_neighbor_asn: 12345
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: aea82f16-57ec-412c-9523-b7f2b27635b2
          bgp_neighbor_range: 192.168.1.0/25
          state: active
          href: /bgp-dynamic-neighbors/aea82f16-57ec-412c-9523-b7f2b27635b2
          created_by:
            avatar_thumb_url: avatar_thumb_url
            full_name: full_name
            avatar_url: avatar_url
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - metal_gateway:
            virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            updated_at: 2000-01-23T04:56:07.000+00:00
            ip_reservation:
              address: address
              created_at: 2000-01-23T04:56:07.000+00:00
              project:
                devices:
                - null
                - null
                volumes:
                - null
                - null
                created_at: 2000-01-23T04:56:07.000+00:00
                memberships:
                - null
                - null
                bgp_config: null
                tags:
                - tags
                - tags
                max_devices: {}
                ssh_keys:
                - null
                - null
                updated_at: 2000-01-23T04:56:07.000+00:00
                invitations:
                - null
                - null
                members:
                - null
                - null
                organization:
                  website: website
                  address:
                    country: country
                    address: address
                    address2: address2
                    city: city
                    coordinates:
                      latitude: latitude
                      longitude: longitude
                    state: state
                    zip_code: zip_code
                  projects:
                  - null
                  - null
                  credit_amount: 1.4658129
                  created_at: 2000-01-23T04:56:07.000+00:00
                  description: description
                  billing_address: null
                  memberships:
                  - null
                  - null
                  enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                  twitter: twitter
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  terms: 5
                  members:
                  - null
                  - null
                  name: name
                  logo: logo
                  customdata: {}
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                network_status: {}
                customdata: {}
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                payment_method: null
              bill: true
              project_lite: null
              vrf:
                bgp_dynamic_neighbors_export_route_map: true
                bgp_dynamic_neighbors_bfd_enabled: true
                local_asn: 5
                description: description
                bill: false
                bgp_dynamic_neighbors_enabled: true
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                created_by:
                  avatar_thumb_url: avatar_thumb_url
                  last_login_at: 2000-01-23T04:56:07.000+00:00
                  max_projects: 2
                  timezone: timezone
                  default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  created_at: 2000-01-23T04:56:07.000+00:00
                  last_name: last_name
                  short_id: short_id
                  fraud_score: fraud_score
                  emails:
                  - null
                  - null
                  default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  full_name: full_name
                  avatar_url: avatar_url
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  phone_number: phone_number
                  customdata: {}
                  href: href
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  first_name: first_name
                  max_organizations: 3
                  two_factor_auth: two_factor_auth
                  email: email
                updated_at: 2000-01-23T04:56:07.000+00:00
                virtual_circuits:
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                ip_ranges:
                - ip_ranges
                - ip_ranges
                metro:
                  country: country
                  code: code
                  name: name
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                href: href
              type: vrf
              created_by: null
              network: network
              tags:
              - tags
              - tags
              manageable: true
              metal_gateway:
                gateway_address: 10.1.2.1/27
                updated_at: 2000-01-23T04:56:07.000+00:00
                vlan: 1001
                created_at: 2000-01-23T04:56:07.000+00:00
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                state: ready
              address_family: 0
              public: true
              netmask: netmask
              management: true
              metro: null
              cidr: 6
              details: details
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              customdata: {}
              gateway: gateway
            created_at: 2000-01-23T04:56:07.000+00:00
            project: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: ready
            vrf: null
            created_by:
              href: href
          bgp_neighbor_asn: 12345
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: aea82f16-57ec-412c-9523-b7f2b27635b2
          bgp_neighbor_range: 192.168.1.0/25
          state: active
          href: /bgp-dynamic-neighbors/aea82f16-57ec-412c-9523-b7f2b27635b2
          created_by:
            avatar_thumb_url: avatar_thumb_url
            full_name: full_name
            avatar_url: avatar_url
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    BgpNeighborData:
      type: object
      properties:
        address_family:
          type: integer
          description: Address Family for IP Address. Accepted values are 4 or 6
          format: int32
          example: 4
        customer_as:
          type: integer
          description: "The customer's ASN. In a local BGP deployment, this will be\
            \ an internal ASN used to route within the data center. For a global BGP\
            \ deployment, this will be the your own ASN, configured when you set up\
            \ BGP for your project."
          format: int32
          example: 65000
        customer_ip:
          type: string
          description: "The device's IP address. For an IPv4 BGP session, this is\
            \ typically the private bond0 address for the device."
          example: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
        md5_enabled:
          type: boolean
          description: True if an MD5 password is configured for the project.
        md5_password:
          type: string
          description: "The MD5 password configured for the project, if set."
        multihop:
          type: boolean
          description: True when the BGP session should be configured as multihop.
        peer_as:
          type: integer
          description: The Peer ASN to use when configuring BGP on your device.
          format: int32
          example: 65530
        peer_ips:
          type: array
          description: "A list of one or more IP addresses to use for the Peer IP\
            \ section of your BGP configuration. For non-multihop sessions, this will\
            \ typically be a single gateway address for the device. For multihop sessions,\
            \ it will be a list of IPs."
          example:
          - 169.254.255.1
          - 169.254.255.2
          items:
            type: string
        routes_in:
          type: array
          description: A list of project subnets
          example:
          - exact: true
            route: 10.32.16.0/31
          items:
            $ref: '#/components/schemas/BgpRoute'
        routes_out:
          type: array
          description: A list of outgoing routes. Only populated if the BGP session
            has default route enabled.
          example:
          - exact: true
            route: 0.0.0.0/0
          items:
            $ref: '#/components/schemas/BgpRoute'
      example:
        md5_password: md5_password
        customer_as: 65000
        address_family: 4
        routes_in:
        - exact: true
          route: 10.32.16.0/31
        customer_ip: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
        multihop: true
        peer_as: 65530
        md5_enabled: true
        peer_ips:
        - 169.254.255.1
        - 169.254.255.2
        routes_out:
        - exact: true
          route: 0.0.0.0/0
    BgpSession:
      required:
      - address_family
      type: object
      properties:
        address_family:
          type: string
          enum:
          - ipv4
          - ipv6
        created_at:
          type: string
          format: date-time
        default_route:
          type: boolean
        device:
          $ref: '#/components/schemas/Href'
        href:
          type: string
        id:
          type: string
          format: uuid
        learned_routes:
          type: array
          items:
            type: string
            description: IPv4 or IPv6 range
            example: 10.32.16.0/31
        status:
          type: string
          description: " The status of the BGP Session. Multiple status values may\
            \ be reported when the device is connected to multiple switches, one value\
            \ per switch. Each status will start with \"unknown\" and progress to\
            \ \"up\" or \"down\" depending on the connected device. Subsequent \"\
            unknown\" values indicate a problem acquiring status from the switch. "
          enum:
          - unknown
          - up
          - down
        updated_at:
          type: string
          format: date-time
      example:
        address_family: ipv4
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        default_route: true
        device:
          href: href
        learned_routes:
        - 10.32.16.0/31
        - 10.32.16.0/31
        status: unknown
    BgpSessionList:
      type: object
      properties:
        bgp_sessions:
          type: array
          items:
            $ref: '#/components/schemas/BgpSession'
      example:
        bgp_sessions:
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          default_route: true
          device:
            href: href
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
          status: unknown
        - address_family: ipv4
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          default_route: true
          device:
            href: href
          learned_routes:
          - 10.32.16.0/31
          - 10.32.16.0/31
          status: unknown
    BgpSessionNeighbors:
      type: object
      properties:
        bgp_neighbors:
          type: array
          description: A list of BGP session neighbor data
          items:
            $ref: '#/components/schemas/BgpNeighborData'
      example:
        bgp_neighbors:
        - md5_password: md5_password
          customer_as: 65000
          address_family: 4
          routes_in:
          - exact: true
            route: 10.32.16.0/31
          customer_ip: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
          multihop: true
          peer_as: 65530
          md5_enabled: true
          peer_ips:
          - 169.254.255.1
          - 169.254.255.2
          routes_out:
          - exact: true
            route: 0.0.0.0/0
        - md5_password: md5_password
          customer_as: 65000
          address_family: 4
          routes_in:
          - exact: true
            route: 10.32.16.0/31
          customer_ip: 10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)
          multihop: true
          peer_as: 65530
          md5_enabled: true
          peer_ips:
          - 169.254.255.1
          - 169.254.255.2
          routes_out:
          - exact: true
            route: 0.0.0.0/0
    CapacityCheckPerFacilityInfo:
      type: object
      properties:
        available:
          type: boolean
        facility:
          type: string
        plan:
          type: string
        quantity:
          type: string
      example:
        quantity: quantity
        available: true
        facility: facility
        plan: plan
    CapacityCheckPerFacilityList:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/CapacityCheckPerFacilityInfo'
      example:
        servers:
        - quantity: quantity
          available: true
          facility: facility
          plan: plan
        - quantity: quantity
          available: true
          facility: facility
          plan: plan
    CapacityCheckPerMetroInfo:
      type: object
      properties:
        available:
          type: boolean
          description: Returns true if there is enough capacity in the metro to fulfill
            the quantity set. Returns false if there is not enough.
        metro:
          type: string
          description: The metro ID or code sent to check capacity.
        plan:
          type: string
          description: The plan ID or slug sent to check capacity.
        quantity:
          type: string
          description: The number of servers sent to check capacity.
      example:
        quantity: quantity
        metro: metro
        available: true
        plan: plan
    CapacityCheckPerMetroList:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/CapacityCheckPerMetroInfo'
      example:
        servers:
        - quantity: quantity
          metro: metro
          available: true
          plan: plan
        - quantity: quantity
          metro: metro
          available: true
          plan: plan
    CapacityInput:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/ServerInfo'
    CapacityLevelPerBaremetal:
      type: object
      properties:
        level:
          type: string
      example:
        level: level
    CapacityList:
      type: object
      properties:
        capacity:
          $ref: '#/components/schemas/CapacityReport'
      example:
        capacity:
          key:
            key:
              level: level
    CapacityReport:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          $ref: '#/components/schemas/CapacityLevelPerBaremetal'
      x-schema-name: CapacityReport
    Coordinates:
      type: object
      properties:
        latitude:
          type: string
        longitude:
          type: string
      example:
        latitude: latitude
        longitude: longitude
    CreateEmailInput:
      required:
      - address
      type: object
      properties:
        address:
          type: string
    CreateSelfServiceReservationRequest:
      type: object
      properties:
        item:
          type: array
          items:
            $ref: '#/components/schemas/SelfServiceReservationItemRequest'
        notes:
          type: string
        period:
          $ref: '#/components/schemas/CreateSelfServiceReservationRequest_period'
        start_date:
          type: string
          format: date-time
    Device:
      type: object
      properties:
        always_pxe:
          type: boolean
        billing_cycle:
          type: string
        bonding_mode:
          type: integer
        created_at:
          type: string
          format: date-time
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserLite'
          - type: object
            description: The user that created the device.
        customdata:
          type: object
          additionalProperties: true
          default: {}
        description:
          type: string
        facility:
          $ref: '#/components/schemas/Facility'
        hardware_reservation:
          $ref: '#/components/schemas/HardwareReservation'
        hostname:
          type: string
        href:
          type: string
        id:
          type: string
          format: uuid
        image_url:
          type: string
        ip_addresses:
          type: array
          items:
            $ref: '#/components/schemas/IPAssignment'
        ipxe_script_url:
          type: string
        iqn:
          type: string
        locked:
          type: boolean
          description: Prevents accidental deletion of this resource when set to true.
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - type: object
            description: The metro the facility is in
        network_frozen:
          type: boolean
          description: "Whether network mode changes such as converting to/from Layer2\
            \ or Layer3 networking, bonding or disbonding network interfaces are permitted\
            \ for the device."
        network_ports:
          type: array
          description: "By default, servers at Equinix Metal are configured in a “\
            bonded” mode using LACP (Link Aggregation Control Protocol). Each 2-NIC\
            \ server is configured with a single bond (namely bond0) with both interfaces\
            \ eth0 and eth1 as members of the bond in a default Layer 3 mode. Some\
            \ device plans may have a different number of ports and bonds available."
          items:
            $ref: '#/components/schemas/Port'
        operating_system:
          $ref: '#/components/schemas/OperatingSystem'
        actions:
          type: array
          description: Actions supported by the device instance.
          items:
            $ref: '#/components/schemas/Device_actions'
        plan:
          $ref: '#/components/schemas/Plan'
        project:
          $ref: '#/components/schemas/Project'
        project_lite:
          allOf:
          - $ref: '#/components/schemas/Href'
          - type: object
            description: Lite version of project object when included
        provisioning_events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        provisioning_percentage:
          type: number
          description: Only visible while device provisioning
          format: float
        root_password:
          type: string
          description: Root password is automatically generated when server is provisioned
            and it is removed after 24 hours
        short_id:
          type: string
        spot_instance:
          type: boolean
          description: Whether or not the device is a spot instance.
        spot_price_max:
          type: number
          description: |-
            The maximum price per hour you are willing to pay to keep this spot
            instance.  If you are outbid, the termination will be set allowing two
            minutes before shutdown.
          format: float
        ssh_keys:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        state:
          type: string
          description: "The current state the instance is in.\n\n* When an instance\
            \ is initially created it will be in the `queued` state until it is picked\
            \ up by the provisioner.\n* Once provisioning has begun on the instance\
            \ it's state will move to `provisioning`.\n* When an instance is deleted,\
            \ it will move to `deprovisioning` state until the deprovision is completed\
            \ and the instance state moves to `deleted`.\n* If an instance fails to\
            \ provision or deprovision it will move to `failed` state.\n* Once an\
            \ instance has completed provisioning it will move to `active` state.\n\
            * If an instance is currently powering off or powering on it will move\
            \ to `powering_off` or `powering_on` states respectively. \n* When the\
            \ instance is powered off completely it will move to the `inactive` state.\n\
            * When an instance is powered on completely it will move to the `active`\
            \ state.\n* Using the reinstall action to install a new OS on the instance\
            \ will cause the instance state to change to `reinstalling`.\n* When the\
            \ reinstall action is complete the instance will move to `active` state."
          enum:
          - queued
          - provisioning
          - deprovisioning
          - reinstalling
          - active
          - inactive
          - failed
          - powering_on
          - powering_off
          - deleted
        storage:
          $ref: '#/components/schemas/Storage'
        switch_uuid:
          type: string
          description: |-
            Switch short id. This can be used to determine if two devices are
            connected to the same switch, for example.
        tags:
          type: array
          items:
            type: string
        termination_time:
          type: string
          description: |-
            When the device will be terminated. If you don't supply timezone info, the timestamp is assumed to be in UTC.

            This is commonly set in advance for
            ephemeral spot market instances but this field may also be set with
            on-demand and reservation instances to automatically delete the resource
            at a given time. The termination time can also be used to release a
            hardware reservation instance at a given time, keeping the reservation
            open for other uses.  On a spot market device, the termination time will
            be set automatically when outbid.
          format: date-time
          example: 2021-09-03T16:32:00+03:00
        updated_at:
          type: string
          format: date-time
        user:
          type: string
        userdata:
          type: string
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        sos:
          type: string
          description: Hostname used to connect to the instance via the SOS (Serial
            over SSH) out-of-band console.
      example:
        ip_addresses:
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          management: true
          netmask: netmask
          metro: ""
          next_hop: next_hop
          cidr: 5
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: pending
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          management: true
          netmask: netmask
          metro: ""
          next_hop: next_hop
          cidr: 5
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: pending
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        iqn: iqn
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        project: null
        switch_uuid: switch_uuid
        storage:
          disks:
          - partitions:
            - number: 3
              size: size
              label: label
            - number: 3
              size: size
              label: label
            wipeTable: true
            device: device
          - partitions:
            - number: 3
              size: size
              label: label
            - number: 3
              size: size
              label: label
            wipeTable: true
            device: device
          filesystems:
          - mount:
              format: format
              options:
              - options
              - options
              device: device
              point: point
          - mount:
              format: format
              options:
              - options
              - options
              device: device
              point: point
          raid:
          - devices:
            - devices
            - devices
            level: level
            name: name
          - devices:
            - devices
            - devices
            level: level
            name: name
        bonding_mode: 0
        provisioning_events:
        - interpolated: interpolated
          relationships:
          - href: href
          - href: href
          ip: ip
          modified_by: {}
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          body: body
          type: type
        - interpolated: interpolated
          relationships:
          - href: href
          - href: href
          ip: ip
          modified_by: {}
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          body: body
          type: type
        network_ports:
        - native_virtual_network:
            vxlan: 4
            instances:
            - null
            - null
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            assigned_to_virtual_circuit: true
            tags:
            - tags
            - tags
            metal_gateways:
            - null
            - null
            metro_code: metro_code
            metro: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            facility: null
            assigned_to: null
          disbond_operation_supported: true
          data:
            bonded: true
            mac: mac
          name: bond0
          virtual_networks:
          - null
          - null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: NetworkPort
          network_type: layer2-bonded
          bond:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - native_virtual_network:
            vxlan: 4
            instances:
            - null
            - null
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            assigned_to_virtual_circuit: true
            tags:
            - tags
            - tags
            metal_gateways:
            - null
            - null
            metro_code: metro_code
            metro: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            facility: null
            assigned_to: null
          disbond_operation_supported: true
          data:
            bonded: true
            mac: mac
          name: bond0
          virtual_networks:
          - null
          - null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: NetworkPort
          network_type: layer2-bonded
          bond:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userdata: userdata
        hostname: hostname
        updated_at: 2000-01-23T04:56:07.000+00:00
        sos: sos
        operating_system:
          default_operating_system: true
          distro: distro
          preinstallable: true
          licensed: true
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          provisionable_on:
          - provisionable_on
          - provisionable_on
          version: version
          pricing: {}
          slug: slug
          distro_label: distro_label
        billing_cycle: billing_cycle
        customdata: ""
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: queued
        locked: true
        spot_price_max: 9.301444
        plan: null
        provisioning_percentage: 7.0614014
        network_frozen: true
        image_url: image_url
        root_password: root_password
        volumes:
        - null
        - null
        project_lite: ""
        short_id: short_id
        termination_time: 2021-09-03T16:32:00+03:00
        created_by: ""
        tags:
        - tags
        - tags
        hardware_reservation:
          custom_rate: 1050.5
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            devices:
            - null
            - null
            volumes:
            - null
            - null
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - null
            - null
            bgp_config: null
            tags:
            - tags
            - tags
            max_devices: {}
            ssh_keys:
            - null
            - null
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - null
            - null
            members:
            - null
            - null
            organization:
              website: website
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              projects:
              - null
              - null
              credit_amount: 1.4658129
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              billing_address: null
              memberships:
              - null
              - null
              enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
              twitter: twitter
              updated_at: 2000-01-23T04:56:07.000+00:00
              terms: 5
              members:
              - null
              - null
              name: name
              logo: logo
              customdata: {}
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            network_status: {}
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            payment_method: null
          switch_uuid: switch_uuid
          short_id: short_id
          termination_time: 2000-01-23T04:56:07.000+00:00
          provisionable: true
          need_of_service: true
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          device: null
          facility: null
          plan:
            legacy: true
            line: line
            available_in_metros:
            - price: null
              href: href
            - price: null
              href: href
            description: description
            available_in:
            - price:
                hour: 1.23
              href: href
            - price:
                hour: 1.23
              href: href
            type: standard
            specs:
              features:
                txt: true
                uefi: true
                raid: true
              memory:
                total: total
              cpus:
              - count: 6
                type: type
              - count: 6
                type: type
              drives:
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              nics:
              - count: 2
                type: 1Gbps
              - count: 2
                type: 1Gbps
            deployment_types:
            - on_demand
            - on_demand
            name: name
            categories:
            - categories
            - categories
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            class: m3.large.x86
            pricing: {}
            slug: m3.large.x86
          spare: true
        spot_instance: true
        ssh_keys:
        - null
        - null
        metro: ""
        always_pxe: true
        ipxe_script_url: ipxe_script_url
        facility:
          features:
          - baremetal
          - backend_transfer
          - global_ipv4
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          code: code
          ip_ranges:
          - 2604:1380::/36
          - 147.75.192.0/21
          metro: ""
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        actions:
        - name: name
          type: type
        - name: name
          type: type
        user: user
    DeviceCreateInput:
      required:
      - operating_system
      - plan
      type: object
      properties:
        always_pxe:
          type: boolean
          description: |-
            When true, devices with a `custom_ipxe` OS will always boot to iPXE. The
            default setting of false ensures that iPXE will be used on only the
            first boot.
          default: false
        billing_cycle:
          type: string
          description: The billing cycle of the device.
          enum:
          - hourly
          - daily
          - monthly
          - yearly
        customdata:
          type: object
          additionalProperties: true
          description: |-
            Customdata is an arbitrary JSON value that can be accessed via the
            metadata service.
          default: {}
        description:
          type: string
          description: |-
            Any description of the device or how it will be used. This may be used
            to inform other API consumers with project access.
        features:
          type: array
          description: |-
            The features attribute allows you to optionally specify what features your server should have.

            In the API shorthand syntax, all features listed are `required`:

            ```
            { "features": ["tpm"] }
            ```

            Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a `preferred` value. The request will not fail if we have no servers with that feature in our inventory. The API offers an alternative syntax for mixing preferred and required features:

            ```
            { "features": { "tpm": "required", "raid": "preferred" } }
            ```

            The request will only fail if there are no available servers matching the required `tpm` criteria.
          items:
            type: string
        hardware_reservation_id:
          type: string
          description: |-
            The Hardware Reservation UUID to provision. Alternatively, `next-available` can be specified to select from any of the available hardware reservations. An error will be returned if the requested reservation option is not available.

            See [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/) for more details.
          example: next-available
          default: ""
        hostname:
          type: string
          description: The hostname to use within the operating system. The same hostname
            may be used on multiple devices within a project.
        ip_addresses:
          type: array
          description: |-
            The `ip_addresses attribute will allow you to specify the addresses you want created with your device.

            The default value configures public IPv4, public IPv6, and private IPv4.

            Private IPv4 address is required. When specifying `ip_addresses`, one of the array items must enable private IPv4.

            Some operating systems require public IPv4 address. In those cases you will receive an error message if public IPv4 is not enabled.

            For example, to only configure your server with a private IPv4 address, you can send `{ "ip_addresses": [{ "address_family": 4, "public": false }] }`.

            It is possible to request a subnet size larger than a `/30` by assigning addresses using the UUID(s) of ip_reservations in your project.

            For example, `{ "ip_addresses": [..., {"address_family": 4, "public": true, "ip_reservations": ["uuid1", "uuid2"]}] }`

            To access a server without public IPs, you can use our Out-of-Band console access (SOS) or proxy through another server in the project with public IPs enabled.
          items:
            $ref: '#/components/schemas/IPAddress'
          default:
          - address_family: 4
            public: true
          - address_family: 4
            public: false
          - address_family: 6
            public: true
        ipxe_script_url:
          type: string
          description: |-
            When set, the device will chainload an iPXE Script at boot fetched from the supplied URL.

            See [Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/) for more details.
          externalDocs:
            url: https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/
        locked:
          type: boolean
          description: "Whether the device should be locked, preventing accidental\
            \ deletion."
          default: false
        network_frozen:
          type: boolean
          description: "If true, this instance can not be converted to a different\
            \ network type."
        no_ssh_keys:
          type: boolean
          description: Overrides default behaviour of attaching all of the organization
            members ssh keys and project ssh keys to device if no specific keys specified
          default: false
        operating_system:
          type: string
          description: "The slug of the operating system to provision. Check the Equinix\
            \ Metal operating system documentation for rules that may be imposed per\
            \ operating system, including restrictions on IP address options and device\
            \ plans."
        plan:
          type: string
          description: The slug of the device plan to provision.
          example: c3.large.x86
        private_ipv4_subnet_size:
          type: integer
          description: Deprecated. Use ip_addresses. Subnet range for addresses allocated
            to this device.
          format: int32
          default: 28
          x-deprecated: true
        project_ssh_keys:
          type: array
          description: |
            A list of UUIDs identifying the device parent project
            that should be authorized to access this device (typically
            via /root/.ssh/authorized_keys). These keys will also appear in the device metadata.

            If no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),
            all parent project keys, parent project members keys and organization members keys will be included. This behaviour can
            be changed with 'no_ssh_keys' option to omit any SSH key being added.
          items:
            type: string
            format: uuid
        public_ipv4_subnet_size:
          type: integer
          description: Deprecated. Use ip_addresses. Subnet range for addresses allocated
            to this device. Your project must have addresses available for a non-default
            request.
          format: int32
          default: 31
          x-deprecated: true
        spot_instance:
          type: boolean
          description: "Create a spot instance. Spot instances are created with a\
            \ maximum bid price. If the bid price is not met, the spot instance will\
            \ be terminated as indicated by the `termination_time` field."
        spot_price_max:
          type: number
          description: The maximum amount to bid for a spot instance.
          format: float
          example: 1.23
        ssh_keys:
          type: array
          description: |
            A list of new or existing project ssh_keys
            that should be authorized to access this device (typically
            via /root/.ssh/authorized_keys). These keys will also
            appear in the device metadata.

            These keys are added in addition to any keys defined by
              `project_ssh_keys` and `user_ssh_keys`.
          items:
            $ref: '#/components/schemas/SSHKeyInput'
        storage:
          $ref: '#/components/schemas/Storage'
        tags:
          type: array
          items:
            type: string
        termination_time:
          type: string
          description: |
            When the device will be terminated. If you don't supply timezone info, the timestamp is assumed to be in UTC.

            This is commonly set in advance for
            ephemeral spot market instances but this field may also be set with
            on-demand and reservation instances to automatically delete the resource
            at a given time. The termination time can also be used to release a
            hardware reservation instance at a given time, keeping the reservation
            open for other uses.  On a spot market device, the termination time will
            be set automatically when outbid.
          format: date-time
          example: 2021-09-03T16:32:00+03:00
        user_ssh_keys:
          type: array
          description: |
            A list of UUIDs identifying the users
            that should be authorized to access this device (typically
            via /root/.ssh/authorized_keys).  These keys will also
            appear in the device metadata.

            The users must be members of the project or organization.

            If no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),
            all parent project keys, parent project members keys and organization members keys will be included. This behaviour can
            be changed with 'no_ssh_keys' option to omit any SSH key being added.
          items:
            type: string
            format: uuid
        userdata:
          type: string
          description: |-
            The userdata presented in the metadata service for this device.  Userdata is fetched and interpreted by the operating system installed on the device. Acceptable formats are determined by the operating system, with the exception of a special iPXE enabling syntax which is handled before the operating system starts.

            See [Server User Data](https://metal.equinix.com/developers/docs/servers/user-data/) and [Provisioning with Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/#provisioning-with-custom-ipxe) for more details.
          externalDocs:
            url: https://metal.equinix.com/developers/docs/servers/user-data/
    DeviceCreateInFacilityInput:
      allOf:
      - $ref: '#/components/schemas/FacilityInput'
      - $ref: '#/components/schemas/DeviceCreateInput'
    DeviceCreateInMetroInput:
      allOf:
      - $ref: '#/components/schemas/MetroInput'
      - $ref: '#/components/schemas/DeviceCreateInput'
    DeviceList:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        devices:
        - ip_addresses:
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            management: true
            netmask: netmask
            metro: ""
            next_hop: next_hop
            cidr: 5
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: pending
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            management: true
            netmask: netmask
            metro: ""
            next_hop: next_hop
            cidr: 5
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: pending
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          iqn: iqn
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          project: null
          switch_uuid: switch_uuid
          storage:
            disks:
            - partitions:
              - number: 3
                size: size
                label: label
              - number: 3
                size: size
                label: label
              wipeTable: true
              device: device
            - partitions:
              - number: 3
                size: size
                label: label
              - number: 3
                size: size
                label: label
              wipeTable: true
              device: device
            filesystems:
            - mount:
                format: format
                options:
                - options
                - options
                device: device
                point: point
            - mount:
                format: format
                options:
                - options
                - options
                device: device
                point: point
            raid:
            - devices:
              - devices
              - devices
              level: level
              name: name
            - devices:
              - devices
              - devices
              level: level
              name: name
          bonding_mode: 0
          provisioning_events:
          - interpolated: interpolated
            relationships:
            - href: href
            - href: href
            ip: ip
            modified_by: {}
            created_at: 2000-01-23T04:56:07.000+00:00
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            body: body
            type: type
          - interpolated: interpolated
            relationships:
            - href: href
            - href: href
            ip: ip
            modified_by: {}
            created_at: 2000-01-23T04:56:07.000+00:00
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            body: body
            type: type
          network_ports:
          - native_virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            disbond_operation_supported: true
            data:
              bonded: true
              mac: mac
            name: bond0
            virtual_networks:
            - null
            - null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: NetworkPort
            network_type: layer2-bonded
            bond:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - native_virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            disbond_operation_supported: true
            data:
              bonded: true
              mac: mac
            name: bond0
            virtual_networks:
            - null
            - null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: NetworkPort
            network_type: layer2-bonded
            bond:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userdata: userdata
          hostname: hostname
          updated_at: 2000-01-23T04:56:07.000+00:00
          sos: sos
          operating_system:
            default_operating_system: true
            distro: distro
            preinstallable: true
            licensed: true
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            provisionable_on:
            - provisionable_on
            - provisionable_on
            version: version
            pricing: {}
            slug: slug
            distro_label: distro_label
          billing_cycle: billing_cycle
          customdata: ""
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: queued
          locked: true
          spot_price_max: 9.301444
          plan: null
          provisioning_percentage: 7.0614014
          network_frozen: true
          image_url: image_url
          root_password: root_password
          volumes:
          - null
          - null
          project_lite: ""
          short_id: short_id
          termination_time: 2021-09-03T16:32:00+03:00
          created_by: ""
          tags:
          - tags
          - tags
          hardware_reservation:
            custom_rate: 1050.5
            created_at: 2000-01-23T04:56:07.000+00:00
            project:
              devices:
              - null
              - null
              volumes:
              - null
              - null
              created_at: 2000-01-23T04:56:07.000+00:00
              memberships:
              - null
              - null
              bgp_config: null
              tags:
              - tags
              - tags
              max_devices: {}
              ssh_keys:
              - null
              - null
              updated_at: 2000-01-23T04:56:07.000+00:00
              invitations:
              - null
              - null
              members:
              - null
              - null
              organization:
                website: website
                address:
                  country: country
                  address: address
                  address2: address2
                  city: city
                  coordinates:
                    latitude: latitude
                    longitude: longitude
                  state: state
                  zip_code: zip_code
                projects:
                - null
                - null
                credit_amount: 1.4658129
                created_at: 2000-01-23T04:56:07.000+00:00
                description: description
                billing_address: null
                memberships:
                - null
                - null
                enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                twitter: twitter
                updated_at: 2000-01-23T04:56:07.000+00:00
                terms: 5
                members:
                - null
                - null
                name: name
                logo: logo
                customdata: {}
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              network_status: {}
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              payment_method: null
            switch_uuid: switch_uuid
            short_id: short_id
            termination_time: 2000-01-23T04:56:07.000+00:00
            provisionable: true
            need_of_service: true
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            device: null
            facility: null
            plan:
              legacy: true
              line: line
              available_in_metros:
              - price: null
                href: href
              - price: null
                href: href
              description: description
              available_in:
              - price:
                  hour: 1.23
                href: href
              - price:
                  hour: 1.23
                href: href
              type: standard
              specs:
                features:
                  txt: true
                  uefi: true
                  raid: true
                memory:
                  total: total
                cpus:
                - count: 6
                  type: type
                - count: 6
                  type: type
                drives:
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                nics:
                - count: 2
                  type: 1Gbps
                - count: 2
                  type: 1Gbps
              deployment_types:
              - on_demand
              - on_demand
              name: name
              categories:
              - categories
              - categories
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              class: m3.large.x86
              pricing: {}
              slug: m3.large.x86
            spare: true
          spot_instance: true
          ssh_keys:
          - null
          - null
          metro: ""
          always_pxe: true
          ipxe_script_url: ipxe_script_url
          facility:
            features:
            - baremetal
            - backend_transfer
            - global_ipv4
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            code: code
            ip_ranges:
            - 2604:1380::/36
            - 147.75.192.0/21
            metro: ""
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          actions:
          - name: name
            type: type
          - name: name
            type: type
          user: user
        - ip_addresses:
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            management: true
            netmask: netmask
            metro: ""
            next_hop: next_hop
            cidr: 5
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: pending
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          - address: address
            parent_block:
              netmask: netmask
              cidr: 2
              href: href
              network: network
            created_at: 2000-01-23T04:56:07.000+00:00
            enabled: true
            manageable: true
            network: network
            address_family: 5
            public: true
            management: true
            netmask: netmask
            metro: ""
            next_hop: next_hop
            cidr: 5
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: pending
            global_ip: true
            gateway: gateway
            assigned_to:
              href: href
          iqn: iqn
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          project: null
          switch_uuid: switch_uuid
          storage:
            disks:
            - partitions:
              - number: 3
                size: size
                label: label
              - number: 3
                size: size
                label: label
              wipeTable: true
              device: device
            - partitions:
              - number: 3
                size: size
                label: label
              - number: 3
                size: size
                label: label
              wipeTable: true
              device: device
            filesystems:
            - mount:
                format: format
                options:
                - options
                - options
                device: device
                point: point
            - mount:
                format: format
                options:
                - options
                - options
                device: device
                point: point
            raid:
            - devices:
              - devices
              - devices
              level: level
              name: name
            - devices:
              - devices
              - devices
              level: level
              name: name
          bonding_mode: 0
          provisioning_events:
          - interpolated: interpolated
            relationships:
            - href: href
            - href: href
            ip: ip
            modified_by: {}
            created_at: 2000-01-23T04:56:07.000+00:00
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            body: body
            type: type
          - interpolated: interpolated
            relationships:
            - href: href
            - href: href
            ip: ip
            modified_by: {}
            created_at: 2000-01-23T04:56:07.000+00:00
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            body: body
            type: type
          network_ports:
          - native_virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            disbond_operation_supported: true
            data:
              bonded: true
              mac: mac
            name: bond0
            virtual_networks:
            - null
            - null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: NetworkPort
            network_type: layer2-bonded
            bond:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - native_virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            disbond_operation_supported: true
            data:
              bonded: true
              mac: mac
            name: bond0
            virtual_networks:
            - null
            - null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: NetworkPort
            network_type: layer2-bonded
            bond:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userdata: userdata
          hostname: hostname
          updated_at: 2000-01-23T04:56:07.000+00:00
          sos: sos
          operating_system:
            default_operating_system: true
            distro: distro
            preinstallable: true
            licensed: true
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            provisionable_on:
            - provisionable_on
            - provisionable_on
            version: version
            pricing: {}
            slug: slug
            distro_label: distro_label
          billing_cycle: billing_cycle
          customdata: ""
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: queued
          locked: true
          spot_price_max: 9.301444
          plan: null
          provisioning_percentage: 7.0614014
          network_frozen: true
          image_url: image_url
          root_password: root_password
          volumes:
          - null
          - null
          project_lite: ""
          short_id: short_id
          termination_time: 2021-09-03T16:32:00+03:00
          created_by: ""
          tags:
          - tags
          - tags
          hardware_reservation:
            custom_rate: 1050.5
            created_at: 2000-01-23T04:56:07.000+00:00
            project:
              devices:
              - null
              - null
              volumes:
              - null
              - null
              created_at: 2000-01-23T04:56:07.000+00:00
              memberships:
              - null
              - null
              bgp_config: null
              tags:
              - tags
              - tags
              max_devices: {}
              ssh_keys:
              - null
              - null
              updated_at: 2000-01-23T04:56:07.000+00:00
              invitations:
              - null
              - null
              members:
              - null
              - null
              organization:
                website: website
                address:
                  country: country
                  address: address
                  address2: address2
                  city: city
                  coordinates:
                    latitude: latitude
                    longitude: longitude
                  state: state
                  zip_code: zip_code
                projects:
                - null
                - null
                credit_amount: 1.4658129
                created_at: 2000-01-23T04:56:07.000+00:00
                description: description
                billing_address: null
                memberships:
                - null
                - null
                enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                twitter: twitter
                updated_at: 2000-01-23T04:56:07.000+00:00
                terms: 5
                members:
                - null
                - null
                name: name
                logo: logo
                customdata: {}
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              network_status: {}
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              payment_method: null
            switch_uuid: switch_uuid
            short_id: short_id
            termination_time: 2000-01-23T04:56:07.000+00:00
            provisionable: true
            need_of_service: true
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            device: null
            facility: null
            plan:
              legacy: true
              line: line
              available_in_metros:
              - price: null
                href: href
              - price: null
                href: href
              description: description
              available_in:
              - price:
                  hour: 1.23
                href: href
              - price:
                  hour: 1.23
                href: href
              type: standard
              specs:
                features:
                  txt: true
                  uefi: true
                  raid: true
                memory:
                  total: total
                cpus:
                - count: 6
                  type: type
                - count: 6
                  type: type
                drives:
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                nics:
                - count: 2
                  type: 1Gbps
                - count: 2
                  type: 1Gbps
              deployment_types:
              - on_demand
              - on_demand
              name: name
              categories:
              - categories
              - categories
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              class: m3.large.x86
              pricing: {}
              slug: m3.large.x86
            spare: true
          spot_instance: true
          ssh_keys:
          - null
          - null
          metro: ""
          always_pxe: true
          ipxe_script_url: ipxe_script_url
          facility:
            features:
            - baremetal
            - backend_transfer
            - global_ipv4
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            code: code
            ip_ranges:
            - 2604:1380::/36
            - 147.75.192.0/21
            metro: ""
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          actions:
          - name: name
            type: type
          - name: name
            type: type
          user: user
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
    DeviceUpdateInput:
      type: object
      properties:
        always_pxe:
          type: boolean
        billing_cycle:
          type: string
        customdata:
          type: object
          additionalProperties: true
          default: {}
        description:
          type: string
        hostname:
          type: string
        ipxe_script_url:
          type: string
        locked:
          type: boolean
          description: "Whether the device should be locked, preventing accidental\
            \ deletion."
        network_frozen:
          type: boolean
          description: "If true, this instance can not be converted to a different\
            \ network type."
        spot_instance:
          type: boolean
          description: Can be set to false to convert a spot-market instance to on-demand.
          externalDocs:
            url: https://metal.equinix.com/developers/docs/deploy/spot-market/#converting-a-spot-market-server-to-on-demand
        tags:
          type: array
          items:
            type: string
        userdata:
          type: string
    DeviceUsage:
      type: object
      properties:
        quantity:
          type: string
        total:
          type: string
        unit:
          type: string
      example:
        total: total
        unit: unit
        quantity: quantity
    DeviceUsageList:
      type: object
      properties:
        usages:
          type: array
          items:
            $ref: '#/components/schemas/DeviceUsage'
      example:
        usages:
        - total: total
          unit: unit
          quantity: quantity
        - total: total
          unit: unit
          quantity: quantity
    Email:
      type: object
      properties:
        address:
          type: string
        default:
          type: boolean
        href:
          type: string
        id:
          type: string
          format: uuid
        verified:
          type: boolean
      example:
        default: true
        address: address
        verified: true
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    EmailInput:
      required:
      - address
      type: object
      properties:
        address:
          type: string
        default:
          type: boolean
    Entitlement:
      required:
      - id
      - slug
      - weight
      type: object
      properties:
        description:
          type: string
        feature_access:
          type: object
        href:
          type: string
        id:
          type: string
          format: uuid
        instance_quota:
          type: object
        ip_quota:
          type: object
        name:
          type: string
        project_quota:
          type: integer
          default: 0
        slug:
          type: string
        volume_limits:
          type: object
        volume_quota:
          type: object
        weight:
          type: integer
    Error:
      type: object
      properties:
        error:
          type: string
          description: A description of the error that caused the request to fail.
        errors:
          type: array
          description: A list of errors that contributed to the request failing.
          items:
            type: string
            description: An error message that contributed to the request failing.
      description: Error responses are included with 4xx and 5xx HTTP responses from
        the API service. Either "error" or "errors" will be set.
    Event:
      type: object
      properties:
        body:
          type: string
        created_at:
          type: string
          format: date-time
        href:
          type: string
        id:
          type: string
          format: uuid
        interpolated:
          type: string
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        state:
          type: string
        type:
          type: string
        modified_by:
          type: object
        ip:
          type: string
      example:
        interpolated: interpolated
        relationships:
        - href: href
        - href: href
        ip: ip
        modified_by: {}
        created_at: 2000-01-23T04:56:07.000+00:00
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        body: body
        type: type
    EventList:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
        events:
        - interpolated: interpolated
          relationships:
          - href: href
          - href: href
          ip: ip
          modified_by: {}
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          body: body
          type: type
        - interpolated: interpolated
          relationships:
          - href: href
          - href: href
          ip: ip
          modified_by: {}
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          body: body
          type: type
    FabricServiceToken:
      type: object
      properties:
        expires_at:
          type: string
          description: "The expiration date and time of the Fabric service token.\
            \ Once a service token is expired, it is no longer redeemable."
          format: date-time
        id:
          type: string
          description: "The UUID that can be used on the Fabric Portal to redeem either\
            \ an A-Side or Z-Side Service Token.\nFor Fabric VCs (Metal Billed), this\
            \ UUID will represent an A-Side Service Token, which will allow interconnections\n\
            to be made from Equinix Metal to other Service Providers on Fabric. For\
            \ Fabric VCs (Fabric Billed), this UUID will\nrepresent a Z-Side Service\
            \ Token, which will allow interconnections to be made to connect an owned\
            \ Fabric Port or \nVirtual Device to Equinix Metal."
          format: uuid
        max_allowed_speed:
          type: integer
          description: "The maximum speed that can be selected on the Fabric Portal\
            \ when configuring a interconnection with either \nan A-Side or Z-Side\
            \ Service Token. For Fabric VCs (Metal Billed), this is what the billing\
            \ is based off of, and can be one\nof the following options, '50mbps',\
            \ '200mbps', '500mbps', '1gbps', '2gbps', '5gbps' or '10gbps'. For Fabric\
            \ VCs\n(Fabric Billed), this will default to 10Gbps."
          example: 10000000000
        role:
          type: string
          description: "Either primary or secondary, depending on which interconnection\
            \ the service token is associated to."
          enum:
          - primary
          - secondary
        service_token_type:
          type: string
          description: "Either 'a_side' or 'z_side', depending on which type of Fabric\
            \ VC was requested."
          enum:
          - a_side
          - z_side
        state:
          type: string
          description: |-
            The state of the service token that corresponds with the service
            token state on Fabric. An 'inactive' state refers to a token that has not been
            redeemed yet on the Fabric side, an 'active' state refers to a token that has
            already been redeemed, and an 'expired' state refers to a token that has reached
            its expiry time.
          enum:
          - inactive
          - active
          - expired
      example:
        max_allowed_speed: 10000000000
        expires_at: 2000-01-23T04:56:07.000+00:00
        role: primary
        service_token_type: a_side
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: inactive
    Facility:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        code:
          type: string
        features:
          type: array
          example:
          - baremetal
          - backend_transfer
          - global_ipv4
          items:
            type: string
            enum:
            - baremetal
            - backend_transfer
            - layer_2
            - global_ipv4
            - ibx
        id:
          type: string
          format: uuid
        ip_ranges:
          type: array
          description: IP ranges registered in facility. Can be used for GeoIP location
          example:
          - 2604:1380::/36
          - 147.75.192.0/21
          items:
            type: string
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - type: object
            description: The metro the facility is in
        name:
          type: string
      example:
        features:
        - baremetal
        - backend_transfer
        - global_ipv4
        address:
          country: country
          address: address
          address2: address2
          city: city
          coordinates:
            latitude: latitude
            longitude: longitude
          state: state
          zip_code: zip_code
        code: code
        ip_ranges:
        - 2604:1380::/36
        - 147.75.192.0/21
        metro: ""
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    FacilityInput:
      required:
      - facility
      type: object
      properties:
        facility:
          type: array
          description: |-
            The datacenter where the device should be created.

            Either metro or facility must be provided.

            The API will accept either a single facility `{ "facility": "f1" }`, or it can be instructed to create the device in the best available datacenter `{ "facility": "any" }`.

            Additionally it is possible to set a prioritized location selection. For example `{ "facility": ["f3", "f2", "any"] }` can be used to prioritize `f3` and then `f2` before accepting `any` facility. If none of the facilities provided have availability for the requested device the request will fail.
          example:
          - sv15
          deprecated: true
          items:
            type: string
    FacilityList:
      type: object
      properties:
        facilities:
          type: array
          items:
            $ref: '#/components/schemas/Facility'
      example:
        facilities:
        - features:
          - baremetal
          - backend_transfer
          - global_ipv4
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          code: code
          ip_ranges:
          - 2604:1380::/36
          - 147.75.192.0/21
          metro: ""
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - features:
          - baremetal
          - backend_transfer
          - global_ipv4
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          code: code
          ip_ranges:
          - 2604:1380::/36
          - 147.75.192.0/21
          metro: ""
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    GlobalBgpRange:
      type: object
      properties:
        address_family:
          type: integer
        href:
          type: string
        id:
          type: string
          format: uuid
        project:
          $ref: '#/components/schemas/Href'
        range:
          type: string
      example:
        address_family: 6
        project: null
        range: range
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    GlobalBgpRangeList:
      type: object
      properties:
        global_bgp_ranges:
          type: array
          items:
            $ref: '#/components/schemas/GlobalBgpRange'
      example:
        global_bgp_ranges:
        - address_family: 6
          project: null
          range: range
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - address_family: 6
          project: null
          range: range
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    HardwareReservation:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        custom_rate:
          type: number
          description: Amount that will be charged for every billing_cycle.
          format: float
          example: 1050.5
        device:
          $ref: '#/components/schemas/Device'
        facility:
          $ref: '#/components/schemas/Facility'
        href:
          type: string
        id:
          type: string
          format: uuid
        need_of_service:
          type: boolean
          description: Whether this Device requires assistance from Equinix Metal.
        plan:
          $ref: '#/components/schemas/Plan'
        project:
          $ref: '#/components/schemas/Project'
        provisionable:
          type: boolean
          description: Whether the reserved server is provisionable or not. Spare
            devices can't be provisioned unless they are activated first.
        short_id:
          type: string
          description: Short version of the ID.
          format: string
        spare:
          type: boolean
          description: Whether the Hardware Reservation is a spare. Spare Hardware
            Reservations are used when a Hardware Reservations requires service from
            Equinix Metal
        switch_uuid:
          type: string
          description: "Switch short id. This can be used to determine if two devices\
            \ are connected to the same switch, for example."
        termination_time:
          type: string
          description: Expiration date for the reservation.
          format: date-time
      example:
        custom_rate: 1050.5
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          devices:
          - null
          - null
          volumes:
          - null
          - null
          created_at: 2000-01-23T04:56:07.000+00:00
          memberships:
          - null
          - null
          bgp_config: null
          tags:
          - tags
          - tags
          max_devices: {}
          ssh_keys:
          - null
          - null
          updated_at: 2000-01-23T04:56:07.000+00:00
          invitations:
          - null
          - null
          members:
          - null
          - null
          organization:
            website: website
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            projects:
            - null
            - null
            credit_amount: 1.4658129
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            billing_address: null
            memberships:
            - null
            - null
            enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
            twitter: twitter
            updated_at: 2000-01-23T04:56:07.000+00:00
            terms: 5
            members:
            - null
            - null
            name: name
            logo: logo
            customdata: {}
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          network_status: {}
          customdata: {}
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          payment_method: null
        switch_uuid: switch_uuid
        short_id: short_id
        termination_time: 2000-01-23T04:56:07.000+00:00
        provisionable: true
        need_of_service: true
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        device: null
        facility: null
        plan:
          legacy: true
          line: line
          available_in_metros:
          - price: null
            href: href
          - price: null
            href: href
          description: description
          available_in:
          - price:
              hour: 1.23
            href: href
          - price:
              hour: 1.23
            href: href
          type: standard
          specs:
            features:
              txt: true
              uefi: true
              raid: true
            memory:
              total: total
            cpus:
            - count: 6
              type: type
            - count: 6
              type: type
            drives:
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            nics:
            - count: 2
              type: 1Gbps
            - count: 2
              type: 1Gbps
          deployment_types:
          - on_demand
          - on_demand
          name: name
          categories:
          - categories
          - categories
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          class: m3.large.x86
          pricing: {}
          slug: m3.large.x86
        spare: true
    HardwareReservationList:
      type: object
      properties:
        hardware_reservations:
          type: array
          items:
            $ref: '#/components/schemas/HardwareReservation'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
        hardware_reservations:
        - custom_rate: 1050.5
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            devices:
            - null
            - null
            volumes:
            - null
            - null
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - null
            - null
            bgp_config: null
            tags:
            - tags
            - tags
            max_devices: {}
            ssh_keys:
            - null
            - null
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - null
            - null
            members:
            - null
            - null
            organization:
              website: website
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              projects:
              - null
              - null
              credit_amount: 1.4658129
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              billing_address: null
              memberships:
              - null
              - null
              enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
              twitter: twitter
              updated_at: 2000-01-23T04:56:07.000+00:00
              terms: 5
              members:
              - null
              - null
              name: name
              logo: logo
              customdata: {}
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            network_status: {}
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            payment_method: null
          switch_uuid: switch_uuid
          short_id: short_id
          termination_time: 2000-01-23T04:56:07.000+00:00
          provisionable: true
          need_of_service: true
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          device: null
          facility: null
          plan:
            legacy: true
            line: line
            available_in_metros:
            - price: null
              href: href
            - price: null
              href: href
            description: description
            available_in:
            - price:
                hour: 1.23
              href: href
            - price:
                hour: 1.23
              href: href
            type: standard
            specs:
              features:
                txt: true
                uefi: true
                raid: true
              memory:
                total: total
              cpus:
              - count: 6
                type: type
              - count: 6
                type: type
              drives:
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              nics:
              - count: 2
                type: 1Gbps
              - count: 2
                type: 1Gbps
            deployment_types:
            - on_demand
            - on_demand
            name: name
            categories:
            - categories
            - categories
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            class: m3.large.x86
            pricing: {}
            slug: m3.large.x86
          spare: true
        - custom_rate: 1050.5
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            devices:
            - null
            - null
            volumes:
            - null
            - null
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - null
            - null
            bgp_config: null
            tags:
            - tags
            - tags
            max_devices: {}
            ssh_keys:
            - null
            - null
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - null
            - null
            members:
            - null
            - null
            organization:
              website: website
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              projects:
              - null
              - null
              credit_amount: 1.4658129
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              billing_address: null
              memberships:
              - null
              - null
              enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
              twitter: twitter
              updated_at: 2000-01-23T04:56:07.000+00:00
              terms: 5
              members:
              - null
              - null
              name: name
              logo: logo
              customdata: {}
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            network_status: {}
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            payment_method: null
          switch_uuid: switch_uuid
          short_id: short_id
          termination_time: 2000-01-23T04:56:07.000+00:00
          provisionable: true
          need_of_service: true
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          device: null
          facility: null
          plan:
            legacy: true
            line: line
            available_in_metros:
            - price: null
              href: href
            - price: null
              href: href
            description: description
            available_in:
            - price:
                hour: 1.23
              href: href
            - price:
                hour: 1.23
              href: href
            type: standard
            specs:
              features:
                txt: true
                uefi: true
                raid: true
              memory:
                total: total
              cpus:
              - count: 6
                type: type
              - count: 6
                type: type
              drives:
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              nics:
              - count: 2
                type: 1Gbps
              - count: 2
                type: 1Gbps
            deployment_types:
            - on_demand
            - on_demand
            name: name
            categories:
            - categories
            - categories
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            class: m3.large.x86
            pricing: {}
            slug: m3.large.x86
          spare: true
    Href:
      required:
      - href
      type: object
      properties:
        href:
          type: string
      example:
        href: href
    IPAddress:
      type: object
      properties:
        address_family:
          type: integer
          description: Address Family for IP Address
          format: int32
          example: 4
          enum:
          - 4
          - 6
        cidr:
          type: integer
          description: "Cidr Size for the IP Block created. Valid values depends on\
            \ the operating system being provisioned. (28..32 for IPv4 addresses,\
            \ 124..127 for IPv6 addresses)"
          format: int32
          example: 28
        ip_reservations:
          type: array
          description: UUIDs of any IP reservations to use when assigning IPs
          items:
            type: string
        public:
          type: boolean
          description: Address Type for IP Address
          example: false
          default: true
    IPAssignment:
      type: object
      properties:
        address:
          type: string
        address_family:
          type: integer
        assigned_to:
          $ref: '#/components/schemas/Href'
        cidr:
          type: integer
        created_at:
          type: string
          format: date-time
        enabled:
          type: boolean
        gateway:
          type: string
        global_ip:
          type: boolean
        href:
          type: string
        id:
          type: string
          format: uuid
        manageable:
          type: boolean
        management:
          type: boolean
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - type: object
            description: The metro the IP address is in
        netmask:
          type: string
        network:
          type: string
        parent_block:
          $ref: '#/components/schemas/ParentBlock'
        public:
          type: boolean
        state:
          type: string
          description: |
            Only set when this is a Metal Gateway Elastic IP Assignment.

            Describes the current configuration state of this IP on the network.
          enum:
          - pending
          - active
          - deleting
        next_hop:
          type: string
          description: |
            Only set when this is a Metal Gateway Elastic IP Assignment.

            The IP address within the Metal Gateway to which requests to the Elastic IP are forwarded.
          format: ipv4
      example:
        address: address
        parent_block:
          netmask: netmask
          cidr: 2
          href: href
          network: network
        created_at: 2000-01-23T04:56:07.000+00:00
        enabled: true
        manageable: true
        network: network
        address_family: 5
        public: true
        management: true
        netmask: netmask
        metro: ""
        next_hop: next_hop
        cidr: 5
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: pending
        global_ip: true
        gateway: gateway
        assigned_to:
          href: href
    IPAssignmentInput:
      required:
      - address
      type: object
      properties:
        address:
          type: string
        customdata:
          type: object
    IPAssignmentList:
      type: object
      properties:
        ip_addresses:
          type: array
          items:
            $ref: '#/components/schemas/IPAssignment'
      example:
        ip_addresses:
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          management: true
          netmask: netmask
          metro: ""
          next_hop: next_hop
          cidr: 5
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: pending
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
        - address: address
          parent_block:
            netmask: netmask
            cidr: 2
            href: href
            network: network
          created_at: 2000-01-23T04:56:07.000+00:00
          enabled: true
          manageable: true
          network: network
          address_family: 5
          public: true
          management: true
          netmask: netmask
          metro: ""
          next_hop: next_hop
          cidr: 5
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: pending
          global_ip: true
          gateway: gateway
          assigned_to:
            href: href
    IPAvailabilitiesList:
      type: object
      properties:
        available:
          type: array
          items:
            type: string
      example:
        available:
        - available
        - available
    IPReservation:
      required:
      - type
      type: object
      properties:
        addon:
          type: boolean
        address:
          type: string
        address_family:
          type: integer
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/IPAssignment'
        available:
          type: string
        bill:
          type: boolean
        cidr:
          type: integer
        created_at:
          type: string
          format: date-time
        customdata:
          type: object
        enabled:
          type: boolean
        details:
          type: string
        facility:
          allOf:
          - $ref: '#/components/schemas/Facility'
          - type: object
            description: "The facility the IP reservation is in. If the facility the\
              \ IP reservation was requested in is in a metro, a metro value will\
              \ also be set, and the subsequent IP reservation can be used on a metro\
              \ level. Can be null if requesting an IP reservation in a metro."
        gateway:
          type: string
        global_ip:
          type: boolean
        href:
          type: string
        id:
          type: string
          format: uuid
        manageable:
          type: boolean
        management:
          type: boolean
        metal_gateway:
          $ref: '#/components/schemas/MetalGatewayLite'
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - type: object
            description: "The metro the IP reservation is in. As long as the IP reservation\
              \ has a metro, it can be used on a metro level. Can be null if requesting\
              \ an IP reservation in a facility that is not in a metro."
        netmask:
          type: string
        network:
          type: string
        project:
          $ref: '#/components/schemas/Project'
        project_lite:
          $ref: '#/components/schemas/Href'
        requested_by:
          $ref: '#/components/schemas/Href'
        public:
          type: boolean
        state:
          type: string
        tags:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
          - global_ipv4
          - public_ipv4
          - private_ipv4
          - public_ipv6
      additionalProperties: false
    IPReservationList:
      type: object
      properties:
        ip_addresses:
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/IPReservation'
            - $ref: '#/components/schemas/VrfIpReservation'
      example:
        ip_addresses:
        - ""
        - ""
    IPReservationRequestInput:
      required:
      - quantity
      - type
      type: object
      properties:
        comments:
          type: string
        customdata:
          type: object
        details:
          type: string
        facility:
          type: string
        fail_on_approval_required:
          type: boolean
        metro:
          type: string
          description: The code of the metro you are requesting the IP reservation
            in.
          example: SV
        quantity:
          type: integer
        tags:
          type: array
          items:
            type: string
        type:
          type: string
    InstancesBatchCreateInput:
      type: object
      properties:
        batches:
          type: array
          items:
            allOf:
            - type: object
              properties:
                hostnames:
                  type: array
                  items:
                    type: string
                quantity:
                  type: integer
                  description: "The number of devices to create in this batch. The\
                    \ hostname may contain an `{{index}}` placeholder, which will\
                    \ be replaced with the index of the device in the batch. For example,\
                    \ if the hostname is `device-{{index}}`, the first device in the\
                    \ batch will have the hostname `device-01`, the second device\
                    \ will have the hostname `device-02`, and so on."
            - oneOf:
              - $ref: '#/components/schemas/DeviceCreateInMetroInput'
              - $ref: '#/components/schemas/DeviceCreateInFacilityInput'
    Interconnection:
      type: object
      properties:
        contact_email:
          type: string
        description:
          type: string
        facility:
          $ref: '#/components/schemas/Href'
        id:
          type: string
          format: uuid
        metro:
          description: "The location of where the shared or Dedicated Port is located.\
            \ For interconnections with Dedicated Ports,\n  this will be the location\
            \ of the Dedicated Ports. For Fabric VCs (Metal Billed), this is where\
            \ interconnection will be originating from, as we pre-authorize the use\
            \ of one of our shared ports\n  as the origin of the interconnection using\
            \ A-Side service tokens. We only allow local connections for Fabric VCs\
            \ (Metal Billed), so the destination location must be the same as the\
            \ origin. For Fabric VCs (Fabric Billed), \n  this will be the destination\
            \ of the interconnection. We allow remote connections for Fabric VCs (Fabric\
            \ Billed), so the origin of the interconnection can be a different metro\
            \ set here."
          allOf:
          - $ref: '#/components/schemas/Metro'
        mode:
          type: string
          description: |-
            The mode of the interconnection (only relevant to Dedicated Ports). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.
              The default mode of an interconnection on a Dedicated Port is 'standard'. The mode can only be changed when there are no associated virtual circuits on the interconnection.
              In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.
          example: standard
          enum:
          - standard
          - tunnel
        name:
          type: string
        organization:
          $ref: '#/components/schemas/Href'
        ports:
          type: array
          description: "For Fabric VCs, these represent Virtual Port(s) created for\
            \ the interconnection. For dedicated interconnections, these represent\
            \ the Dedicated Port(s)."
          items:
            $ref: '#/components/schemas/InterconnectionPort'
        redundancy:
          type: string
          description: "Either 'primary', meaning a single interconnection, or 'redundant',\
            \ meaning a redundant interconnection."
          enum:
          - primary
          - redundant
        service_tokens:
          type: array
          description: "For Fabric VCs (Metal Billed), this will show details of the\
            \ A-Side service tokens issued for the interconnection. For Fabric VCs\
            \ (Fabric Billed), this will show the details of the Z-Side service tokens\
            \ issued for the interconnection. Dedicated interconnections will not\
            \ have any service tokens issued. There will be one per interconnection,\
            \ so for redundant interconnections, there should be two service tokens\
            \ issued."
          items:
            $ref: '#/components/schemas/FabricServiceToken'
        speed:
          type: integer
          description: "For interconnections on Dedicated Ports and shared connections,\
            \ this represents the interconnection's speed in bps. For Fabric VCs,\
            \ this field refers to the maximum speed of the interconnection in bps.\
            \ This value will default to 10Gbps for Fabric VCs (Fabric Billed)."
          example: 10000000000
        status:
          type: string
        tags:
          type: array
          items:
            type: string
        token:
          type: string
          description: This token is used for shared interconnections to be used as
            the Fabric Token. This field is entirely deprecated.
          format: uuid
        type:
          type: string
          description: "The 'shared' type of interconnection refers to shared connections,\
            \ or later also known as Fabric Virtual Connections (or Fabric VCs). The\
            \ 'dedicated' type of interconnection refers to interconnections created\
            \ with Dedicated Ports."
          enum:
          - shared
          - dedicated
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requested_by:
          $ref: '#/components/schemas/Href'
      example:
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        ports:
        - role: primary
          virtual_circuits:
          - ""
          - ""
          organization: null
          name: name
          link_status: link_status
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          href: href
          speed: 0
          status: requested
        - role: primary
          virtual_circuits:
          - ""
          - ""
          organization: null
          name: name
          link_status: link_status
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          href: href
          speed: 0
          status: requested
        type: shared
        speed: 10000000000
        contact_email: contact_email
        tags:
        - tags
        - tags
        token: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mode: standard
        service_tokens:
        - max_allowed_speed: 10000000000
          expires_at: 2000-01-23T04:56:07.000+00:00
          role: primary
          service_token_type: a_side
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: inactive
        - max_allowed_speed: 10000000000
          expires_at: 2000-01-23T04:56:07.000+00:00
          role: primary
          service_token_type: a_side
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: inactive
        requested_by: null
        updated_at: 2000-01-23T04:56:07.000+00:00
        metro: ""
        organization: null
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redundancy: primary
        facility:
          href: href
        status: status
    InterconnectionCreateInput:
      required:
      - metro
      - name
      - redundancy
      - type
      type: object
      properties:
        contact_email:
          type: string
          description: The preferred email used for communication and notifications
            about the Equinix Fabric interconnection. Required when using a Project
            API key. Optional and defaults to the primary user email address when
            using a User API key.
          format: email
        description:
          type: string
        metro:
          type: string
          description: "A Metro ID or code. For interconnections with Dedicated Ports,\
            \ this will be the location of the issued Dedicated Ports. When creating\
            \ Fabric VCs (Metal Billed), this is where interconnection will be originating\
            \ from, as we pre-authorize the use of one of our shared ports as the\
            \ origin of the interconnection using A-Side service tokens. We only allow\
            \ local connections for Fabric VCs (Metal Billed), so the destination\
            \ location must be the same as the origin. For Fabric VCs (Fabric Billed),\
            \ or shared connections, this will be the destination of the interconnection.\
            \ We allow remote connections for Fabric VCs (Fabric Billed), so the origin\
            \ of the interconnection can be a different metro set here."
        mode:
          type: string
          description: |-
            The mode of the interconnection (only relevant to Dedicated Ports). Fabric VCs won't have this field. Can be either 'standard' or 'tunnel'.
              The default mode of an interconnection on a Dedicated Port is 'standard'. The mode can only be changed when there are no associated virtual circuits on the interconnection.
              In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.
          example: standard
          enum:
          - standard
          - tunnel
        name:
          type: string
        project:
          type: string
        redundancy:
          type: string
          description: Either 'primary' or 'redundant'.
        service_token_type:
          type: string
          description: "Either 'a_side' or 'z_side'. Setting this field to 'a_side'\
            \ will create an interconnection with Fabric VCs (Metal Billed). Setting\
            \ this field to 'z_side' will create an interconnection with Fabric VCs\
            \ (Fabric Billed). This is required when the 'type' is 'shared', but this\
            \ is not applicable when the 'type' is 'dedicated'. This parameter is\
            \ included in the specification as a developer preview and is generally\
            \ unavailable. Please contact our Support team for more details."
          example: a_side
          enum:
          - a_side
          - z_side
        speed:
          type: integer
          description: "A interconnection speed, in bps, mbps, or gbps. For Dedicated\
            \ Ports, this can be 10Gbps or 100Gbps.\nFor Fabric VCs, this represents\
            \ the maximum speed of the interconnection. For Fabric VCs (Metal Billed),\
            \ this can only be one of the following: \n''50mbps'', ''200mbps'', ''500mbps'',\
            \ ''1gbps'', ''2gbps'', ''5gbps'' or ''10gbps'', and is required for creation.\
            \ For Fabric VCs (Fabric Billed), this field will always default to ''10gbps''\
            \ even if it is not provided.\nFor example, ''500000000'', ''50m'', or'\
            \ ''500mbps'' will all work as valid inputs."
          example: 10000000000
        tags:
          type: array
          items:
            type: string
        type:
          type: string
          description: "Either 'shared' or 'dedicated'. The 'shared' type represents\
            \ shared interconnections, or also known as Fabric VCs. The 'dedicated'\
            \ type represents dedicated interconnections, or also known as Dedicated\
            \ Ports."
        vlans:
          type: array
          description: "A list of one or two metro-based VLANs that will be set on\
            \ the virtual circuits of primary and/or secondary (if redundant) interconnections\
            \ respectively when creating Fabric VCs. VLANs can also be set after the\
            \ interconnection is created, but are required to fully activate the interconnection.\
            \ This parameter is included in the specification as a developer preview\
            \ and is generally unavailable. Please contact our Support team for more\
            \ details."
          example:
          - 1000
          - 1001
          items:
            type: integer
        vrfs:
          type: array
          description: "Can only be set when creating Fabric VCs in VRF(s). This field\
            \ holds a list of VRF UUIDs that will be set automatically on the virtual\
            \ circuits on creation, and can hold up to two UUIDs. Two UUIDs are required\
            \ when requesting redundant Fabric VCs. The first UUID will be set on\
            \ the primary virtual circuit, while the second UUID will be set on the\
            \ secondary. The two UUIDs can be the same if both the primary and secondary\
            \ virtual circuits will be in the same VRF. This parameter is included\
            \ in the specification as a developer preview and is generally unavailable.\
            \ Please contact our Support team for more details."
          items:
            type: string
            format: uuid
    InterconnectionList:
      type: object
      properties:
        interconnections:
          type: array
          items:
            $ref: '#/components/schemas/Interconnection'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
        interconnections:
        - description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          ports:
          - role: primary
            virtual_circuits:
            - ""
            - ""
            organization: null
            name: name
            link_status: link_status
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            href: href
            speed: 0
            status: requested
          - role: primary
            virtual_circuits:
            - ""
            - ""
            organization: null
            name: name
            link_status: link_status
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            href: href
            speed: 0
            status: requested
          type: shared
          speed: 10000000000
          contact_email: contact_email
          tags:
          - tags
          - tags
          token: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          mode: standard
          service_tokens:
          - max_allowed_speed: 10000000000
            expires_at: 2000-01-23T04:56:07.000+00:00
            role: primary
            service_token_type: a_side
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: inactive
          - max_allowed_speed: 10000000000
            expires_at: 2000-01-23T04:56:07.000+00:00
            role: primary
            service_token_type: a_side
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: inactive
          requested_by: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          metro: ""
          organization: null
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redundancy: primary
          facility:
            href: href
          status: status
        - description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          ports:
          - role: primary
            virtual_circuits:
            - ""
            - ""
            organization: null
            name: name
            link_status: link_status
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            href: href
            speed: 0
            status: requested
          - role: primary
            virtual_circuits:
            - ""
            - ""
            organization: null
            name: name
            link_status: link_status
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            switch_id: switch_id
            href: href
            speed: 0
            status: requested
          type: shared
          speed: 10000000000
          contact_email: contact_email
          tags:
          - tags
          - tags
          token: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          mode: standard
          service_tokens:
          - max_allowed_speed: 10000000000
            expires_at: 2000-01-23T04:56:07.000+00:00
            role: primary
            service_token_type: a_side
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: inactive
          - max_allowed_speed: 10000000000
            expires_at: 2000-01-23T04:56:07.000+00:00
            role: primary
            service_token_type: a_side
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: inactive
          requested_by: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          metro: ""
          organization: null
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redundancy: primary
          facility:
            href: href
          status: status
    InterconnectionPort:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization:
          $ref: '#/components/schemas/Href'
        role:
          type: string
          description: Either 'primary' or 'secondary'.
          enum:
          - primary
          - secondary
        status:
          type: string
          description: "For both Fabric VCs and Dedicated Ports, this will be 'requested'\
            \ on creation and 'deleting' on deletion. Once the Fabric VC has found\
            \ its corresponding Fabric connection, this will turn to 'active'. For\
            \ Dedicated Ports, once the dedicated port is associated, this will also\
            \ turn to 'active'. For Fabric VCs, this can turn into an 'expired' state\
            \ if the service token associated is expired."
          enum:
          - requested
          - active
          - deleting
          - expired
        switch_id:
          type: string
          description: A switch 'short ID'
        virtual_circuits:
          type: array
          items:
            $ref: '#/components/schemas/VirtualCircuit'
        name:
          type: string
        speed:
          type: integer
        link_status:
          type: string
        href:
          type: string
      example:
        role: primary
        virtual_circuits:
        - ""
        - ""
        organization: null
        name: name
        link_status: link_status
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        switch_id: switch_id
        href: href
        speed: 0
        status: requested
    InterconnectionPortList:
      type: object
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/InterconnectionPort'
      example:
        ports:
        - role: primary
          virtual_circuits:
          - ""
          - ""
          organization: null
          name: name
          link_status: link_status
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          href: href
          speed: 0
          status: requested
        - role: primary
          virtual_circuits:
          - ""
          - ""
          organization: null
          name: name
          link_status: link_status
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          switch_id: switch_id
          href: href
          speed: 0
          status: requested
    InterconnectionUpdateInput:
      type: object
      properties:
        contact_email:
          type: string
        description:
          type: string
        mode:
          type: string
          description: |-
            The mode of the interconnection (only relevant to Dedicated Ports). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.
              The default mode of an interconnection on a Dedicated Port is 'standard'. The mode can only be changed when there are no associated virtual circuits on the interconnection.
              In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.
          example: standard
          enum:
          - standard
          - tunnel
        name:
          type: string
        redundancy:
          type: string
          description: "Updating from 'redundant' to 'primary' will remove a secondary\
            \ port, while updating from 'primary' to 'redundant' will add one."
        tags:
          type: array
          items:
            type: string
    Invitation:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        href:
          type: string
        id:
          type: string
          format: uuid
        invitation:
          $ref: '#/components/schemas/Href'
        invited_by:
          $ref: '#/components/schemas/Href'
        invitee:
          type: string
          format: email
        nonce:
          type: string
        organization:
          $ref: '#/components/schemas/Href'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        roles:
          type: array
          items:
            type: string
            enum:
            - admin
            - billing
            - collaborator
            - limited_collaborator
        updated_at:
          type: string
          format: date-time
      example:
        projects:
        - null
        - null
        updated_at: 2000-01-23T04:56:07.000+00:00
        invitation:
          href: href
        organization: null
        roles:
        - admin
        - admin
        created_at: 2000-01-23T04:56:07.000+00:00
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invited_by: null
        nonce: nonce
        invitee: ""
    InvitationInput:
      required:
      - invitee
      type: object
      properties:
        invitee:
          type: string
          format: email
        message:
          type: string
        organization_id:
          type: string
          format: uuid
        projects_ids:
          type: array
          items:
            type: string
            format: uuid
        roles:
          type: array
          items:
            type: string
            enum:
            - admin
            - billing
            - collaborator
            - limited_collaborator
    InvitationList:
      type: object
      properties:
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
      example:
        invitations:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: null
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: null
    Invoice:
      type: object
      properties:
        amount:
          type: number
          format: float
        balance:
          type: number
          format: float
        created_on:
          type: string
          format: date
        credit_amount:
          type: number
          format: float
        credits_applied:
          type: number
          format: float
        currency:
          type: string
          example: USD
        due_on:
          type: string
          format: date
        id:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        number:
          type: string
        project:
          $ref: '#/components/schemas/ProjectIdName'
        reference_number:
          type: string
        status:
          type: string
        target_date:
          type: string
          format: date
      example:
        amount: 0.8008282
        target_date: 2000-01-23
        credit_amount: 1.4658129
        project:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        reference_number: reference_number
        due_on: 2000-01-23
        number: number
        balance: 6.0274563
        created_on: 2000-01-23
        credits_applied: 5.962134
        currency: USD
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        items:
        - amount: 5.637377
          unit: unit
          description: description
          currency: currency
          details: details
          unit_price: 2.302136
          plan:
            legacy: true
            line: line
            available_in_metros:
            - price: null
              href: href
            - price: null
              href: href
            description: description
            available_in:
            - price:
                hour: 1.23
              href: href
            - price:
                hour: 1.23
              href: href
            type: standard
            specs:
              features:
                txt: true
                uefi: true
                raid: true
              memory:
                total: total
              cpus:
              - count: 6
                type: type
              - count: 6
                type: type
              drives:
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              nics:
              - count: 2
                type: 1Gbps
              - count: 2
                type: 1Gbps
            deployment_types:
            - on_demand
            - on_demand
            name: name
            categories:
            - categories
            - categories
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            class: m3.large.x86
            pricing: {}
            slug: m3.large.x86
        - amount: 5.637377
          unit: unit
          description: description
          currency: currency
          details: details
          unit_price: 2.302136
          plan:
            legacy: true
            line: line
            available_in_metros:
            - price: null
              href: href
            - price: null
              href: href
            description: description
            available_in:
            - price:
                hour: 1.23
              href: href
            - price:
                hour: 1.23
              href: href
            type: standard
            specs:
              features:
                txt: true
                uefi: true
                raid: true
              memory:
                total: total
              cpus:
              - count: 6
                type: type
              - count: 6
                type: type
              drives:
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              - size: 3.84TB
                count: 1
                type: HDD
                category: boot
              nics:
              - count: 2
                type: 1Gbps
              - count: 2
                type: 1Gbps
            deployment_types:
            - on_demand
            - on_demand
            name: name
            categories:
            - categories
            - categories
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            class: m3.large.x86
            pricing: {}
            slug: m3.large.x86
        status: status
    InvoiceList:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
      example:
        invoices:
        - amount: 0.8008282
          target_date: 2000-01-23
          credit_amount: 1.4658129
          project:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          reference_number: reference_number
          due_on: 2000-01-23
          number: number
          balance: 6.0274563
          created_on: 2000-01-23
          credits_applied: 5.962134
          currency: USD
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          items:
          - amount: 5.637377
            unit: unit
            description: description
            currency: currency
            details: details
            unit_price: 2.302136
            plan:
              legacy: true
              line: line
              available_in_metros:
              - price: null
                href: href
              - price: null
                href: href
              description: description
              available_in:
              - price:
                  hour: 1.23
                href: href
              - price:
                  hour: 1.23
                href: href
              type: standard
              specs:
                features:
                  txt: true
                  uefi: true
                  raid: true
                memory:
                  total: total
                cpus:
                - count: 6
                  type: type
                - count: 6
                  type: type
                drives:
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                nics:
                - count: 2
                  type: 1Gbps
                - count: 2
                  type: 1Gbps
              deployment_types:
              - on_demand
              - on_demand
              name: name
              categories:
              - categories
              - categories
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              class: m3.large.x86
              pricing: {}
              slug: m3.large.x86
          - amount: 5.637377
            unit: unit
            description: description
            currency: currency
            details: details
            unit_price: 2.302136
            plan:
              legacy: true
              line: line
              available_in_metros:
              - price: null
                href: href
              - price: null
                href: href
              description: description
              available_in:
              - price:
                  hour: 1.23
                href: href
              - price:
                  hour: 1.23
                href: href
              type: standard
              specs:
                features:
                  txt: true
                  uefi: true
                  raid: true
                memory:
                  total: total
                cpus:
                - count: 6
                  type: type
                - count: 6
                  type: type
                drives:
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                nics:
                - count: 2
                  type: 1Gbps
                - count: 2
                  type: 1Gbps
              deployment_types:
              - on_demand
              - on_demand
              name: name
              categories:
              - categories
              - categories
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              class: m3.large.x86
              pricing: {}
              slug: m3.large.x86
          status: status
        - amount: 0.8008282
          target_date: 2000-01-23
          credit_amount: 1.4658129
          project:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          reference_number: reference_number
          due_on: 2000-01-23
          number: number
          balance: 6.0274563
          created_on: 2000-01-23
          credits_applied: 5.962134
          currency: USD
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          items:
          - amount: 5.637377
            unit: unit
            description: description
            currency: currency
            details: details
            unit_price: 2.302136
            plan:
              legacy: true
              line: line
              available_in_metros:
              - price: null
                href: href
              - price: null
                href: href
              description: description
              available_in:
              - price:
                  hour: 1.23
                href: href
              - price:
                  hour: 1.23
                href: href
              type: standard
              specs:
                features:
                  txt: true
                  uefi: true
                  raid: true
                memory:
                  total: total
                cpus:
                - count: 6
                  type: type
                - count: 6
                  type: type
                drives:
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                nics:
                - count: 2
                  type: 1Gbps
                - count: 2
                  type: 1Gbps
              deployment_types:
              - on_demand
              - on_demand
              name: name
              categories:
              - categories
              - categories
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              class: m3.large.x86
              pricing: {}
              slug: m3.large.x86
          - amount: 5.637377
            unit: unit
            description: description
            currency: currency
            details: details
            unit_price: 2.302136
            plan:
              legacy: true
              line: line
              available_in_metros:
              - price: null
                href: href
              - price: null
                href: href
              description: description
              available_in:
              - price:
                  hour: 1.23
                href: href
              - price:
                  hour: 1.23
                href: href
              type: standard
              specs:
                features:
                  txt: true
                  uefi: true
                  raid: true
                memory:
                  total: total
                cpus:
                - count: 6
                  type: type
                - count: 6
                  type: type
                drives:
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                - size: 3.84TB
                  count: 1
                  type: HDD
                  category: boot
                nics:
                - count: 2
                  type: 1Gbps
                - count: 2
                  type: 1Gbps
              deployment_types:
              - on_demand
              - on_demand
              name: name
              categories:
              - categories
              - categories
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              class: m3.large.x86
              pricing: {}
              slug: m3.large.x86
          status: status
    License:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
        license_key:
          type: string
        licensee_product:
          $ref: '#/components/schemas/Href'
        project:
          $ref: '#/components/schemas/Href'
        size:
          type: number
      example:
        licensee_product:
          href: href
        size: 0.8008281904610115
        description: description
        project: null
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        license_key: license_key
    LicenseCreateInput:
      type: object
      properties:
        description:
          type: string
        licensee_product_id:
          type: string
        size:
          type: number
    LicenseList:
      type: object
      properties:
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/License'
      example:
        licenses:
        - licensee_product:
            href: href
          size: 0.8008281904610115
          description: description
          project: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          license_key: license_key
        - licensee_product:
            href: href
          size: 0.8008281904610115
          description: description
          project: null
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          license_key: license_key
    LicenseUpdateInput:
      type: object
      properties:
        description:
          type: string
        size:
          type: number
    LineItem:
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
        description:
          type: string
        details:
          type: string
        plan:
          $ref: '#/components/schemas/Plan'
        unit:
          type: string
        unit_price:
          type: number
          format: float
      example:
        amount: 5.637377
        unit: unit
        description: description
        currency: currency
        details: details
        unit_price: 2.302136
        plan:
          legacy: true
          line: line
          available_in_metros:
          - price: null
            href: href
          - price: null
            href: href
          description: description
          available_in:
          - price:
              hour: 1.23
            href: href
          - price:
              hour: 1.23
            href: href
          type: standard
          specs:
            features:
              txt: true
              uefi: true
              raid: true
            memory:
              total: total
            cpus:
            - count: 6
              type: type
            - count: 6
              type: type
            drives:
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            nics:
            - count: 2
              type: 1Gbps
            - count: 2
              type: 1Gbps
          deployment_types:
          - on_demand
          - on_demand
          name: name
          categories:
          - categories
          - categories
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          class: m3.large.x86
          pricing: {}
          slug: m3.large.x86
    Membership:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        href:
          type: string
        id:
          type: string
          format: uuid
        project:
          $ref: '#/components/schemas/Href'
        roles:
          type: array
          items:
            type: string
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/Href'
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        roles:
        - roles
        - roles
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: null
    MembershipInput:
      type: object
      properties:
        role:
          type: array
          items:
            type: string
    MembershipList:
      type: object
      properties:
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
      example:
        memberships:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: null
        - updated_at: 2000-01-23T04:56:07.000+00:00
          roles:
          - roles
          - roles
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: null
    Meta:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/Href'
        last:
          $ref: '#/components/schemas/Href'
        next:
          $ref: '#/components/schemas/Href'
        previous:
          $ref: '#/components/schemas/Href'
        self:
          $ref: '#/components/schemas/Href'
        total:
          type: integer
        current_page:
          type: integer
        last_page:
          type: integer
      example:
        next: null
        total: 0
        last: null
        previous: null
        last_page: 1
        self: null
        first: null
        current_page: 6
    Metadata:
      type: object
      properties:
        class:
          type: string
        customdata:
          type: object
          additionalProperties: true
          default: {}
        facility:
          type: string
          description: The facility code of the instance
        hostname:
          type: string
        id:
          type: string
          format: uuid
        iqn:
          type: string
        metro:
          type: string
          description: The metro code of the instance
        network:
          $ref: '#/components/schemas/Metadata_network'
        operating_system:
          type: object
        plan:
          type: string
          description: The plan slug of the instance
        private_subnets:
          type: array
          description: An array of the private subnets
          items:
            type: string
        reserved:
          type: boolean
        specs:
          type: object
          description: The specs of the plan version of the instance
        ssh_keys:
          type: array
          items:
            type: string
        switch_short_id:
          type: string
        state:
          type: string
          description: "The current state the instance is in.\n\n* When an instance\
            \ is initially created it will be in the `queued` state until it is picked\
            \ up by the provisioner.\n* Once provisioning has begun on the instance\
            \ it's state will move to `provisioning`.\n* When an instance is deleted,\
            \ it will move to `deprovisioning` state until the deprovision is completed\
            \ and the instance state moves to `deleted`.\n* If an instance fails to\
            \ provision or deprovision it will move to `failed` state.\n* Once an\
            \ instance has completed provisioning it will move to `active` state.\n\
            * If an instance is currently powering off or powering on it will move\
            \ to `powering_off` or `powering_on` states respectively. \n* When the\
            \ instance is powered off completely it will move to the `inactive` state.\n\
            * When an instance is powered on completely it will move to the `active`\
            \ state.\n* Using the reinstall action to install a new OS on the instance\
            \ will cause the instance state to change to `reinstalling`.\n* When the\
            \ reinstall action is complete the instance will move to `active` state."
          enum:
          - queued
          - provisioning
          - deprovisioning
          - reinstalling
          - active
          - inactive
          - failed
          - powering_on
          - powering_off
          - deleted
        tags:
          type: array
          items:
            type: string
        volumes:
          type: array
          items:
            type: string
      example:
        switch_short_id: switch_short_id
        iqn: iqn
        volumes:
        - volumes
        - volumes
        network:
          addresses:
          - addresses
          - addresses
          interfaces:
          - {}
          - {}
          network:
            bonding:
              link_aggregation: link_aggregation
              mode: 0
              mac: mac
        tags:
        - tags
        - tags
        specs: {}
        hostname: hostname
        ssh_keys:
        - ssh_keys
        - ssh_keys
        reserved: true
        metro: metro
        private_subnets:
        - private_subnets
        - private_subnets
        operating_system: {}
        customdata: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: queued
        class: class
        facility: facility
        plan: plan
    MetalGateway:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/Href'
        href:
          type: string
        id:
          type: string
          format: uuid
        ip_reservation:
          $ref: '#/components/schemas/IPReservation'
        project:
          $ref: '#/components/schemas/Project'
        state:
          type: string
          description: "The current state of the Metal Gateway. 'Ready' indicates\
            \ the gateway record has been configured, but is currently not active\
            \ on the network. 'Active' indicates the gateway has been configured on\
            \ the network. 'Deleting' is a temporary state used to indicate that the\
            \ gateway is in the process of being un-configured from the network, after\
            \ which the gateway record will be deleted."
          enum:
          - ready
          - active
          - deleting
        updated_at:
          type: string
          format: date-time
        virtual_network:
          $ref: '#/components/schemas/VirtualNetwork'
    MetalGatewayCreateInput:
      required:
      - virtual_network_id
      type: object
      properties:
        ip_reservation_id:
          type: string
          description: The UUID of an IP reservation that belongs to the same project
            as where the metal gateway will be created in. This field is required
            unless the private IPv4 subnet size is specified.
          format: uuid
        private_ipv4_subnet_size:
          type: integer
          description: |-
            The subnet size (8, 16, 32, 64, or 128) of the private IPv4 reservation that will be created for the metal gateway. This field is required unless a project IP reservation was specified.
                      Please keep in mind that the number of private metal gateway ranges are limited per project. If you would like to increase the limit per project, please contact support for assistance.
        virtual_network_id:
          type: string
          description: The UUID of a metro virtual network that belongs to the same
            project as where the metal gateway will be created in.
          format: uuid
    MetalGatewayElasticIpCreateInput:
      required:
      - address
      - next_hop
      type: object
      properties:
        address:
          type: string
          description: An IP address (or IP Address range) contained within one of
            the project's IP Reservations
          example: 147.75.234.8/31
        next_hop:
          type: string
          description: An IP address contained within the Metal Gateways' IP Reservation
            range.
          format: ipv4
          example: 192.168.12.13
        customdata:
          type: object
          additionalProperties: true
          description: Optional User-defined JSON object value.
        tags:
          type: array
          description: Optional list of User-defined tags. Can be used by users to
            provide additional details or context regarding the purpose or usage of
            this resource.
          example:
          - NY
          - prod
          - public
          items:
            type: string
    MetalGatewayList:
      type: object
      properties:
        metal_gateways:
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/MetalGateway'
            - $ref: '#/components/schemas/VrfMetalGateway'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        metal_gateways:
        - ""
        - ""
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
    MetalGatewayLite:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        gateway_address:
          type: string
          description: "The gateway address with subnet CIDR value for this Metal\
            \ Gateway. For example, a Metal Gateway using an IP reservation with block\
            \ 10.1.2.0/27 would have a gateway address of 10.1.2.1/27."
          example: 10.1.2.1/27
        href:
          type: string
        id:
          type: string
          format: uuid
        state:
          type: string
          description: "The current state of the Metal Gateway. 'Ready' indicates\
            \ the gateway record has been configured, but is currently not active\
            \ on the network. 'Active' indicates the gateway has been configured on\
            \ the network. 'Deleting' is a temporary state used to indicate that the\
            \ gateway is in the process of being un-configured from the network, after\
            \ which the gateway record will be deleted."
          enum:
          - ready
          - active
          - deleting
        updated_at:
          type: string
          format: date-time
        vlan:
          type: integer
          description: The VLAN id of the Virtual Network record associated to this
            Metal Gateway.
          example: 1001
      example:
        gateway_address: 10.1.2.1/27
        updated_at: 2000-01-23T04:56:07.000+00:00
        vlan: 1001
        created_at: 2000-01-23T04:56:07.000+00:00
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: ready
    Metro:
      type: object
      properties:
        code:
          type: string
        country:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
      example:
        country: country
        code: code
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    MetroInput:
      required:
      - metro
      type: object
      properties:
        metro:
          type: string
          description: |-
            Metro code or ID of where the instance should be provisioned in.
            Either metro or facility must be provided.
          example: sv
    MetroList:
      type: object
      properties:
        metros:
          type: array
          items:
            $ref: '#/components/schemas/Metro'
      example:
        metros:
        - country: country
          code: code
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - country: country
          code: code
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    NewPassword:
      type: object
      properties:
        new_password:
          type: string
      example:
        new_password: new_password
    OperatingSystem:
      type: object
      properties:
        distro:
          type: string
        distro_label:
          type: string
        id:
          type: string
          format: uuid
        licensed:
          type: boolean
          description: Licenced OS is priced according to pricing property
        name:
          type: string
        preinstallable:
          type: boolean
          description: Servers can be already preinstalled with OS in order to shorten
            provision time.
        pricing:
          type: object
          description: This object contains price per time unit and optional multiplier
            value if licence price depends on hardware plan or components (e.g. number
            of cores)
        provisionable_on:
          type: array
          items:
            type: string
        slug:
          type: string
        version:
          type: string
        default_operating_system:
          type: boolean
          description: Default operating system for the distro.
          readOnly: true
      example:
        default_operating_system: true
        distro: distro
        preinstallable: true
        licensed: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provisionable_on:
        - provisionable_on
        - provisionable_on
        version: version
        pricing: {}
        slug: slug
        distro_label: distro_label
    OperatingSystemList:
      type: object
      properties:
        operating_systems:
          type: array
          items:
            $ref: '#/components/schemas/OperatingSystem'
      example:
        operating_systems:
        - default_operating_system: true
          distro: distro
          preinstallable: true
          licensed: true
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          provisionable_on:
          - provisionable_on
          - provisionable_on
          version: version
          pricing: {}
          slug: slug
          distro_label: distro_label
        - default_operating_system: true
          distro: distro
          preinstallable: true
          licensed: true
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          provisionable_on:
          - provisionable_on
          - provisionable_on
          version: version
          pricing: {}
          slug: slug
          distro_label: distro_label
    Organization:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        created_at:
          type: string
          format: date-time
        credit_amount:
          type: number
          format: float
        customdata:
          type: object
        description:
          type: string
        enforce_2fa_at:
          type: string
          description: "Force to all members to have enabled the two factor authentication\
            \ after that date, unless the value is null"
          format: date-time
        id:
          type: string
          format: uuid
        logo:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        name:
          type: string
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        terms:
          type: integer
        twitter:
          type: string
        updated_at:
          type: string
          format: date-time
        website:
          type: string
      example:
        website: website
        address:
          country: country
          address: address
          address2: address2
          city: city
          coordinates:
            latitude: latitude
            longitude: longitude
          state: state
          zip_code: zip_code
        projects:
        - null
        - null
        credit_amount: 1.4658129
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        billing_address: null
        memberships:
        - null
        - null
        enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
        twitter: twitter
        updated_at: 2000-01-23T04:56:07.000+00:00
        terms: 5
        members:
        - null
        - null
        name: name
        logo: logo
        customdata: {}
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    OrganizationInput:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'
        customdata:
          type: object
        description:
          type: string
        enforce_2fa_at:
          type: string
          description: "Force to all members to have enabled the two factor authentication\
            \ after that date, unless the value is null"
          format: date-time
        logo:
          type: string
          description: The logo for the organization; must be base64-encoded image
            data
          format: byte
        name:
          type: string
        twitter:
          type: string
        website:
          type: string
    OrganizationList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
      example:
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
        organizations:
        - website: website
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          projects:
          - null
          - null
          credit_amount: 1.4658129
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          billing_address: null
          memberships:
          - null
          - null
          enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
          twitter: twitter
          updated_at: 2000-01-23T04:56:07.000+00:00
          terms: 5
          members:
          - null
          - null
          name: name
          logo: logo
          customdata: {}
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - website: website
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          projects:
          - null
          - null
          credit_amount: 1.4658129
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          billing_address: null
          memberships:
          - null
          - null
          enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
          twitter: twitter
          updated_at: 2000-01-23T04:56:07.000+00:00
          terms: 5
          members:
          - null
          - null
          name: name
          logo: logo
          customdata: {}
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    ParentBlock:
      type: object
      properties:
        cidr:
          type: integer
        href:
          type: string
        netmask:
          type: string
        network:
          type: string
      example:
        netmask: netmask
        cidr: 2
        href: href
        network: network
    PaymentMethod:
      type: object
      properties:
        billing_address:
          $ref: '#/components/schemas/PaymentMethodBillingAddress'
        card_type:
          type: string
        cardholder_name:
          type: string
        created_at:
          type: string
          format: date-time
        created_by_user:
          $ref: '#/components/schemas/Href'
        default:
          type: boolean
        email:
          type: string
        expiration_month:
          type: string
        expiration_year:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        organization:
          $ref: '#/components/schemas/Href'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        type:
          type: string
        updated_at:
          type: string
          format: date-time
      example:
        projects:
        - null
        - null
        created_at: 2000-01-23T04:56:07.000+00:00
        billing_address:
          street_address: street_address
          country_code_alpha2: country_code_alpha2
          postal_code: postal_code
        card_type: card_type
        cardholder_name: cardholder_name
        type: type
        created_by_user:
          href: href
        expiration_year: expiration_year
        default: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        organization: null
        expiration_month: expiration_month
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
    PaymentMethodBillingAddress:
      type: object
      properties:
        country_code_alpha2:
          type: string
        postal_code:
          type: string
        street_address:
          type: string
      example:
        street_address: street_address
        country_code_alpha2: country_code_alpha2
        postal_code: postal_code
    PaymentMethodCreateInput:
      required:
      - name
      - nonce
      type: object
      properties:
        default:
          type: boolean
        name:
          type: string
        nonce:
          type: string
    PaymentMethodList:
      type: object
      properties:
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
      example:
        payment_methods:
        - projects:
          - null
          - null
          created_at: 2000-01-23T04:56:07.000+00:00
          billing_address:
            street_address: street_address
            country_code_alpha2: country_code_alpha2
            postal_code: postal_code
          card_type: card_type
          cardholder_name: cardholder_name
          type: type
          created_by_user:
            href: href
          expiration_year: expiration_year
          default: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          organization: null
          expiration_month: expiration_month
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - projects:
          - null
          - null
          created_at: 2000-01-23T04:56:07.000+00:00
          billing_address:
            street_address: street_address
            country_code_alpha2: country_code_alpha2
            postal_code: postal_code
          card_type: card_type
          cardholder_name: cardholder_name
          type: type
          created_by_user:
            href: href
          expiration_year: expiration_year
          default: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          organization: null
          expiration_month: expiration_month
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
    PaymentMethodUpdateInput:
      type: object
      properties:
        billing_address:
          type: object
        cardholder_name:
          type: string
        default:
          type: boolean
        expiration_month:
          type: string
        expiration_year:
          type: integer
        name:
          type: string
    Plan:
      type: object
      properties:
        available_in:
          type: array
          description: "Shows which facilities the plan is available in, and the facility-based\
            \ price if it is different from the default price."
          items:
            $ref: '#/components/schemas/Plan_available_in'
        available_in_metros:
          type: array
          description: "Shows which metros the plan is available in, and the metro-based\
            \ price if it is different from the default price."
          items:
            $ref: '#/components/schemas/Plan_available_in_metros'
        categories:
          type: array
          description: "Categories of the plan, like compute or storage. A Plan can\
            \ belong to multiple categories."
          items:
            type: string
        class:
          type: string
          example: m3.large.x86
        description:
          type: string
        deployment_types:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - on_demand
            - spot_market
        id:
          type: string
          format: uuid
        legacy:
          type: boolean
          description: Deprecated. Always return false
          x-deprecated: true
        line:
          type: string
        name:
          type: string
        pricing:
          type: object
        slug:
          type: string
          example: m3.large.x86
        specs:
          $ref: '#/components/schemas/Plan_specs'
        type:
          type: string
          description: The plan type
          enum:
          - standard
          - workload_optimized
          - custom
      example:
        legacy: true
        line: line
        available_in_metros:
        - price: null
          href: href
        - price: null
          href: href
        description: description
        available_in:
        - price:
            hour: 1.23
          href: href
        - price:
            hour: 1.23
          href: href
        type: standard
        specs:
          features:
            txt: true
            uefi: true
            raid: true
          memory:
            total: total
          cpus:
          - count: 6
            type: type
          - count: 6
            type: type
          drives:
          - size: 3.84TB
            count: 1
            type: HDD
            category: boot
          - size: 3.84TB
            count: 1
            type: HDD
            category: boot
          nics:
          - count: 2
            type: 1Gbps
          - count: 2
            type: 1Gbps
        deployment_types:
        - on_demand
        - on_demand
        name: name
        categories:
        - categories
        - categories
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        class: m3.large.x86
        pricing: {}
        slug: m3.large.x86
    PlanList:
      type: object
      properties:
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
      example:
        plans:
        - legacy: true
          line: line
          available_in_metros:
          - price: null
            href: href
          - price: null
            href: href
          description: description
          available_in:
          - price:
              hour: 1.23
            href: href
          - price:
              hour: 1.23
            href: href
          type: standard
          specs:
            features:
              txt: true
              uefi: true
              raid: true
            memory:
              total: total
            cpus:
            - count: 6
              type: type
            - count: 6
              type: type
            drives:
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            nics:
            - count: 2
              type: 1Gbps
            - count: 2
              type: 1Gbps
          deployment_types:
          - on_demand
          - on_demand
          name: name
          categories:
          - categories
          - categories
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          class: m3.large.x86
          pricing: {}
          slug: m3.large.x86
        - legacy: true
          line: line
          available_in_metros:
          - price: null
            href: href
          - price: null
            href: href
          description: description
          available_in:
          - price:
              hour: 1.23
            href: href
          - price:
              hour: 1.23
            href: href
          type: standard
          specs:
            features:
              txt: true
              uefi: true
              raid: true
            memory:
              total: total
            cpus:
            - count: 6
              type: type
            - count: 6
              type: type
            drives:
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            - size: 3.84TB
              count: 1
              type: HDD
              category: boot
            nics:
            - count: 2
              type: 1Gbps
            - count: 2
              type: 1Gbps
          deployment_types:
          - on_demand
          - on_demand
          name: name
          categories:
          - categories
          - categories
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          class: m3.large.x86
          pricing: {}
          slug: m3.large.x86
    Port:
      type: object
      properties:
        bond:
          $ref: '#/components/schemas/BondPortData'
        data:
          $ref: '#/components/schemas/PortData'
        disbond_operation_supported:
          type: boolean
          description: Indicates whether or not the bond can be broken on the port
            (when applicable).
        href:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
          example: bond0
        type:
          type: string
          description: Type is either "NetworkBondPort" for bond ports or "NetworkPort"
            for bondable ethernet ports
          enum:
          - NetworkPort
          - NetworkBondPort
        network_type:
          type: string
          description: Composite network type of the bond
          enum:
          - layer2-bonded
          - layer2-individual
          - layer3
          - hybrid
          - hybrid-bonded
        native_virtual_network:
          $ref: '#/components/schemas/VirtualNetwork'
        virtual_networks:
          type: array
          items:
            $ref: '#/components/schemas/Href'
      description: Port is a hardware port associated with a reserved or instantiated
        hardware device.
      example:
        native_virtual_network:
          vxlan: 4
          instances:
          - null
          - null
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          assigned_to_virtual_circuit: true
          tags:
          - tags
          - tags
          metal_gateways:
          - null
          - null
          metro_code: metro_code
          metro: null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          facility: null
          assigned_to: null
        disbond_operation_supported: true
        data:
          bonded: true
          mac: mac
        name: bond0
        virtual_networks:
        - null
        - null
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: NetworkPort
        network_type: layer2-bonded
        bond:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    PortAssignInput:
      type: object
      properties:
        vnid:
          type: string
          description: |
            Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself.
          example: "1001"
    PortConvertLayer3Input:
      type: object
      properties:
        request_ips:
          type: array
          items:
            $ref: '#/components/schemas/PortConvertLayer3Input_request_ips'
    PortVlanAssignment:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
        native:
          type: boolean
        port:
          $ref: '#/components/schemas/Href'
        state:
          type: string
          enum:
          - assigned
          - unassigning
        updated_at:
          type: string
          format: date-time
        virtual_network:
          $ref: '#/components/schemas/Href'
        vlan:
          type: integer
      example:
        virtual_network: null
        updated_at: 2000-01-23T04:56:07.000+00:00
        vlan: 0
        native: true
        port:
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: assigned
    PortVlanAssignmentBatch:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        error_messages:
          type: array
          items:
            type: string
        id:
          type: string
          format: uuid
        port:
          $ref: '#/components/schemas/Port'
        quantity:
          type: integer
        state:
          type: string
          enum:
          - queued
          - in_progress
          - completed
          - failed
        updated_at:
          type: string
          format: date-time
        vlan_assignments:
          type: array
          items:
            $ref: '#/components/schemas/PortVlanAssignmentBatch_vlan_assignments'
        project:
          $ref: '#/components/schemas/Href'
      example:
        quantity: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        port:
          native_virtual_network:
            vxlan: 4
            instances:
            - null
            - null
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            assigned_to_virtual_circuit: true
            tags:
            - tags
            - tags
            metal_gateways:
            - null
            - null
            metro_code: metro_code
            metro: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            facility: null
            assigned_to: null
          disbond_operation_supported: true
          data:
            bonded: true
            mac: mac
          name: bond0
          virtual_networks:
          - null
          - null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: NetworkPort
          network_type: layer2-bonded
          bond:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: queued
        error_messages:
        - error_messages
        - error_messages
        vlan_assignments:
        - vlan: 6
          native: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
        - vlan: 6
          native: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
    PortVlanAssignmentBatchCreateInput:
      type: object
      properties:
        vlan_assignments:
          type: array
          items:
            $ref: '#/components/schemas/PortVlanAssignmentBatchCreateInput_vlan_assignments'
    PortVlanAssignmentBatchList:
      type: object
      properties:
        batches:
          type: array
          items:
            $ref: '#/components/schemas/PortVlanAssignmentBatch'
      example:
        batches:
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          port:
            native_virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            disbond_operation_supported: true
            data:
              bonded: true
              mac: mac
            name: bond0
            virtual_networks:
            - null
            - null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: NetworkPort
            network_type: layer2-bonded
            bond:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: queued
          error_messages:
          - error_messages
          - error_messages
          vlan_assignments:
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
        - quantity: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          port:
            native_virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            disbond_operation_supported: true
            data:
              bonded: true
              mac: mac
            name: bond0
            virtual_networks:
            - null
            - null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: NetworkPort
            network_type: layer2-bonded
            bond:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: queued
          error_messages:
          - error_messages
          - error_messages
          vlan_assignments:
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
          - vlan: 6
            native: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: assigned
    PortVlanAssignmentList:
      type: object
      properties:
        vlan_assignments:
          type: array
          items:
            $ref: '#/components/schemas/PortVlanAssignment'
      example:
        vlan_assignments:
        - virtual_network: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          vlan: 0
          native: true
          port:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
        - virtual_network: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          vlan: 0
          native: true
          port:
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: assigned
    Project:
      type: object
      properties:
        bgp_config:
          $ref: '#/components/schemas/Href'
        created_at:
          type: string
          format: date-time
        customdata:
          type: object
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        href:
          type: string
        id:
          type: string
          format: uuid
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        max_devices:
          type: object
        members:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        name:
          maxLength: 80
          minLength: 1
          type: string
          description: The name of the project. Cannot contain characters encoded
            in greater than 3 bytes such as emojis.
        network_status:
          type: object
        organization:
          $ref: '#/components/schemas/Organization'
        payment_method:
          $ref: '#/components/schemas/Href'
        ssh_keys:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        updated_at:
          type: string
          format: date-time
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        tags:
          type: array
          items:
            type: string
      example:
        devices:
        - null
        - null
        volumes:
        - null
        - null
        created_at: 2000-01-23T04:56:07.000+00:00
        memberships:
        - null
        - null
        bgp_config: null
        tags:
        - tags
        - tags
        max_devices: {}
        ssh_keys:
        - null
        - null
        updated_at: 2000-01-23T04:56:07.000+00:00
        invitations:
        - null
        - null
        members:
        - null
        - null
        organization:
          website: website
          address:
            country: country
            address: address
            address2: address2
            city: city
            coordinates:
              latitude: latitude
              longitude: longitude
            state: state
            zip_code: zip_code
          projects:
          - null
          - null
          credit_amount: 1.4658129
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          billing_address: null
          memberships:
          - null
          - null
          enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
          twitter: twitter
          updated_at: 2000-01-23T04:56:07.000+00:00
          terms: 5
          members:
          - null
          - null
          name: name
          logo: logo
          customdata: {}
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        network_status: {}
        customdata: {}
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        payment_method: null
    ProjectCreateFromRootInput:
      required:
      - name
      type: object
      properties:
        customdata:
          type: object
        name:
          maxLength: 80
          minLength: 1
          type: string
          description: The name of the project. Cannot contain characters encoded
            in greater than 3 bytes such as emojis.
        organization_id:
          type: string
          format: uuid
        payment_method_id:
          type: string
          format: uuid
    ProjectCreateInput:
      required:
      - name
      type: object
      properties:
        customdata:
          type: object
        name:
          maxLength: 80
          minLength: 1
          type: string
          description: The name of the project. Cannot contain characters encoded
            in greater than 3 bytes such as emojis.
        payment_method_id:
          type: string
          format: uuid
    ProjectIdName:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    ProjectList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      example:
        projects:
        - devices:
          - null
          - null
          volumes:
          - null
          - null
          created_at: 2000-01-23T04:56:07.000+00:00
          memberships:
          - null
          - null
          bgp_config: null
          tags:
          - tags
          - tags
          max_devices: {}
          ssh_keys:
          - null
          - null
          updated_at: 2000-01-23T04:56:07.000+00:00
          invitations:
          - null
          - null
          members:
          - null
          - null
          organization:
            website: website
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            projects:
            - null
            - null
            credit_amount: 1.4658129
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            billing_address: null
            memberships:
            - null
            - null
            enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
            twitter: twitter
            updated_at: 2000-01-23T04:56:07.000+00:00
            terms: 5
            members:
            - null
            - null
            name: name
            logo: logo
            customdata: {}
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          network_status: {}
          customdata: {}
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          payment_method: null
        - devices:
          - null
          - null
          volumes:
          - null
          - null
          created_at: 2000-01-23T04:56:07.000+00:00
          memberships:
          - null
          - null
          bgp_config: null
          tags:
          - tags
          - tags
          max_devices: {}
          ssh_keys:
          - null
          - null
          updated_at: 2000-01-23T04:56:07.000+00:00
          invitations:
          - null
          - null
          members:
          - null
          - null
          organization:
            website: website
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            projects:
            - null
            - null
            credit_amount: 1.4658129
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            billing_address: null
            memberships:
            - null
            - null
            enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
            twitter: twitter
            updated_at: 2000-01-23T04:56:07.000+00:00
            terms: 5
            members:
            - null
            - null
            name: name
            logo: logo
            customdata: {}
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          network_status: {}
          customdata: {}
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          payment_method: null
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
    ProjectUpdateInput:
      type: object
      properties:
        backend_transfer_enabled:
          type: boolean
        customdata:
          type: object
        name:
          maxLength: 80
          minLength: 1
          type: string
          description: The name of the project. Cannot contain characters encoded
            in greater than 3 bytes such as emojis.
        payment_method_id:
          type: string
          format: uuid
    ProjectUsage:
      type: object
      properties:
        facility:
          type: string
        name:
          type: string
        plan:
          type: string
        plan_version:
          type: string
        price:
          type: string
        quantity:
          type: string
        total:
          type: string
        type:
          type: string
        unit:
          type: string
      example:
        total: total
        unit: unit
        quantity: quantity
        plan_version: plan_version
        price: price
        name: name
        type: type
        facility: facility
        plan: plan
    ProjectUsageList:
      type: object
      properties:
        usages:
          type: array
          items:
            $ref: '#/components/schemas/ProjectUsage'
      example:
        usages:
        - total: total
          unit: unit
          quantity: quantity
          plan_version: plan_version
          price: price
          name: name
          type: type
          facility: facility
          plan: plan
        - total: total
          unit: unit
          quantity: quantity
          plan_version: plan_version
          price: price
          name: name
          type: type
          facility: facility
          plan: plan
    RecoveryCodeList:
      type: object
      properties:
        recovery_codes:
          type: array
          items:
            type: string
      example:
        recovery_codes:
        - recovery_codes
        - recovery_codes
    SSHKey:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        entity:
          $ref: '#/components/schemas/Href'
        fingerprint:
          type: string
        href:
          type: string
        id:
          type: string
          format: uuid
        key:
          type: string
        label:
          type: string
        updated_at:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        fingerprint: fingerprint
        created_at: 2000-01-23T04:56:07.000+00:00
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        label: label
        entity:
          href: href
        key: key
        tags:
        - tags
        - tags
    SSHKeyCreateInput:
      type: object
      properties:
        instances_ids:
          type: array
          description: |-
            List of instance UUIDs to associate SSH key with, when empty array is sent all instances belonging
                  to entity will be included
          items:
            type: string
            format: uuid
        key:
          type: string
        label:
          type: string
        tags:
          type: array
          items:
            type: string
    SSHKeyInput:
      type: object
      properties:
        key:
          type: string
        label:
          type: string
        tags:
          type: array
          items:
            type: string
    SSHKeyList:
      type: object
      properties:
        ssh_keys:
          type: array
          items:
            $ref: '#/components/schemas/SSHKey'
      example:
        ssh_keys:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          entity:
            href: href
          key: key
          tags:
          - tags
          - tags
        - updated_at: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          entity:
            href: href
          key: key
          tags:
          - tags
          - tags
    SelfServiceReservationItemRequest:
      type: object
      properties:
        amount:
          type: number
          format: float
        metro_id:
          type: string
          format: uuid
        plan_id:
          type: string
          format: uuid
        quantity:
          type: integer
        term:
          type: string
    SelfServiceReservationItemResponse:
      type: object
      properties:
        amount:
          type: number
          format: float
        id:
          type: string
        metro_code:
          type: string
        metro_id:
          type: string
          format: uuid
        metro_name:
          type: string
        plan_id:
          type: string
          format: uuid
        plan_name:
          type: string
        plan_slug:
          type: string
        plan_categories:
          type: array
          items:
            type: string
        quantity:
          type: integer
        term:
          type: string
      example:
        plan_slug: plan_slug
        amount: 0.8008282
        metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        quantity: 6
        metro_code: metro_code
        metro_name: metro_name
        term: term
        id: id
        plan_categories:
        - plan_categories
        - plan_categories
        plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plan_name: plan_name
    SelfServiceReservationList:
      type: object
      properties:
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/SelfServiceReservationResponse'
      example:
        reservations:
        - item:
          - plan_slug: plan_slug
            amount: 0.8008282
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 6
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_categories:
            - plan_categories
            - plan_categories
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          - plan_slug: plan_slug
            amount: 0.8008282
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 6
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_categories:
            - plan_categories
            - plan_categories
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          period:
            unit: monthly
            count: 1
          notes: notes
          total_cost: 5
          project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization: organization
          organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          project: project
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        - item:
          - plan_slug: plan_slug
            amount: 0.8008282
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 6
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_categories:
            - plan_categories
            - plan_categories
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          - plan_slug: plan_slug
            amount: 0.8008282
            metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            quantity: 6
            metro_code: metro_code
            metro_name: metro_name
            term: term
            id: id
            plan_categories:
            - plan_categories
            - plan_categories
            plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            plan_name: plan_name
          period:
            unit: monthly
            count: 1
          notes: notes
          total_cost: 5
          project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization: organization
          organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          project: project
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
    SelfServiceReservationResponse:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        item:
          type: array
          items:
            $ref: '#/components/schemas/SelfServiceReservationItemResponse'
        notes:
          type: string
        organization:
          type: string
        organization_id:
          type: string
          format: uuid
        period:
          $ref: '#/components/schemas/CreateSelfServiceReservationRequest_period'
        project:
          type: string
        project_id:
          type: string
          format: uuid
        start_date:
          type: string
          format: date-time
        status:
          type: string
        total_cost:
          type: integer
      example:
        item:
        - plan_slug: plan_slug
          amount: 0.8008282
          metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          quantity: 6
          metro_code: metro_code
          metro_name: metro_name
          term: term
          id: id
          plan_categories:
          - plan_categories
          - plan_categories
          plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan_name: plan_name
        - plan_slug: plan_slug
          amount: 0.8008282
          metro_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          quantity: 6
          metro_code: metro_code
          metro_name: metro_name
          term: term
          id: id
          plan_categories:
          - plan_categories
          - plan_categories
          plan_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan_name: plan_name
        period:
          unit: monthly
          count: 1
        notes: notes
        total_cost: 5
        project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organization: organization
        organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        project: project
        start_date: 2000-01-23T04:56:07.000+00:00
        status: status
    ServerInfo:
      type: object
      properties:
        facility:
          type: string
          deprecated: true
        metro:
          type: string
          description: The metro ID or code to check the capacity in.
        plan:
          type: string
          description: The plan ID or slug to check the capacity of.
        quantity:
          type: string
          description: The number of servers to check the capacity of.
    SpotMarketPricesList:
      type: object
      properties:
        spot_market_prices:
          $ref: '#/components/schemas/SpotPricesReport'
      example:
        spot_market_prices:
          ord1: null
          syd1: null
          ams1:
            c2.medium.x86: null
            baremetal_2a2: null
            m2.xlarge.x86: null
            baremetal_1: null
            baremetal_0:
              price: 0.8008282
            baremetal_2a: null
            baremetal_3: null
            baremetal_s: null
            baremetal_2: null
          fra1: null
          sin1: null
          yyz1: null
          sjc1: null
          nrt1: null
          dfw1: null
          iad1: null
          atl1:
            baremetal_1e: null
          sea1: null
          lax1: null
          ewr1: null
    SpotMarketPricesPerMetroList:
      type: object
      properties:
        spot_market_prices:
          $ref: '#/components/schemas/SpotMarketPricesPerMetroReport'
      example:
        spot_market_prices:
          sv: null
          sg: null
          ch: null
          la: null
          ny: null
          am:
            c2.medium.x86: null
            baremetal_2a2: null
            m2.xlarge.x86: null
            baremetal_1: null
            baremetal_0:
              price: 0.8008282
            baremetal_2a: null
            baremetal_3: null
            baremetal_s: null
            baremetal_2: null
          da: null
    SpotMarketPricesPerMetroReport:
      type: object
      properties:
        am:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        ch:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        da:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        la:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        ny:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        sg:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        sv:
          $ref: '#/components/schemas/SpotPricesPerFacility'
      example:
        sv: null
        sg: null
        ch: null
        la: null
        ny: null
        am:
          c2.medium.x86: null
          baremetal_2a2: null
          m2.xlarge.x86: null
          baremetal_1: null
          baremetal_0:
            price: 0.8008282
          baremetal_2a: null
          baremetal_3: null
          baremetal_s: null
          baremetal_2: null
        da: null
    SpotMarketRequest:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        devices_max:
          type: integer
        devices_min:
          type: integer
        end_at:
          type: string
          format: date-time
        facilities:
          $ref: '#/components/schemas/Href'
        href:
          type: string
        id:
          type: string
          format: uuid
        instances:
          $ref: '#/components/schemas/Href'
        max_bid_price:
          type: number
          format: float
        metro:
          allOf:
          - $ref: '#/components/schemas/Metro'
          - type: object
            description: The metro the spot market request was created in
        project:
          $ref: '#/components/schemas/Href'
      example:
        end_at: 2000-01-23T04:56:07.000+00:00
        instances: null
        metro: ""
        created_at: 2000-01-23T04:56:07.000+00:00
        devices_min: 6
        project: null
        devices_max: 0
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        max_bid_price: 1.4658129
        facilities:
          href: href
    SpotMarketRequestCreateInput:
      type: object
      properties:
        devices_max:
          type: integer
        devices_min:
          type: integer
        end_at:
          type: string
          format: date-time
        facilities:
          type: array
          deprecated: true
          items:
            type: string
            format: uuid
        instance_parameters:
          $ref: '#/components/schemas/SpotMarketRequestCreateInput_instance_parameters'
        max_bid_price:
          type: number
          format: float
        metro:
          type: string
          description: The metro ID or code the spot market request will be created
            in.
    SpotMarketRequestList:
      type: object
      properties:
        spot_market_requests:
          type: array
          items:
            $ref: '#/components/schemas/SpotMarketRequest'
      example:
        spot_market_requests:
        - end_at: 2000-01-23T04:56:07.000+00:00
          instances: null
          metro: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          devices_min: 6
          project: null
          devices_max: 0
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_bid_price: 1.4658129
          facilities:
            href: href
        - end_at: 2000-01-23T04:56:07.000+00:00
          instances: null
          metro: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          devices_min: 6
          project: null
          devices_max: 0
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_bid_price: 1.4658129
          facilities:
            href: href
    SpotPricesDatapoints:
      type: object
      properties:
        datapoints:
          type: array
          items:
            $ref: '#/components/schemas/SpotPricesDatapointsList'
      example:
        datapoints:
        - - 0.8008281904610115
          - 0.8008281904610115
        - - 0.8008281904610115
          - 0.8008281904610115
    SpotPricesDatapointsList:
      type: array
      items:
        type: number
      x-schema-name: SpotPricesDatapointsList
    SpotPricesHistoryReport:
      type: object
      properties:
        prices_history:
          $ref: '#/components/schemas/SpotPricesDatapoints'
      example:
        prices_history:
          datapoints:
          - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
    SpotPricesPerBaremetal:
      type: object
      properties:
        price:
          type: number
          format: float
      example:
        price: 0.8008282
    SpotPricesPerFacility:
      type: object
      properties:
        baremetal_0:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_1:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_2:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_2a:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_2a2:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_3:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        baremetal_s:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        c2.medium.x86:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
        m2.xlarge.x86:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
      example:
        c2.medium.x86: null
        baremetal_2a2: null
        m2.xlarge.x86: null
        baremetal_1: null
        baremetal_0:
          price: 0.8008282
        baremetal_2a: null
        baremetal_3: null
        baremetal_s: null
        baremetal_2: null
    SpotPricesPerNewFacility:
      type: object
      properties:
        baremetal_1e:
          $ref: '#/components/schemas/SpotPricesPerBaremetal'
      example:
        baremetal_1e: null
    SpotPricesReport:
      type: object
      properties:
        ams1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        atl1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        dfw1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        ewr1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        fra1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        iad1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        lax1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        nrt1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        ord1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        sea1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        sin1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        sjc1:
          $ref: '#/components/schemas/SpotPricesPerFacility'
        syd1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
        yyz1:
          $ref: '#/components/schemas/SpotPricesPerNewFacility'
      example:
        ord1: null
        syd1: null
        ams1:
          c2.medium.x86: null
          baremetal_2a2: null
          m2.xlarge.x86: null
          baremetal_1: null
          baremetal_0:
            price: 0.8008282
          baremetal_2a: null
          baremetal_3: null
          baremetal_s: null
          baremetal_2: null
        fra1: null
        sin1: null
        yyz1: null
        sjc1: null
        nrt1: null
        dfw1: null
        iad1: null
        atl1:
          baremetal_1e: null
        sea1: null
        lax1: null
        ewr1: null
    SupportRequestInput:
      required:
      - message
      - subject
      type: object
      properties:
        device_id:
          type: string
        message:
          type: string
        priority:
          type: string
          enum:
          - urgent
          - high
          - medium
          - low
        project_id:
          type: string
        subject:
          type: string
    TransferRequest:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        href:
          type: string
        id:
          type: string
          format: uuid
        project:
          $ref: '#/components/schemas/Href'
        target_organization:
          $ref: '#/components/schemas/Href'
        updated_at:
          type: string
          format: date-time
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        target_organization: null
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          href: href
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    TransferRequestInput:
      type: object
      properties:
        target_organization_id:
          type: string
          format: uuid
    TransferRequestList:
      type: object
      properties:
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/TransferRequest'
      example:
        transfers:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          target_organization: null
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - updated_at: 2000-01-23T04:56:07.000+00:00
          target_organization: null
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            href: href
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    UpdateEmailInput:
      type: object
      properties:
        default:
          type: boolean
    User:
      type: object
      properties:
        avatar_thumb_url:
          type: string
        avatar_url:
          type: string
        created_at:
          type: string
          format: date-time
        customdata:
          type: object
        default_organization_id:
          type: string
          format: uuid
        default_project_id:
          type: string
          format: uuid
        email:
          type: string
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Href'
        first_name:
          type: string
        fraud_score:
          type: string
        full_name:
          type: string
        href:
          type: string
        id:
          type: string
          format: uuid
        last_login_at:
          type: string
          format: date-time
        last_name:
          type: string
        max_organizations:
          type: integer
        max_projects:
          type: integer
        phone_number:
          type: string
        short_id:
          type: string
        timezone:
          type: string
        two_factor_auth:
          type: string
        updated_at:
          type: string
          format: date-time
      example:
        avatar_thumb_url: avatar_thumb_url
        last_login_at: 2000-01-23T04:56:07.000+00:00
        max_projects: 2
        timezone: timezone
        default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        last_name: last_name
        short_id: short_id
        fraud_score: fraud_score
        emails:
        - null
        - null
        default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        full_name: full_name
        avatar_url: avatar_url
        updated_at: 2000-01-23T04:56:07.000+00:00
        phone_number: phone_number
        customdata: {}
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        first_name: first_name
        max_organizations: 3
        two_factor_auth: two_factor_auth
        email: email
    UserCreateInput:
      required:
      - emails
      - first_name
      - last_name
      type: object
      properties:
        avatar:
          type: string
          format: binary
        company_name:
          type: string
        company_url:
          type: string
        customdata:
          type: object
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailInput'
        first_name:
          type: string
        last_name:
          type: string
        level:
          type: string
        password:
          type: string
        phone_number:
          type: string
        social_accounts:
          type: object
        timezone:
          type: string
        title:
          type: string
        two_factor_auth:
          type: string
        verified_at:
          type: string
          format: date-time
        invitation_id:
          type: string
          format: uuid
        nonce:
          type: string
    Userdata:
      type: object
      properties:
        userdata:
          type: string
      example:
        userdata: userdata
    UserLimited:
      required:
      - id
      type: object
      properties:
        avatar_thumb_url:
          type: string
          description: Avatar thumbnail URL of the User
        avatar_url:
          type: string
          description: Avatar URL of the User
        full_name:
          type: string
          description: Full name of the User
        href:
          type: string
          description: API URL uniquely representing the User
        id:
          type: string
          description: ID of the User
          format: uuid
      example:
        avatar_thumb_url: avatar_thumb_url
        full_name: full_name
        avatar_url: avatar_url
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    UserList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
      example:
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
        users:
        - avatar_thumb_url: avatar_thumb_url
          last_login_at: 2000-01-23T04:56:07.000+00:00
          max_projects: 2
          timezone: timezone
          default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          short_id: short_id
          fraud_score: fraud_score
          emails:
          - null
          - null
          default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          full_name: full_name
          avatar_url: avatar_url
          updated_at: 2000-01-23T04:56:07.000+00:00
          phone_number: phone_number
          customdata: {}
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          first_name: first_name
          max_organizations: 3
          two_factor_auth: two_factor_auth
          email: email
        - avatar_thumb_url: avatar_thumb_url
          last_login_at: 2000-01-23T04:56:07.000+00:00
          max_projects: 2
          timezone: timezone
          default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          short_id: short_id
          fraud_score: fraud_score
          emails:
          - null
          - null
          default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          full_name: full_name
          avatar_url: avatar_url
          updated_at: 2000-01-23T04:56:07.000+00:00
          phone_number: phone_number
          customdata: {}
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          first_name: first_name
          max_organizations: 3
          two_factor_auth: two_factor_auth
          email: email
    UserLite:
      required:
      - id
      - short_id
      type: object
      properties:
        avatar_thumb_url:
          type: string
          description: Avatar thumbnail URL of the User
        created_at:
          type: string
          description: When the user was created
          format: date-time
        email:
          type: string
          description: Primary email address of the User
        first_name:
          type: string
          description: First name of the User
        full_name:
          type: string
          description: Full name of the User
        href:
          type: string
          description: API URL uniquely representing the User
        id:
          type: string
          description: ID of the User
          format: uuid
        last_name:
          type: string
          description: Last name of the User
        short_id:
          type: string
          description: Short ID of the User
        updated_at:
          type: string
          description: When the user details were last updated
          format: date-time
    UserUpdateInput:
      type: object
      properties:
        customdata:
          type: object
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        phone_number:
          type: string
        timezone:
          type: string
    VerifyEmail:
      required:
      - user_token
      type: object
      properties:
        user_token:
          type: string
          description: User verification token
          writeOnly: true
    VirtualCircuit:
      oneOf:
      - $ref: '#/components/schemas/VlanVirtualCircuit'
      - $ref: '#/components/schemas/VrfVirtualCircuit'
    VirtualCircuitCreateInput:
      oneOf:
      - $ref: '#/components/schemas/VlanVirtualCircuitCreateInput'
      - $ref: '#/components/schemas/VrfVirtualCircuitCreateInput'
    VirtualCircuitList:
      type: object
      properties:
        virtual_circuits:
          type: array
          items:
            $ref: '#/components/schemas/VirtualCircuit'
      example:
        virtual_circuits:
        - ""
        - ""
    VirtualCircuitUpdateInput:
      oneOf:
      - $ref: '#/components/schemas/VlanVirtualCircuitUpdateInput'
      - $ref: '#/components/schemas/VrfVirtualCircuitUpdateInput'
    VirtualNetwork:
      type: object
      properties:
        assigned_to:
          $ref: '#/components/schemas/Href'
        assigned_to_virtual_circuit:
          type: boolean
          description: True if the virtual network is attached to a virtual circuit.
            False if not.
        description:
          type: string
        facility:
          $ref: '#/components/schemas/Href'
        href:
          type: string
        created_at:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
        instances:
          type: array
          description: A list of instances with ports currently associated to this
            Virtual Network.
          items:
            $ref: '#/components/schemas/Href'
        metal_gateways:
          type: array
          description: A list of metal gateways currently associated to this Virtual
            Network.
          items:
            $ref: '#/components/schemas/MetalGatewayLite'
        metro:
          $ref: '#/components/schemas/Href'
        metro_code:
          type: string
          description: The Metro code of the metro in which this Virtual Network is
            defined.
        vxlan:
          type: integer
        tags:
          type: array
          items:
            type: string
      example:
        vxlan: 4
        instances:
        - null
        - null
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        assigned_to_virtual_circuit: true
        tags:
        - tags
        - tags
        metal_gateways:
        - null
        - null
        metro_code: metro_code
        metro: null
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        facility: null
        assigned_to: null
    VirtualNetworkCreateInput:
      type: object
      properties:
        description:
          type: string
        facility:
          type: string
          description: The UUID (or facility code) for the Facility in which to create
            this Virtual network.
          deprecated: true
        metro:
          type: string
          description: The UUID (or metro code) for the Metro in which to create this
            Virtual Network.
        vxlan:
          type: integer
          description: "VLAN ID between 2-3999. Must be unique for the project within\
            \ the Metro in which this Virtual Network is being created. If no value\
            \ is specified, the next-available VLAN ID in the range 1000-1999 will\
            \ be automatically selected."
          example: 1099
        tags:
          type: array
          items:
            type: string
    VirtualNetworkList:
      type: object
      properties:
        virtual_networks:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetwork'
      example:
        virtual_networks:
        - vxlan: 4
          instances:
          - null
          - null
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          assigned_to_virtual_circuit: true
          tags:
          - tags
          - tags
          metal_gateways:
          - null
          - null
          metro_code: metro_code
          metro: null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          facility: null
          assigned_to: null
        - vxlan: 4
          instances:
          - null
          - null
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          assigned_to_virtual_circuit: true
          tags:
          - tags
          - tags
          metal_gateways:
          - null
          - null
          metro_code: metro_code
          metro: null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          facility: null
          assigned_to: null
    VlanVirtualCircuit:
      required:
      - bill
      - description
      - id
      - name
      - nni_vlan
      - port
      - project
      - status
      - tags
      - virtual_network
      - vnid
      type: object
      properties:
        bill:
          type: boolean
          description: "True if the Virtual Circuit is being billed. Currently, only\
            \ Virtual Circuits of Fabric VCs (Metal Billed) will be billed. Usage\
            \ will start the first time the Virtual Circuit becomes active, and will\
            \ not stop until it is deleted from Metal."
          default: false
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        nni_vlan:
          type: integer
        port:
          $ref: '#/components/schemas/Href'
        project:
          $ref: '#/components/schemas/Href'
        speed:
          type: integer
          description: "For Virtual Circuits on shared and dedicated connections,\
            \ this speed should match the one set on their Interconnection Ports.\
            \ For Virtual Circuits on Fabric VCs (both Metal and Fabric Billed) that\
            \ have found their corresponding Fabric connection, this is the actual\
            \ speed of the interconnection that was configured when setting up the\
            \ interconnection on the Fabric Portal. Details on Fabric VCs are included\
            \ in the specification as a developer preview and is generally unavailable.\
            \ Please contact our Support team for more details."
        status:
          type: string
          description: "The status of a Virtual Circuit is always 'Pending' on creation.\
            \ The status can turn to 'Waiting on Customer VLAN' if a Metro VLAN was\
            \ not set yet on the Virtual Circuit and is the last step needed for full\
            \ activation. For Dedicated interconnections, as long as the Dedicated\
            \ Port has been associated to the Virtual Circuit and a NNI VNID has been\
            \ set, it will turn to 'Waiting on Customer VLAN'. For Fabric VCs, it\
            \ will only change to 'Waiting on Customer VLAN' once the corresponding\
            \ Fabric connection has been found on the Fabric side. Once a Metro VLAN\
            \ is set on the Virtual Circuit (which for Fabric VCs, can be set on creation)\
            \ and the necessary set up is done, it will turn into 'Activating' status\
            \ as it tries to activate the Virtual Circuit. Once the Virtual Circuit\
            \ fully activates and is configured on the switch, it will turn to staus\
            \ 'Active'. For Fabric VCs (Metal Billed), we will start billing the moment\
            \ the status of the Virtual Circuit turns to 'Active'. If there are any\
            \ changes to the VLAN after the Virtual Circuit is in an 'Active' status,\
            \ the status will show 'Changing VLAN' if a new VLAN has been provided,\
            \ or 'Deactivating' if we are removing the VLAN. When a deletion request\
            \ is issued for the Virtual Circuit, it will move to a 'deleting' status\
            \ until it is fully deleted. If the Virtual Circuit is on a Fabric VC,\
            \ it can also change into an 'Expired' status if the associated service\
            \ token has expired."
          enum:
          - pending
          - waiting_on_customer_vlan
          - activating
          - changing_vlan
          - deactivating
          - deleting
          - active
          - expired
          - activation_failed
          - changing_vlan_failed
          - deactivation_failed
          - delete_failed
        tags:
          type: array
          items:
            type: string
        virtual_network:
          $ref: '#/components/schemas/Href'
        vnid:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    VlanVirtualCircuitCreateInput:
      required:
      - project_id
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        nni_vlan:
          maximum: 4094
          minimum: 2
          type: integer
        project_id:
          type: string
          format: uuid
        speed:
          type: integer
          description: speed can be passed as integer number representing bps speed
            or string (e.g. '52m' or '100g' or '4 gbps')
        tags:
          type: array
          items:
            type: string
        vnid:
          type: string
          description: A Virtual Network record UUID or the VNID of a Metro Virtual
            Network in your project (sent as integer).
          format: uuid
    VlanVirtualCircuitUpdateInput:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        speed:
          type: string
          description: Speed can be changed only if it is an interconnection on a
            Dedicated Port
        tags:
          type: array
          items:
            type: string
        vnid:
          type: string
          description: A Virtual Network record UUID or the VNID of a Metro Virtual
            Network in your project.
    Vrf:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          description: Optional field that can be set to describe the VRF
        bill:
          type: boolean
          description: "True if the VRF is being billed. Usage will start when the\
            \ first VRF Virtual Circuit is active, and will only stop when the VRF\
            \ has been deleted."
          default: false
        bgp_dynamic_neighbors_enabled:
          type: boolean
          description: Toggle to enable the dynamic bgp neighbors feature on the VRF
        bgp_dynamic_neighbors_export_route_map:
          type: boolean
          description: Toggle to export the VRF route-map to the dynamic bgp neighbors
        bgp_dynamic_neighbors_bfd_enabled:
          type: boolean
          description: Toggle BFD on dynamic bgp neighbors sessions
        local_asn:
          type: integer
          description: A 4-byte ASN associated with the VRF.
          format: int32
        virtual_circuits:
          type: array
          description: Virtual circuits that are in the VRF
          items:
            $ref: '#/components/schemas/VrfVirtualCircuit'
        ip_ranges:
          $ref: '#/components/schemas/VrfIpRangeList'
        project:
          $ref: '#/components/schemas/Project'
        metro:
          $ref: '#/components/schemas/Metro'
        created_by:
          $ref: '#/components/schemas/User'
        href:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        bgp_dynamic_neighbors_export_route_map: true
        bgp_dynamic_neighbors_bfd_enabled: true
        local_asn: 5
        description: description
        bill: false
        bgp_dynamic_neighbors_enabled: true
        project: null
        created_at: 2000-01-23T04:56:07.000+00:00
        created_by:
          avatar_thumb_url: avatar_thumb_url
          last_login_at: 2000-01-23T04:56:07.000+00:00
          max_projects: 2
          timezone: timezone
          default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          last_name: last_name
          short_id: short_id
          fraud_score: fraud_score
          emails:
          - null
          - null
          default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          full_name: full_name
          avatar_url: avatar_url
          updated_at: 2000-01-23T04:56:07.000+00:00
          phone_number: phone_number
          customdata: {}
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          first_name: first_name
          max_organizations: 3
          two_factor_auth: two_factor_auth
          email: email
        updated_at: 2000-01-23T04:56:07.000+00:00
        virtual_circuits:
        - subnet: 12.0.0.0/30
          customer_ip: 12.0.0.2
          description: description
          project: null
          created_at: 2000-01-23T04:56:07.000+00:00
          vrf: null
          metal_ip: 12.0.0.1
          speed: 9
          tags:
          - tags
          - tags
          nni_vlan: 2
          updated_at: 2000-01-23T04:56:07.000+00:00
          port: null
          name: name
          peer_asn: 7
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          md5: md5
          status: status
        - subnet: 12.0.0.0/30
          customer_ip: 12.0.0.2
          description: description
          project: null
          created_at: 2000-01-23T04:56:07.000+00:00
          vrf: null
          metal_ip: 12.0.0.1
          speed: 9
          tags:
          - tags
          - tags
          nni_vlan: 2
          updated_at: 2000-01-23T04:56:07.000+00:00
          port: null
          name: name
          peer_asn: 7
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          md5: md5
          status: status
        ip_ranges:
        - ip_ranges
        - ip_ranges
        metro:
          country: country
          code: code
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        href: href
    VrfCreateInput:
      required:
      - metro
      - name
      type: object
      properties:
        bgp_dynamic_neighbors_enabled:
          type: boolean
          description: Toggle to enable the dynamic bgp neighbors feature on the VRF
        bgp_dynamic_neighbors_export_route_map:
          type: boolean
          description: Toggle to export the VRF route-map to the dynamic bgp neighbors
        bgp_dynamic_neighbors_bfd_enabled:
          type: boolean
          description: Toggle BFD on dynamic bgp neighbors sessions
        description:
          type: string
        ip_ranges:
          $ref: '#/components/schemas/VrfIpRangeCreateInput'
        local_asn:
          type: integer
          format: int32
        metro:
          type: string
          description: The UUID (or metro code) for the Metro in which to create this
            VRF.
        name:
          type: string
    VrfIpRangeCreateInput:
      type: array
      description: "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"\
        ]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between\
        \ /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF\
        \ IP Reservations, which can then be used for Metal Gateways or Virtual Circuits."
      items:
        type: string
      x-schema-name: VrfIpRangeCreateInput
    VrfIpRangeList:
      type: array
      description: "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"\
        ]."
      items:
        type: string
      x-schema-name: VrfIpRangeList
    VrfIpRangeUpdateInput:
      type: array
      description: "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"\
        ]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between\
        \ /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF\
        \ IP Reservations, which can then be used for Metal Gateways or Virtual Circuits.\
        \ Adding a new CIDR address to the list will result in the creation of a new\
        \ IP Range for this VRF. Removal of an existing CIDR address from the list\
        \ will result in the deletion of an existing IP Range for this VRF. Deleting\
        \ an IP Range will result in the deletion of any VRF IP Reservations contained\
        \ within the IP Range, as well as the VRF IP Reservation\\'s associated Metal\
        \ Gateways or Virtual Circuits. If you do not wish to add or remove IP Ranges,\
        \ either include the full existing list of IP Ranges in the update request,\
        \ or do not specify the `ip_ranges` field in the update request. Specifying\
        \ a value of `[]` will remove all existing IP Ranges from the VRF."
      items:
        type: string
      x-schema-name: VrfIpRangeUpdateInput
    VrfIpReservation:
      required:
      - type
      - vrf
      type: object
      properties:
        address_family:
          type: integer
        cidr:
          type: integer
        created_at:
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/Href'
        details:
          type: string
        href:
          type: string
        id:
          type: string
          format: uuid
        metal_gateway:
          $ref: '#/components/schemas/MetalGatewayLite'
        netmask:
          type: string
        network:
          type: string
        project:
          $ref: '#/components/schemas/Project'
        state:
          type: string
        tags:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
          - vrf
        vrf:
          $ref: '#/components/schemas/Vrf'
        public:
          type: boolean
        management:
          type: boolean
        manageable:
          type: boolean
        customdata:
          type: object
        bill:
          type: boolean
        project_lite:
          $ref: '#/components/schemas/Project'
        address:
          type: string
        gateway:
          type: string
        metro:
          $ref: '#/components/schemas/Metro'
      example:
        address: address
        created_at: 2000-01-23T04:56:07.000+00:00
        project:
          devices:
          - null
          - null
          volumes:
          - null
          - null
          created_at: 2000-01-23T04:56:07.000+00:00
          memberships:
          - null
          - null
          bgp_config: null
          tags:
          - tags
          - tags
          max_devices: {}
          ssh_keys:
          - null
          - null
          updated_at: 2000-01-23T04:56:07.000+00:00
          invitations:
          - null
          - null
          members:
          - null
          - null
          organization:
            website: website
            address:
              country: country
              address: address
              address2: address2
              city: city
              coordinates:
                latitude: latitude
                longitude: longitude
              state: state
              zip_code: zip_code
            projects:
            - null
            - null
            credit_amount: 1.4658129
            created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            billing_address: null
            memberships:
            - null
            - null
            enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
            twitter: twitter
            updated_at: 2000-01-23T04:56:07.000+00:00
            terms: 5
            members:
            - null
            - null
            name: name
            logo: logo
            customdata: {}
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          network_status: {}
          customdata: {}
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          payment_method: null
        bill: true
        project_lite: null
        vrf:
          bgp_dynamic_neighbors_export_route_map: true
          bgp_dynamic_neighbors_bfd_enabled: true
          local_asn: 5
          description: description
          bill: false
          bgp_dynamic_neighbors_enabled: true
          project: null
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by:
            avatar_thumb_url: avatar_thumb_url
            last_login_at: 2000-01-23T04:56:07.000+00:00
            max_projects: 2
            timezone: timezone
            default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_at: 2000-01-23T04:56:07.000+00:00
            last_name: last_name
            short_id: short_id
            fraud_score: fraud_score
            emails:
            - null
            - null
            default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            full_name: full_name
            avatar_url: avatar_url
            updated_at: 2000-01-23T04:56:07.000+00:00
            phone_number: phone_number
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            first_name: first_name
            max_organizations: 3
            two_factor_auth: two_factor_auth
            email: email
          updated_at: 2000-01-23T04:56:07.000+00:00
          virtual_circuits:
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          ip_ranges:
          - ip_ranges
          - ip_ranges
          metro:
            country: country
            code: code
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
        type: vrf
        created_by: null
        network: network
        tags:
        - tags
        - tags
        manageable: true
        metal_gateway:
          gateway_address: 10.1.2.1/27
          updated_at: 2000-01-23T04:56:07.000+00:00
          vlan: 1001
          created_at: 2000-01-23T04:56:07.000+00:00
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: ready
        address_family: 0
        public: true
        netmask: netmask
        management: true
        metro: null
        cidr: 6
        details: details
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: state
        customdata: {}
        gateway: gateway
    VrfIpReservationCreateInput:
      required:
      - cidr
      - network
      - type
      - vrf_id
      type: object
      properties:
        cidr:
          type: integer
          description: The size of the VRF IP Reservation's subnet
          example: 16
        customdata:
          type: object
        details:
          type: string
        network:
          type: string
          description: The starting address for this VRF IP Reservation's subnet
          example: 10.1.2.0
        tags:
          type: array
          items:
            type: string
        type:
          type: string
          description: Must be set to 'vrf'
          example: vrf
        vrf_id:
          type: string
          description: The ID of the VRF in which this VRF IP Reservation is created.
            The VRF must have an existing IP Range that contains the requested subnet.
            This field may be aliased as just 'vrf'.
          format: uuid
    VrfIpReservationList:
      type: object
      properties:
        ip_addresses:
          type: array
          items:
            $ref: '#/components/schemas/VrfIpReservation'
      example:
        ip_addresses:
        - address: address
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            devices:
            - null
            - null
            volumes:
            - null
            - null
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - null
            - null
            bgp_config: null
            tags:
            - tags
            - tags
            max_devices: {}
            ssh_keys:
            - null
            - null
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - null
            - null
            members:
            - null
            - null
            organization:
              website: website
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              projects:
              - null
              - null
              credit_amount: 1.4658129
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              billing_address: null
              memberships:
              - null
              - null
              enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
              twitter: twitter
              updated_at: 2000-01-23T04:56:07.000+00:00
              terms: 5
              members:
              - null
              - null
              name: name
              logo: logo
              customdata: {}
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            network_status: {}
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            payment_method: null
          bill: true
          project_lite: null
          vrf:
            bgp_dynamic_neighbors_export_route_map: true
            bgp_dynamic_neighbors_bfd_enabled: true
            local_asn: 5
            description: description
            bill: false
            bgp_dynamic_neighbors_enabled: true
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by:
              avatar_thumb_url: avatar_thumb_url
              last_login_at: 2000-01-23T04:56:07.000+00:00
              max_projects: 2
              timezone: timezone
              default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              created_at: 2000-01-23T04:56:07.000+00:00
              last_name: last_name
              short_id: short_id
              fraud_score: fraud_score
              emails:
              - null
              - null
              default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              full_name: full_name
              avatar_url: avatar_url
              updated_at: 2000-01-23T04:56:07.000+00:00
              phone_number: phone_number
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              first_name: first_name
              max_organizations: 3
              two_factor_auth: two_factor_auth
              email: email
            updated_at: 2000-01-23T04:56:07.000+00:00
            virtual_circuits:
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            ip_ranges:
            - ip_ranges
            - ip_ranges
            metro:
              country: country
              code: code
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
          type: vrf
          created_by: null
          network: network
          tags:
          - tags
          - tags
          manageable: true
          metal_gateway:
            gateway_address: 10.1.2.1/27
            updated_at: 2000-01-23T04:56:07.000+00:00
            vlan: 1001
            created_at: 2000-01-23T04:56:07.000+00:00
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: ready
          address_family: 0
          public: true
          netmask: netmask
          management: true
          metro: null
          cidr: 6
          details: details
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          customdata: {}
          gateway: gateway
        - address: address
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            devices:
            - null
            - null
            volumes:
            - null
            - null
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - null
            - null
            bgp_config: null
            tags:
            - tags
            - tags
            max_devices: {}
            ssh_keys:
            - null
            - null
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - null
            - null
            members:
            - null
            - null
            organization:
              website: website
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              projects:
              - null
              - null
              credit_amount: 1.4658129
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              billing_address: null
              memberships:
              - null
              - null
              enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
              twitter: twitter
              updated_at: 2000-01-23T04:56:07.000+00:00
              terms: 5
              members:
              - null
              - null
              name: name
              logo: logo
              customdata: {}
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            network_status: {}
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            payment_method: null
          bill: true
          project_lite: null
          vrf:
            bgp_dynamic_neighbors_export_route_map: true
            bgp_dynamic_neighbors_bfd_enabled: true
            local_asn: 5
            description: description
            bill: false
            bgp_dynamic_neighbors_enabled: true
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by:
              avatar_thumb_url: avatar_thumb_url
              last_login_at: 2000-01-23T04:56:07.000+00:00
              max_projects: 2
              timezone: timezone
              default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              created_at: 2000-01-23T04:56:07.000+00:00
              last_name: last_name
              short_id: short_id
              fraud_score: fraud_score
              emails:
              - null
              - null
              default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              full_name: full_name
              avatar_url: avatar_url
              updated_at: 2000-01-23T04:56:07.000+00:00
              phone_number: phone_number
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              first_name: first_name
              max_organizations: 3
              two_factor_auth: two_factor_auth
              email: email
            updated_at: 2000-01-23T04:56:07.000+00:00
            virtual_circuits:
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            ip_ranges:
            - ip_ranges
            - ip_ranges
            metro:
              country: country
              code: code
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
          type: vrf
          created_by: null
          network: network
          tags:
          - tags
          - tags
          manageable: true
          metal_gateway:
            gateway_address: 10.1.2.1/27
            updated_at: 2000-01-23T04:56:07.000+00:00
            vlan: 1001
            created_at: 2000-01-23T04:56:07.000+00:00
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: ready
          address_family: 0
          public: true
          netmask: netmask
          management: true
          metro: null
          cidr: 6
          details: details
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          customdata: {}
          gateway: gateway
    VrfList:
      type: object
      properties:
        vrfs:
          type: array
          items:
            $ref: '#/components/schemas/Vrf'
      example:
        vrfs:
        - bgp_dynamic_neighbors_export_route_map: true
          bgp_dynamic_neighbors_bfd_enabled: true
          local_asn: 5
          description: description
          bill: false
          bgp_dynamic_neighbors_enabled: true
          project: null
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by:
            avatar_thumb_url: avatar_thumb_url
            last_login_at: 2000-01-23T04:56:07.000+00:00
            max_projects: 2
            timezone: timezone
            default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_at: 2000-01-23T04:56:07.000+00:00
            last_name: last_name
            short_id: short_id
            fraud_score: fraud_score
            emails:
            - null
            - null
            default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            full_name: full_name
            avatar_url: avatar_url
            updated_at: 2000-01-23T04:56:07.000+00:00
            phone_number: phone_number
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            first_name: first_name
            max_organizations: 3
            two_factor_auth: two_factor_auth
            email: email
          updated_at: 2000-01-23T04:56:07.000+00:00
          virtual_circuits:
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          ip_ranges:
          - ip_ranges
          - ip_ranges
          metro:
            country: country
            code: code
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
        - bgp_dynamic_neighbors_export_route_map: true
          bgp_dynamic_neighbors_bfd_enabled: true
          local_asn: 5
          description: description
          bill: false
          bgp_dynamic_neighbors_enabled: true
          project: null
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by:
            avatar_thumb_url: avatar_thumb_url
            last_login_at: 2000-01-23T04:56:07.000+00:00
            max_projects: 2
            timezone: timezone
            default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_at: 2000-01-23T04:56:07.000+00:00
            last_name: last_name
            short_id: short_id
            fraud_score: fraud_score
            emails:
            - null
            - null
            default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            full_name: full_name
            avatar_url: avatar_url
            updated_at: 2000-01-23T04:56:07.000+00:00
            phone_number: phone_number
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            first_name: first_name
            max_organizations: 3
            two_factor_auth: two_factor_auth
            email: email
          updated_at: 2000-01-23T04:56:07.000+00:00
          virtual_circuits:
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          ip_ranges:
          - ip_ranges
          - ip_ranges
          metro:
            country: country
            code: code
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
    VrfMetalGateway:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/Href'
        href:
          type: string
        id:
          type: string
          format: uuid
        ip_reservation:
          $ref: '#/components/schemas/VrfIpReservation'
        project:
          $ref: '#/components/schemas/Project'
        state:
          type: string
          description: "The current state of the Metal Gateway. 'Ready' indicates\
            \ the gateway record has been configured, but is currently not active\
            \ on the network. 'Active' indicates the gateway has been configured on\
            \ the network. 'Deleting' is a temporary state used to indicate that the\
            \ gateway is in the process of being un-configured from the network, after\
            \ which the gateway record will be deleted."
          enum:
          - ready
          - active
          - deleting
        updated_at:
          type: string
          format: date-time
        virtual_network:
          $ref: '#/components/schemas/VirtualNetwork'
        vrf:
          $ref: '#/components/schemas/Vrf'
      example:
        virtual_network:
          vxlan: 4
          instances:
          - null
          - null
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          assigned_to_virtual_circuit: true
          tags:
          - tags
          - tags
          metal_gateways:
          - null
          - null
          metro_code: metro_code
          metro: null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          facility: null
          assigned_to: null
        updated_at: 2000-01-23T04:56:07.000+00:00
        ip_reservation:
          address: address
          created_at: 2000-01-23T04:56:07.000+00:00
          project:
            devices:
            - null
            - null
            volumes:
            - null
            - null
            created_at: 2000-01-23T04:56:07.000+00:00
            memberships:
            - null
            - null
            bgp_config: null
            tags:
            - tags
            - tags
            max_devices: {}
            ssh_keys:
            - null
            - null
            updated_at: 2000-01-23T04:56:07.000+00:00
            invitations:
            - null
            - null
            members:
            - null
            - null
            organization:
              website: website
              address:
                country: country
                address: address
                address2: address2
                city: city
                coordinates:
                  latitude: latitude
                  longitude: longitude
                state: state
                zip_code: zip_code
              projects:
              - null
              - null
              credit_amount: 1.4658129
              created_at: 2000-01-23T04:56:07.000+00:00
              description: description
              billing_address: null
              memberships:
              - null
              - null
              enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
              twitter: twitter
              updated_at: 2000-01-23T04:56:07.000+00:00
              terms: 5
              members:
              - null
              - null
              name: name
              logo: logo
              customdata: {}
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            network_status: {}
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            payment_method: null
          bill: true
          project_lite: null
          vrf:
            bgp_dynamic_neighbors_export_route_map: true
            bgp_dynamic_neighbors_bfd_enabled: true
            local_asn: 5
            description: description
            bill: false
            bgp_dynamic_neighbors_enabled: true
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by:
              avatar_thumb_url: avatar_thumb_url
              last_login_at: 2000-01-23T04:56:07.000+00:00
              max_projects: 2
              timezone: timezone
              default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              created_at: 2000-01-23T04:56:07.000+00:00
              last_name: last_name
              short_id: short_id
              fraud_score: fraud_score
              emails:
              - null
              - null
              default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              full_name: full_name
              avatar_url: avatar_url
              updated_at: 2000-01-23T04:56:07.000+00:00
              phone_number: phone_number
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              first_name: first_name
              max_organizations: 3
              two_factor_auth: two_factor_auth
              email: email
            updated_at: 2000-01-23T04:56:07.000+00:00
            virtual_circuits:
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            ip_ranges:
            - ip_ranges
            - ip_ranges
            metro:
              country: country
              code: code
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
          type: vrf
          created_by: null
          network: network
          tags:
          - tags
          - tags
          manageable: true
          metal_gateway:
            gateway_address: 10.1.2.1/27
            updated_at: 2000-01-23T04:56:07.000+00:00
            vlan: 1001
            created_at: 2000-01-23T04:56:07.000+00:00
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: ready
          address_family: 0
          public: true
          netmask: netmask
          management: true
          metro: null
          cidr: 6
          details: details
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: state
          customdata: {}
          gateway: gateway
        created_at: 2000-01-23T04:56:07.000+00:00
        project: null
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: ready
        vrf: null
        created_by:
          href: href
    VrfMetalGatewayCreateInput:
      required:
      - ip_reservation_id
      - virtual_network_id
      type: object
      properties:
        ip_reservation_id:
          type: string
          description: "The UUID an a VRF IP Reservation that belongs to the same\
            \ project as the one in which the Metal Gateway is to be created. Additionally,\
            \ the VRF IP Reservation and the Virtual Network must reside in the same\
            \ Metro."
          format: uuid
        virtual_network_id:
          type: string
          description: "THe UUID of a Metro Virtual Network that belongs to the same\
            \ project as the one in which the Metal Gateway is to be created. Additionally,\
            \ the Virtual Network and the VRF IP Reservation must reside in the same\
            \ metro."
          format: uuid
    VrfRoute:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the newly-created resource
          format: uuid
          readOnly: true
          example: e1ff9c2b-051a-4688-965f-153e274f77e0
        status:
          type: string
          description: "The status of the route. Potential values are \"pending\"\
            , \"active\", \"deleting\", and \"error\", representing various lifecycle\
            \ states of the route and whether or not it has been successfully configured\
            \ on the network"
          readOnly: true
          example: active
          enum:
          - pending
          - active
          - deleting
          - error
        prefix:
          type: string
          description: "The IPv4 prefix for the route, in CIDR-style notation"
          example: 0.0.0.0/0
        next_hop:
          type: string
          description: The next-hop IPv4 address for the route
          format: ipv4
          example: 192.168.1.254
        type:
          type: string
          description: "VRF route type, like 'bgp', 'connected', and 'static'. Currently,\
            \ only static routes are supported"
          readOnly: true
          example: static
          enum:
          - static
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        metal_gateway:
          $ref: '#/components/schemas/VrfMetalGateway'
        virtual_network:
          $ref: '#/components/schemas/VirtualNetwork'
        vrf:
          $ref: '#/components/schemas/Vrf'
        href:
          type: string
          readOnly: true
          example: /routes/e1ff9c2b-051a-4688-965f-153e274f77e0
      example:
        metal_gateway:
          virtual_network:
            vxlan: 4
            instances:
            - null
            - null
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            assigned_to_virtual_circuit: true
            tags:
            - tags
            - tags
            metal_gateways:
            - null
            - null
            metro_code: metro_code
            metro: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            facility: null
            assigned_to: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          ip_reservation:
            address: address
            created_at: 2000-01-23T04:56:07.000+00:00
            project:
              devices:
              - null
              - null
              volumes:
              - null
              - null
              created_at: 2000-01-23T04:56:07.000+00:00
              memberships:
              - null
              - null
              bgp_config: null
              tags:
              - tags
              - tags
              max_devices: {}
              ssh_keys:
              - null
              - null
              updated_at: 2000-01-23T04:56:07.000+00:00
              invitations:
              - null
              - null
              members:
              - null
              - null
              organization:
                website: website
                address:
                  country: country
                  address: address
                  address2: address2
                  city: city
                  coordinates:
                    latitude: latitude
                    longitude: longitude
                  state: state
                  zip_code: zip_code
                projects:
                - null
                - null
                credit_amount: 1.4658129
                created_at: 2000-01-23T04:56:07.000+00:00
                description: description
                billing_address: null
                memberships:
                - null
                - null
                enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                twitter: twitter
                updated_at: 2000-01-23T04:56:07.000+00:00
                terms: 5
                members:
                - null
                - null
                name: name
                logo: logo
                customdata: {}
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              network_status: {}
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              payment_method: null
            bill: true
            project_lite: null
            vrf:
              bgp_dynamic_neighbors_export_route_map: true
              bgp_dynamic_neighbors_bfd_enabled: true
              local_asn: 5
              description: description
              bill: false
              bgp_dynamic_neighbors_enabled: true
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              created_by:
                avatar_thumb_url: avatar_thumb_url
                last_login_at: 2000-01-23T04:56:07.000+00:00
                max_projects: 2
                timezone: timezone
                default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                created_at: 2000-01-23T04:56:07.000+00:00
                last_name: last_name
                short_id: short_id
                fraud_score: fraud_score
                emails:
                - null
                - null
                default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                full_name: full_name
                avatar_url: avatar_url
                updated_at: 2000-01-23T04:56:07.000+00:00
                phone_number: phone_number
                customdata: {}
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                first_name: first_name
                max_organizations: 3
                two_factor_auth: two_factor_auth
                email: email
              updated_at: 2000-01-23T04:56:07.000+00:00
              virtual_circuits:
              - subnet: 12.0.0.0/30
                customer_ip: 12.0.0.2
                description: description
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                vrf: null
                metal_ip: 12.0.0.1
                speed: 9
                tags:
                - tags
                - tags
                nni_vlan: 2
                updated_at: 2000-01-23T04:56:07.000+00:00
                port: null
                name: name
                peer_asn: 7
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                md5: md5
                status: status
              - subnet: 12.0.0.0/30
                customer_ip: 12.0.0.2
                description: description
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                vrf: null
                metal_ip: 12.0.0.1
                speed: 9
                tags:
                - tags
                - tags
                nni_vlan: 2
                updated_at: 2000-01-23T04:56:07.000+00:00
                port: null
                name: name
                peer_asn: 7
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                md5: md5
                status: status
              ip_ranges:
              - ip_ranges
              - ip_ranges
              metro:
                country: country
                code: code
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              href: href
            type: vrf
            created_by: null
            network: network
            tags:
            - tags
            - tags
            manageable: true
            metal_gateway:
              gateway_address: 10.1.2.1/27
              updated_at: 2000-01-23T04:56:07.000+00:00
              vlan: 1001
              created_at: 2000-01-23T04:56:07.000+00:00
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: ready
            address_family: 0
            public: true
            netmask: netmask
            management: true
            metro: null
            cidr: 6
            details: details
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: state
            customdata: {}
            gateway: gateway
          created_at: 2000-01-23T04:56:07.000+00:00
          project: null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: ready
          vrf: null
          created_by:
            href: href
        virtual_network:
          vxlan: 4
          instances:
          - null
          - null
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          assigned_to_virtual_circuit: true
          tags:
          - tags
          - tags
          metal_gateways:
          - null
          - null
          metro_code: metro_code
          metro: null
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          facility: null
          assigned_to: null
        updated_at: 2000-01-23T04:56:07.000+00:00
        prefix: 0.0.0.0/0
        next_hop: 192.168.1.254
        created_at: 2000-01-23T04:56:07.000+00:00
        id: e1ff9c2b-051a-4688-965f-153e274f77e0
        vrf:
          bgp_dynamic_neighbors_export_route_map: true
          bgp_dynamic_neighbors_bfd_enabled: true
          local_asn: 5
          description: description
          bill: false
          bgp_dynamic_neighbors_enabled: true
          project: null
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by:
            avatar_thumb_url: avatar_thumb_url
            last_login_at: 2000-01-23T04:56:07.000+00:00
            max_projects: 2
            timezone: timezone
            default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_at: 2000-01-23T04:56:07.000+00:00
            last_name: last_name
            short_id: short_id
            fraud_score: fraud_score
            emails:
            - null
            - null
            default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            full_name: full_name
            avatar_url: avatar_url
            updated_at: 2000-01-23T04:56:07.000+00:00
            phone_number: phone_number
            customdata: {}
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            first_name: first_name
            max_organizations: 3
            two_factor_auth: two_factor_auth
            email: email
          updated_at: 2000-01-23T04:56:07.000+00:00
          virtual_circuits:
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          - subnet: 12.0.0.0/30
            customer_ip: 12.0.0.2
            description: description
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            vrf: null
            metal_ip: 12.0.0.1
            speed: 9
            tags:
            - tags
            - tags
            nni_vlan: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            port: null
            name: name
            peer_asn: 7
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            md5: md5
            status: status
          ip_ranges:
          - ip_ranges
          - ip_ranges
          metro:
            country: country
            code: code
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          href: href
        href: /routes/e1ff9c2b-051a-4688-965f-153e274f77e0
        type: static
        status: active
    VrfRouteCreateInput:
      required:
      - next_hop
      - prefix
      type: object
      properties:
        prefix:
          type: string
          description: "The IPv4 prefix for the route, in CIDR-style notation. For\
            \ a static default route, this will always be \"0.0.0.0/0\""
          example: 0.0.0.0/0
        next_hop:
          type: string
          description: The IPv4 address within the VRF of the host that will handle
            this route
          format: ipv4
          example: 192.168.1.254
    VrfRouteUpdateInput:
      type: object
      properties:
        prefix:
          type: string
          description: "The IPv4 prefix for the route, in CIDR-style notation. For\
            \ a static default route, this will always be \"0.0.0.0/0\""
          example: 0.0.0.0/0
        next_hop:
          type: string
          description: The IPv4 address within the VRF of the host that will handle
            this route
          format: ipv4
          example: 192.168.1.254
    VrfRouteList:
      type: object
      properties:
        routes:
          type: array
          items:
            $ref: '#/components/schemas/VrfRoute'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        routes:
        - metal_gateway:
            virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            updated_at: 2000-01-23T04:56:07.000+00:00
            ip_reservation:
              address: address
              created_at: 2000-01-23T04:56:07.000+00:00
              project:
                devices:
                - null
                - null
                volumes:
                - null
                - null
                created_at: 2000-01-23T04:56:07.000+00:00
                memberships:
                - null
                - null
                bgp_config: null
                tags:
                - tags
                - tags
                max_devices: {}
                ssh_keys:
                - null
                - null
                updated_at: 2000-01-23T04:56:07.000+00:00
                invitations:
                - null
                - null
                members:
                - null
                - null
                organization:
                  website: website
                  address:
                    country: country
                    address: address
                    address2: address2
                    city: city
                    coordinates:
                      latitude: latitude
                      longitude: longitude
                    state: state
                    zip_code: zip_code
                  projects:
                  - null
                  - null
                  credit_amount: 1.4658129
                  created_at: 2000-01-23T04:56:07.000+00:00
                  description: description
                  billing_address: null
                  memberships:
                  - null
                  - null
                  enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                  twitter: twitter
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  terms: 5
                  members:
                  - null
                  - null
                  name: name
                  logo: logo
                  customdata: {}
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                network_status: {}
                customdata: {}
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                payment_method: null
              bill: true
              project_lite: null
              vrf:
                bgp_dynamic_neighbors_export_route_map: true
                bgp_dynamic_neighbors_bfd_enabled: true
                local_asn: 5
                description: description
                bill: false
                bgp_dynamic_neighbors_enabled: true
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                created_by:
                  avatar_thumb_url: avatar_thumb_url
                  last_login_at: 2000-01-23T04:56:07.000+00:00
                  max_projects: 2
                  timezone: timezone
                  default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  created_at: 2000-01-23T04:56:07.000+00:00
                  last_name: last_name
                  short_id: short_id
                  fraud_score: fraud_score
                  emails:
                  - null
                  - null
                  default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  full_name: full_name
                  avatar_url: avatar_url
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  phone_number: phone_number
                  customdata: {}
                  href: href
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  first_name: first_name
                  max_organizations: 3
                  two_factor_auth: two_factor_auth
                  email: email
                updated_at: 2000-01-23T04:56:07.000+00:00
                virtual_circuits:
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                ip_ranges:
                - ip_ranges
                - ip_ranges
                metro:
                  country: country
                  code: code
                  name: name
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                href: href
              type: vrf
              created_by: null
              network: network
              tags:
              - tags
              - tags
              manageable: true
              metal_gateway:
                gateway_address: 10.1.2.1/27
                updated_at: 2000-01-23T04:56:07.000+00:00
                vlan: 1001
                created_at: 2000-01-23T04:56:07.000+00:00
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                state: ready
              address_family: 0
              public: true
              netmask: netmask
              management: true
              metro: null
              cidr: 6
              details: details
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              customdata: {}
              gateway: gateway
            created_at: 2000-01-23T04:56:07.000+00:00
            project: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: ready
            vrf: null
            created_by:
              href: href
          virtual_network:
            vxlan: 4
            instances:
            - null
            - null
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            assigned_to_virtual_circuit: true
            tags:
            - tags
            - tags
            metal_gateways:
            - null
            - null
            metro_code: metro_code
            metro: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            facility: null
            assigned_to: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          prefix: 0.0.0.0/0
          next_hop: 192.168.1.254
          created_at: 2000-01-23T04:56:07.000+00:00
          id: e1ff9c2b-051a-4688-965f-153e274f77e0
          vrf:
            bgp_dynamic_neighbors_export_route_map: true
            bgp_dynamic_neighbors_bfd_enabled: true
            local_asn: 5
            description: description
            bill: false
            bgp_dynamic_neighbors_enabled: true
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by:
              avatar_thumb_url: avatar_thumb_url
              last_login_at: 2000-01-23T04:56:07.000+00:00
              max_projects: 2
              timezone: timezone
              default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              created_at: 2000-01-23T04:56:07.000+00:00
              last_name: last_name
              short_id: short_id
              fraud_score: fraud_score
              emails:
              - null
              - null
              default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              full_name: full_name
              avatar_url: avatar_url
              updated_at: 2000-01-23T04:56:07.000+00:00
              phone_number: phone_number
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              first_name: first_name
              max_organizations: 3
              two_factor_auth: two_factor_auth
              email: email
            updated_at: 2000-01-23T04:56:07.000+00:00
            virtual_circuits:
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            ip_ranges:
            - ip_ranges
            - ip_ranges
            metro:
              country: country
              code: code
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
          href: /routes/e1ff9c2b-051a-4688-965f-153e274f77e0
          type: static
          status: active
        - metal_gateway:
            virtual_network:
              vxlan: 4
              instances:
              - null
              - null
              description: description
              created_at: 2000-01-23T04:56:07.000+00:00
              assigned_to_virtual_circuit: true
              tags:
              - tags
              - tags
              metal_gateways:
              - null
              - null
              metro_code: metro_code
              metro: null
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              facility: null
              assigned_to: null
            updated_at: 2000-01-23T04:56:07.000+00:00
            ip_reservation:
              address: address
              created_at: 2000-01-23T04:56:07.000+00:00
              project:
                devices:
                - null
                - null
                volumes:
                - null
                - null
                created_at: 2000-01-23T04:56:07.000+00:00
                memberships:
                - null
                - null
                bgp_config: null
                tags:
                - tags
                - tags
                max_devices: {}
                ssh_keys:
                - null
                - null
                updated_at: 2000-01-23T04:56:07.000+00:00
                invitations:
                - null
                - null
                members:
                - null
                - null
                organization:
                  website: website
                  address:
                    country: country
                    address: address
                    address2: address2
                    city: city
                    coordinates:
                      latitude: latitude
                      longitude: longitude
                    state: state
                    zip_code: zip_code
                  projects:
                  - null
                  - null
                  credit_amount: 1.4658129
                  created_at: 2000-01-23T04:56:07.000+00:00
                  description: description
                  billing_address: null
                  memberships:
                  - null
                  - null
                  enforce_2fa_at: 2000-01-23T04:56:07.000+00:00
                  twitter: twitter
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  terms: 5
                  members:
                  - null
                  - null
                  name: name
                  logo: logo
                  customdata: {}
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                network_status: {}
                customdata: {}
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                payment_method: null
              bill: true
              project_lite: null
              vrf:
                bgp_dynamic_neighbors_export_route_map: true
                bgp_dynamic_neighbors_bfd_enabled: true
                local_asn: 5
                description: description
                bill: false
                bgp_dynamic_neighbors_enabled: true
                project: null
                created_at: 2000-01-23T04:56:07.000+00:00
                created_by:
                  avatar_thumb_url: avatar_thumb_url
                  last_login_at: 2000-01-23T04:56:07.000+00:00
                  max_projects: 2
                  timezone: timezone
                  default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  created_at: 2000-01-23T04:56:07.000+00:00
                  last_name: last_name
                  short_id: short_id
                  fraud_score: fraud_score
                  emails:
                  - null
                  - null
                  default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  full_name: full_name
                  avatar_url: avatar_url
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  phone_number: phone_number
                  customdata: {}
                  href: href
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  first_name: first_name
                  max_organizations: 3
                  two_factor_auth: two_factor_auth
                  email: email
                updated_at: 2000-01-23T04:56:07.000+00:00
                virtual_circuits:
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                - subnet: 12.0.0.0/30
                  customer_ip: 12.0.0.2
                  description: description
                  project: null
                  created_at: 2000-01-23T04:56:07.000+00:00
                  vrf: null
                  metal_ip: 12.0.0.1
                  speed: 9
                  tags:
                  - tags
                  - tags
                  nni_vlan: 2
                  updated_at: 2000-01-23T04:56:07.000+00:00
                  port: null
                  name: name
                  peer_asn: 7
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  md5: md5
                  status: status
                ip_ranges:
                - ip_ranges
                - ip_ranges
                metro:
                  country: country
                  code: code
                  name: name
                  id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                href: href
              type: vrf
              created_by: null
              network: network
              tags:
              - tags
              - tags
              manageable: true
              metal_gateway:
                gateway_address: 10.1.2.1/27
                updated_at: 2000-01-23T04:56:07.000+00:00
                vlan: 1001
                created_at: 2000-01-23T04:56:07.000+00:00
                href: href
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                state: ready
              address_family: 0
              public: true
              netmask: netmask
              management: true
              metro: null
              cidr: 6
              details: details
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: state
              customdata: {}
              gateway: gateway
            created_at: 2000-01-23T04:56:07.000+00:00
            project: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: ready
            vrf: null
            created_by:
              href: href
          virtual_network:
            vxlan: 4
            instances:
            - null
            - null
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            assigned_to_virtual_circuit: true
            tags:
            - tags
            - tags
            metal_gateways:
            - null
            - null
            metro_code: metro_code
            metro: null
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            facility: null
            assigned_to: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          prefix: 0.0.0.0/0
          next_hop: 192.168.1.254
          created_at: 2000-01-23T04:56:07.000+00:00
          id: e1ff9c2b-051a-4688-965f-153e274f77e0
          vrf:
            bgp_dynamic_neighbors_export_route_map: true
            bgp_dynamic_neighbors_bfd_enabled: true
            local_asn: 5
            description: description
            bill: false
            bgp_dynamic_neighbors_enabled: true
            project: null
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by:
              avatar_thumb_url: avatar_thumb_url
              last_login_at: 2000-01-23T04:56:07.000+00:00
              max_projects: 2
              timezone: timezone
              default_project_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              created_at: 2000-01-23T04:56:07.000+00:00
              last_name: last_name
              short_id: short_id
              fraud_score: fraud_score
              emails:
              - null
              - null
              default_organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              full_name: full_name
              avatar_url: avatar_url
              updated_at: 2000-01-23T04:56:07.000+00:00
              phone_number: phone_number
              customdata: {}
              href: href
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              first_name: first_name
              max_organizations: 3
              two_factor_auth: two_factor_auth
              email: email
            updated_at: 2000-01-23T04:56:07.000+00:00
            virtual_circuits:
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            - subnet: 12.0.0.0/30
              customer_ip: 12.0.0.2
              description: description
              project: null
              created_at: 2000-01-23T04:56:07.000+00:00
              vrf: null
              metal_ip: 12.0.0.1
              speed: 9
              tags:
              - tags
              - tags
              nni_vlan: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              port: null
              name: name
              peer_asn: 7
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              md5: md5
              status: status
            ip_ranges:
            - ip_ranges
            - ip_ranges
            metro:
              country: country
              code: code
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            href: href
          href: /routes/e1ff9c2b-051a-4688-965f-153e274f77e0
          type: static
          status: active
        meta:
          next: null
          total: 0
          last: null
          previous: null
          last_page: 1
          self: null
          first: null
          current_page: 6
    VrfUpdateInput:
      type: object
      properties:
        bgp_dynamic_neighbors_enabled:
          type: boolean
          description: Toggle to enable the dynamic bgp neighbors feature on the VRF
        bgp_dynamic_neighbors_export_route_map:
          type: boolean
          description: Toggle to export the VRF route-map to the dynamic bgp neighbors
        bgp_dynamic_neighbors_bfd_enabled:
          type: boolean
          description: Toggle BFD on dynamic bgp neighbors sessions
        description:
          type: string
        ip_ranges:
          $ref: '#/components/schemas/VrfIpRangeUpdateInput'
        local_asn:
          type: integer
          description: The new `local_asn` value for the VRF. This field cannot be
            updated when there are active Interconnection Virtual Circuits associated
            to the VRF.
          format: int32
        name:
          type: string
    VrfVirtualCircuit:
      type: object
      properties:
        customer_ip:
          type: string
          description: "An IP address from the subnet that will be used on the Customer\
            \ side. This parameter is optional, but if supplied, we will use the other\
            \ usable IP address in the subnet as the Metal IP. By default, the last\
            \ usable IP address in the subnet will be used."
          example: 12.0.0.2
        description:
          type: string
        id:
          type: string
          format: uuid
        md5:
          type: string
          description: The MD5 password for the BGP peering in plaintext (not a checksum).
        metal_ip:
          type: string
          description: "An IP address from the subnet that will be used on the Metal\
            \ side. This parameter is optional, but if supplied, we will use the other\
            \ usable IP address in the subnet as the Customer IP. By default, the\
            \ first usable IP address in the subnet will be used."
          example: 12.0.0.1
        name:
          type: string
        port:
          $ref: '#/components/schemas/Href'
        nni_vlan:
          type: integer
        peer_asn:
          type: integer
          description: The peer ASN that will be used with the VRF on the Virtual
            Circuit.
        project:
          $ref: '#/components/schemas/Href'
        speed:
          type: integer
          description: integer representing bps speed
        status:
          type: string
        subnet:
          type: string
          description: "The /30 or /31 subnet of one of the VRF IP Blocks that will\
            \ be used with the VRF for the Virtual Circuit. This subnet does not have\
            \ to be an existing VRF IP reservation, as we will create the VRF IP reservation\
            \ on creation if it does not exist. The Metal IP and Customer IP must\
            \ be IPs from this subnet. For /30 subnets, the network and broadcast\
            \ IPs cannot be used as the Metal or Customer IP."
          example: 12.0.0.0/30
        tags:
          type: array
          items:
            type: string
        vrf:
          $ref: '#/components/schemas/Vrf'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        subnet: 12.0.0.0/30
        customer_ip: 12.0.0.2
        description: description
        project: null
        created_at: 2000-01-23T04:56:07.000+00:00
        vrf: null
        metal_ip: 12.0.0.1
        speed: 9
        tags:
        - tags
        - tags
        nni_vlan: 2
        updated_at: 2000-01-23T04:56:07.000+00:00
        port: null
        name: name
        peer_asn: 7
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        md5: md5
        status: status
    VrfVirtualCircuitCreateInput:
      required:
      - nni_vlan
      - peer_asn
      - project_id
      - subnet
      - vrf
      type: object
      properties:
        customer_ip:
          type: string
          description: "An IP address from the subnet that will be used on the Customer\
            \ side. This parameter is optional, but if supplied, we will use the other\
            \ usable IP address in the subnet as the Metal IP. By default, the last\
            \ usable IP address in the subnet will be used."
          example: 12.0.0.2
        description:
          type: string
        md5:
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{10,20}$"
          type: string
          description: |
            The plaintext BGP peering password shared by neighbors as an MD5 checksum:
            * must be 10-20 characters long
            * may not include punctuation
            * must be a combination of numbers and letters
            * must contain at least one lowercase, uppercase, and digit character
          nullable: true
        metal_ip:
          type: string
          description: "An IP address from the subnet that will be used on the Metal\
            \ side. This parameter is optional, but if supplied, we will use the other\
            \ usable IP address in the subnet as the Customer IP. By default, the\
            \ first usable IP address in the subnet will be used."
          example: 12.0.0.1
        name:
          type: string
        nni_vlan:
          maximum: 4094
          minimum: 2
          type: integer
        peer_asn:
          type: integer
          description: The peer ASN that will be used with the VRF on the Virtual
            Circuit.
        project_id:
          type: string
          format: uuid
        speed:
          type: integer
          description: speed can be passed as integer number representing bps speed
            or string (e.g. '52m' or '100g' or '4 gbps')
        subnet:
          type: string
          description: "The /30 or /31 subnet of one of the VRF IP Blocks that will\
            \ be used with the VRF for the Virtual Circuit. This subnet does not have\
            \ to be an existing VRF IP reservation, as we will create the VRF IP reservation\
            \ on creation if it does not exist. The Metal IP and Customer IP must\
            \ be IPs from this subnet. For /30 subnets, the network and broadcast\
            \ IPs cannot be used as the Metal or Customer IP. The subnet specified\
            \ must be contained within an already-defined IP Range for the VRF."
          example: 12.0.0.0/30
        tags:
          type: array
          items:
            type: string
        vrf:
          type: string
          description: The UUID of the VRF that will be associated with the Virtual
            Circuit.
          format: uuid
    VrfVirtualCircuitUpdateInput:
      type: object
      properties:
        customer_ip:
          type: string
          description: "An IP address from the subnet that will be used on the Customer\
            \ side. This parameter is optional, but if supplied, we will use the other\
            \ usable IP address in the subnet as the Metal IP. By default, the last\
            \ usable IP address in the subnet will be used."
          example: 12.0.0.2
        description:
          type: string
        md5:
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{10,20}$"
          type: string
          description: |
            The plaintext BGP peering password shared by neighbors as an MD5 checksum:
            * must be 10-20 characters long
            * may not include punctuation
            * must be a combination of numbers and letters
            * must contain at least one lowercase, uppercase, and digit character
        metal_ip:
          type: string
          description: "An IP address from the subnet that will be used on the Metal\
            \ side. This parameter is optional, but if supplied, we will use the other\
            \ usable IP address in the subnet as the Customer IP. By default, the\
            \ first usable IP address in the subnet will be used."
          example: 12.0.0.1
        name:
          type: string
        peer_asn:
          type: integer
          description: The peer ASN that will be used with the VRF on the Virtual
            Circuit.
        speed:
          type: string
          description: Speed can be changed only if it is an interconnection on a
            Dedicated Port
        subnet:
          type: string
          description: "The /30 or /31 subnet of one of the VRF IP Blocks that will\
            \ be used with the VRF for the Virtual Circuit. This subnet does not have\
            \ to be an existing VRF IP reservation, as we will create the VRF IP reservation\
            \ on creation if it does not exist. The Metal IP and Customer IP must\
            \ be IPs from this subnet. For /30 subnets, the network and broadcast\
            \ IPs cannot be used as the Metal or Customer IP."
          example: 12.0.0.0/30
        tags:
          type: array
          items:
            type: string
    DeviceActionInput:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: Action to perform. See Device.actions for possible actions.
          enum:
          - power_on
          - power_off
          - reboot
          - rescue
          - reinstall
        force_delete:
          type: boolean
          description: May be required to perform actions under certain conditions
        deprovision_fast:
          type: boolean
          description: "When type is `reinstall`, enabling fast deprovisioning will\
            \ bypass full disk wiping."
        preserve_data:
          type: boolean
          description: "When type is `reinstall`, preserve the existing data on all\
            \ disks except the operating-system disk."
        operating_system:
          type: string
          description: "When type is `reinstall`, use this `operating_system` (defaults\
            \ to the current `operating system`)"
          example: ubuntu_22_04
        ipxe_script_url:
          type: string
          description: "When type is `reinstall`, use this `ipxe_script_url` (`operating_system`\
            \ must be `custom_ipxe`, defaults to the current `ipxe_script_url`)"
    IPAssignmentUpdateInput:
      type: object
      properties:
        details:
          type: string
        customdata:
          type: object
        tags:
          type: array
          items:
            type: string
    Storage:
      type: object
      properties:
        disks:
          type: array
          items:
            $ref: '#/components/schemas/Disk'
        raid:
          type: array
          items:
            $ref: '#/components/schemas/Raid'
        filesystems:
          type: array
          items:
            $ref: '#/components/schemas/Filesystem'
      example:
        disks:
        - partitions:
          - number: 3
            size: size
            label: label
          - number: 3
            size: size
            label: label
          wipeTable: true
          device: device
        - partitions:
          - number: 3
            size: size
            label: label
          - number: 3
            size: size
            label: label
          wipeTable: true
          device: device
        filesystems:
        - mount:
            format: format
            options:
            - options
            - options
            device: device
            point: point
        - mount:
            format: format
            options:
            - options
            - options
            device: device
            point: point
        raid:
        - devices:
          - devices
          - devices
          level: level
          name: name
        - devices:
          - devices
          - devices
          level: level
          name: name
    BondPortData:
      type: object
      properties:
        id:
          type: string
          description: ID of the bonding port
          format: uuid
        name:
          type: string
          description: Name of the port interface for the bond ("bond0")
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    PortData:
      type: object
      properties:
        mac:
          type: string
          description: MAC address is set for NetworkPort ports
        bonded:
          type: boolean
          description: Bonded is true for NetworkPort ports in a bond and NetworkBondPort
            ports that are active
      example:
        bonded: true
        mac: mac
    BgpRoute:
      type: object
      properties:
        exact:
          type: boolean
        route:
          type: string
          example: 10.32.16.0/31
    Disk:
      type: object
      properties:
        device:
          type: string
        wipeTable:
          type: boolean
        partitions:
          type: array
          items:
            $ref: '#/components/schemas/Partition'
      example:
        partitions:
        - number: 3
          size: size
          label: label
        - number: 3
          size: size
          label: label
        wipeTable: true
        device: device
    Raid:
      type: object
      properties:
        devices:
          type: array
          items:
            type: string
        level:
          type: string
        name:
          type: string
      example:
        devices:
        - devices
        - devices
        level: level
        name: name
    Filesystem:
      type: object
      properties:
        mount:
          $ref: '#/components/schemas/Mount'
      example:
        mount:
          format: format
          options:
          - options
          - options
          device: device
          point: point
    Partition:
      type: object
      properties:
        label:
          type: string
        number:
          type: integer
          format: int32
        size:
          type: string
      example:
        number: 3
        size: size
        label: label
    Mount:
      type: object
      properties:
        device:
          type: string
        format:
          type: string
        point:
          type: string
        options:
          type: array
          items:
            type: string
      example:
        format: format
        options:
        - options
        - options
        device: device
        point: point
    timeframe:
      required:
      - ended_at
      - started_at
      type: object
      properties:
        ended_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
    id_activate_body:
      type: object
      properties:
        description:
          type: string
    id_move_body:
      type: object
      properties:
        project_id:
          type: string
          format: uuid
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/IPAssignment'
      - $ref: '#/components/schemas/IPReservation'
      - $ref: '#/components/schemas/VrfIpReservation'
    inline_response_200_1:
      oneOf:
      - $ref: '#/components/schemas/MetalGateway'
      - $ref: '#/components/schemas/VrfMetalGateway'
    id_devices_body:
      oneOf:
      - $ref: '#/components/schemas/DeviceCreateInMetroInput'
      - $ref: '#/components/schemas/DeviceCreateInFacilityInput'
    id_ips_body:
      oneOf:
      - $ref: '#/components/schemas/IPReservationRequestInput'
      - $ref: '#/components/schemas/VrfIpReservationCreateInput'
    inline_response_201:
      oneOf:
      - $ref: '#/components/schemas/IPReservation'
      - $ref: '#/components/schemas/VrfIpReservation'
    project_id_metalgateways_body:
      oneOf:
      - $ref: '#/components/schemas/MetalGatewayCreateInput'
      - $ref: '#/components/schemas/VrfMetalGatewayCreateInput'
    CreateSelfServiceReservationRequest_period:
      type: object
      properties:
        count:
          type: integer
          enum:
          - 12
          - 36
        unit:
          type: string
          enum:
          - monthly
      example:
        unit: monthly
        count: 1
    Device_actions:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
      example:
        name: name
        type: type
    Metadata_network_network_bonding:
      type: object
      properties:
        link_aggregation:
          type: string
        mac:
          type: string
        mode:
          type: integer
      example:
        link_aggregation: link_aggregation
        mode: 0
        mac: mac
    Metadata_network_network:
      type: object
      properties:
        bonding:
          $ref: '#/components/schemas/Metadata_network_network_bonding'
      example:
        bonding:
          link_aggregation: link_aggregation
          mode: 0
          mac: mac
    Metadata_network:
      type: object
      properties:
        addresses:
          type: array
          items:
            type: string
        interfaces:
          type: array
          items:
            type: object
        network:
          $ref: '#/components/schemas/Metadata_network_network'
      example:
        addresses:
        - addresses
        - addresses
        interfaces:
        - {}
        - {}
        network:
          bonding:
            link_aggregation: link_aggregation
            mode: 0
            mac: mac
    Plan_price:
      type: object
      properties:
        hour:
          type: number
          format: double
          example: 1.23
      example:
        hour: 1.23
    Plan_available_in:
      type: object
      properties:
        href:
          type: string
          description: href to the Facility
        price:
          $ref: '#/components/schemas/Plan_price'
      example:
        price:
          hour: 1.23
        href: href
    Plan_available_in_metros:
      type: object
      properties:
        href:
          type: string
          description: href to the Metro
        price:
          $ref: '#/components/schemas/Plan_price'
      example:
        price: null
        href: href
    Plan_specs_cpus:
      type: object
      properties:
        count:
          type: integer
        type:
          type: string
      example:
        count: 6
        type: type
    Plan_specs_memory:
      type: object
      properties:
        total:
          type: string
      example:
        total: total
    Plan_specs_drives:
      type: object
      properties:
        count:
          type: integer
        type:
          type: string
          enum:
          - HDD
          - SSD
          - NVME
        size:
          type: string
          example: 3.84TB
        category:
          type: string
          enum:
          - boot
          - cache
          - storage
      example:
        size: 3.84TB
        count: 1
        type: HDD
        category: boot
    Plan_specs_nics:
      type: object
      properties:
        count:
          type: integer
          example: 2
        type:
          type: string
          enum:
          - 1Gbps
          - 10Gbps
          - 25Gbps
      example:
        count: 2
        type: 1Gbps
    Plan_specs_features:
      type: object
      properties:
        raid:
          type: boolean
        txt:
          type: boolean
        uefi:
          type: boolean
      example:
        txt: true
        uefi: true
        raid: true
    Plan_specs:
      type: object
      properties:
        cpus:
          type: array
          items:
            $ref: '#/components/schemas/Plan_specs_cpus'
        memory:
          $ref: '#/components/schemas/Plan_specs_memory'
        drives:
          type: array
          items:
            $ref: '#/components/schemas/Plan_specs_drives'
        nics:
          type: array
          items:
            $ref: '#/components/schemas/Plan_specs_nics'
        features:
          $ref: '#/components/schemas/Plan_specs_features'
      example:
        features:
          txt: true
          uefi: true
          raid: true
        memory:
          total: total
        cpus:
        - count: 6
          type: type
        - count: 6
          type: type
        drives:
        - size: 3.84TB
          count: 1
          type: HDD
          category: boot
        - size: 3.84TB
          count: 1
          type: HDD
          category: boot
        nics:
        - count: 2
          type: 1Gbps
        - count: 2
          type: 1Gbps
    PortConvertLayer3Input_request_ips:
      type: object
      properties:
        address_family:
          type: integer
        public:
          type: boolean
    PortVlanAssignmentBatch_vlan_assignments:
      type: object
      properties:
        id:
          type: string
          format: uuid
        native:
          type: boolean
        state:
          type: string
          enum:
          - assigned
          - unassigned
        vlan:
          type: integer
      example:
        vlan: 6
        native: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: assigned
    PortVlanAssignmentBatchCreateInput_vlan_assignments:
      type: object
      properties:
        native:
          type: boolean
        state:
          type: string
          enum:
          - assigned
          - unassigned
        vlan:
          type: string
    SpotMarketRequestCreateInput_instance_parameters:
      type: object
      properties:
        always_pxe:
          type: boolean
        billing_cycle:
          type: string
        customdata:
          type: object
        description:
          type: string
        features:
          type: array
          items:
            type: string
        hostname:
          type: string
        hostnames:
          type: array
          items:
            type: string
        locked:
          type: boolean
          description: "Whether the device should be locked, preventing accidental\
            \ deletion."
        no_ssh_keys:
          type: boolean
        operating_system:
          type: string
        plan:
          type: string
        private_ipv4_subnet_size:
          type: integer
        project_ssh_keys:
          type: array
          items:
            type: string
            format: uuid
        public_ipv4_subnet_size:
          type: integer
        tags:
          type: array
          items:
            type: string
        termination_time:
          type: string
          format: date-time
        user_ssh_keys:
          type: array
          description: The UUIDs of users whose SSH keys should be included on the
            provisioned device.
          items:
            type: string
            format: uuid
        userdata:
          type: string
  parameters:
    DeviceSearch:
      name: search
      in: query
      description: "Search by hostname, description, short_id, reservation short_id,\
        \ tags, plan name, plan slug, facility code, facility name, operating system\
        \ name, operating system slug, IP addresses."
      schema:
        type: string
    ProjectName:
      name: name
      in: query
      description: Filter results by name.
      schema:
        type: string
    Page:
      name: page
      in: query
      description: Page to return
      schema:
        maximum: 100000
        minimum: 1
        type: integer
        format: int32
        default: 1
    PerPage:
      name: per_page
      in: query
      description: Items returned per page
      schema:
        maximum: 1000
        minimum: 1
        type: integer
        format: int32
        default: 10
    Include:
      name: include
      in: query
      description: |-
        Nested attributes to include. Included objects will return their full
        attributes. Attribute names can be dotted (up to 3 levels) to included deeply
        nested objects.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Exclude:
      name: exclude
      in: query
      description: |-
        Nested attributes to exclude. Excluded objects will return only the href
        attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply
        nested objects.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
  requestBodies:
    InterconnectionCreateInput:
      description: Interconnection details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InterconnectionCreateInput'
      required: true
    InvitationInput:
      description: Invitation to create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvitationInput'
      required: true
    PortAssignInput:
      description: "Virtual Network ID. May be the UUID of the Virtual Network record,\
        \ or the VLAN value itself (ex: '1001')."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortAssignInput'
      required: true
    SSHKeyCreateInput:
      description: ssh key to create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SSHKeyCreateInput'
      required: true
  securitySchemes:
    x_auth_token:
      type: apiKey
      description: |
        HTTP header containing the User or Project API key that will be used to authenticate the request.
      name: X-Auth-Token
      in: header
      x-displayName: X-Auth-Token
x-tagGroups:
- name: Accounts and Organization
  tags:
  - Authentication
  - Emails
  - Invitations
  - Memberships
  - Organizations
  - OTPs
  - PasswordResetTokens
  - PaymentMethods
  - Projects
  - SSHKeys
  - SupportRequest
  - TransferRequests
  - TwoFactorAuth
  - Users
  - UserVerificationTokens
- name: Services and Billing
  tags:
  - Events
  - Facilities
  - Incidents
  - Invoices
  - Licenses
  - Metros
  - Plans
  - Usages
- name: Servers
  tags:
  - Devices
  - Batches
  - Capacity
  - HardwareReservations
  - OperatingSystems
  - Ports
  - SelfServiceReservations
  - SpotMarket
  - Userdata
  - Volumes
- name: Networking
  tags:
  - BGP
  - Interconnections
  - IPAddresses
  - MetalGateways
  - VLANs
  - VRFs
